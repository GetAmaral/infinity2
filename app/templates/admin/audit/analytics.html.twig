{% extends 'base.html.twig' %}

{% block title %}Audit Analytics{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
    /* Analytics Table Styles - Dark Theme (Default) */
    .analytics-table {
        background-color: rgba(255, 255, 255, 0.02) !important;
        --bs-table-bg: transparent !important;
        --bs-table-striped-bg: transparent !important;
        --bs-table-hover-bg: rgba(255, 255, 255, 0.05) !important;
    }

    .analytics-table thead th {
        background-color: rgba(59, 130, 246, 0.1) !important;
        color: rgba(255, 255, 255, 0.9);
        border-color: rgba(255, 255, 255, 0.1) !important;
    }

    .analytics-table tbody td {
        background-color: transparent !important;
        color: rgba(255, 255, 255, 0.9);
        border-color: rgba(255, 255, 255, 0.1) !important;
    }

    .analytics-table tbody tr {
        background-color: transparent !important;
    }

    .analytics-table tbody tr:hover {
        background-color: rgba(255, 255, 255, 0.05) !important;
    }

    /* Analytics Table Styles - Light Theme */
    [data-theme="light"] .analytics-table {
        background-color: rgba(255, 255, 255, 0.9) !important;
        --bs-table-bg: rgba(255, 255, 255, 0.9) !important;
        --bs-table-striped-bg: rgba(0, 0, 0, 0.02) !important;
        --bs-table-hover-bg: rgba(0, 0, 0, 0.05) !important;
    }

    [data-theme="light"] .analytics-table thead th {
        background-color: rgba(59, 130, 246, 0.08) !important;
        color: #1a1a1a;
        border-color: rgba(0, 0, 0, 0.1) !important;
    }

    [data-theme="light"] .analytics-table tbody td {
        color: #1a1a1a;
        background-color: transparent !important;
        border-color: rgba(0, 0, 0, 0.1) !important;
    }

    [data-theme="light"] .analytics-table tbody tr {
        background-color: transparent !important;
    }

    [data-theme="light"] .analytics-table tbody tr:hover {
        background-color: rgba(0, 0, 0, 0.05) !important;
    }
</style>
{% endblock %}

{% block body %}
<div class="container-fluid py-4">
    {# Header #}
    <div class="infinity-card p-4 mb-4">
        <div class="d-flex justify-content-between align-items-center">
            <h1 class="text-gradient mb-0">
                <i class="bi bi-graph-up me-2"></i>Audit Analytics Dashboard
            </h1>
            <div>
                <a href="{{ path('admin_audit_index') }}" class="btn btn-outline-light">
                    <i class="bi bi-arrow-left me-1"></i>Back to Audit Log
                </a>
            </div>
        </div>
    </div>

    {# Summary Statistics #}
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="infinity-card p-4 text-center">
                <h6 class="text-muted mb-2">Total Events</h6>
                <h2 class="text-gradient mb-0">{{ metrics.summary.total_events|number_format }}</h2>
            </div>
        </div>
        <div class="col-md-3">
            <div class="infinity-card p-4 text-center">
                <h6 class="text-muted mb-2">Today</h6>
                <h2 class="text-primary mb-0">{{ metrics.summary.events_today|number_format }}</h2>
            </div>
        </div>
        <div class="col-md-3">
            <div class="infinity-card p-4 text-center">
                <h6 class="text-muted mb-2">This Week</h6>
                <h2 class="text-success mb-0">{{ metrics.summary.events_week|number_format }}</h2>
            </div>
        </div>
        <div class="col-md-3">
            <div class="infinity-card p-4 text-center">
                <h6 class="text-muted mb-2">Anomalies</h6>
                <h2 class="{{ anomalies|length > 0 ? 'text-danger' : 'text-muted' }} mb-0">
                    {{ anomalies|length }}
                </h2>
            </div>
        </div>
    </div>

    {# Anomalies Alert #}
    {% if anomalies|length > 0 %}
    <div class="alert alert-warning mb-4" role="alert">
        <h5 class="alert-heading">
            <i class="bi bi-exclamation-triangle me-2"></i>{{ anomalies|length }} Anomal{{ anomalies|length > 1 ? 'ies' : 'y' }} Detected
        </h5>
        {% for anomaly in anomalies %}
        <div class="mb-2">
            <span class="badge bg-{{ anomaly.severity == 'high' ? 'danger' : (anomaly.severity == 'medium' ? 'warning' : 'info') }}">
                {{ anomaly.severity|upper }}
            </span>
            <strong>{{ anomaly.type|replace({'_': ' '})|title }}:</strong> {{ anomaly.message }}
        </div>
        {% endfor %}
    </div>
    {% endif %}

    {# Charts Row #}
    <div class="row mb-4">
        <div class="col-md-6 mb-4">
            <div class="infinity-card p-4">
                <h5 class="mb-3">
                    <i class="bi bi-clock me-2"></i>Activity by Hour (Last 24h)
                </h5>
                <div style="position: relative; height: 350px; padding: 10px;">
                    <canvas id="hourlyChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6 mb-4">
            <div class="infinity-card p-4">
                <h5 class="mb-3">
                    <i class="bi bi-pie-chart me-2"></i>Action Breakdown (Last 7 Days)
                </h5>
                <div style="position: relative; height: 350px; padding: 10px;">
                    <canvas id="actionChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    {# Top Users & Entities Row #}
    <div class="row mb-4">
        <div class="col-md-6 mb-4">
            <div class="infinity-card p-4">
                <h5 class="mb-3">
                    <i class="bi bi-people me-2"></i>Top Active Users (Last 7 Days)
                </h5>
                {% if metrics.top_users is empty %}
                    <p class="text-muted">No user activity data available</p>
                {% else %}
                    <div class="table-responsive">
                        <table class="table table-sm analytics-table">
                            <thead>
                                <tr>
                                    <th>User</th>
                                    <th class="text-end">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for row in metrics.top_users %}
                                <tr>
                                    <td>
                                        <i class="bi bi-person-circle me-1"></i>
                                        {{ row[0].email }}
                                    </td>
                                    <td class="text-end">
                                        <span class="badge bg-primary">{{ row.action_count }}</span>
                                    </td>
                                </tr>
                                {% endfor %}
                            </tbody>
                        </table>
                    </div>
                {% endif %}
            </div>
        </div>
        <div class="col-md-6 mb-4">
            <div class="infinity-card p-4">
                <h5 class="mb-3">
                    <i class="bi bi-box me-2"></i>Most Modified Entities (Last 7 Days)
                </h5>
                {% if metrics.top_entities is empty %}
                    <p class="text-muted">No entity modification data available</p>
                {% else %}
                    <div class="table-responsive">
                        <table class="table table-sm analytics-table">
                            <thead>
                                <tr>
                                    <th>Entity Type</th>
                                    <th class="text-end">Modifications</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for row in metrics.top_entities %}
                                <tr>
                                    <td>
                                        <i class="bi bi-file-earmark me-1"></i>
                                        {{ row.entity_class|split('\\')|last }}
                                    </td>
                                    <td class="text-end">
                                        <span class="badge bg-secondary">{{ row.modification_count }}</span>
                                    </td>
                                </tr>
                                {% endfor %}
                            </tbody>
                        </table>
                    </div>
                {% endif %}
            </div>
        </div>
    </div>

    {# Predictions Row #}
    <div class="row">
        <div class="col-md-6 mb-4">
            <div class="infinity-card p-4">
                <h5 class="mb-3">
                    <i class="bi bi-graph-up-arrow me-2"></i>Next Week Prediction
                </h5>
                <div class="mb-3">
                    <h6 class="text-muted">Predicted Events</h6>
                    <h3 class="text-primary">{{ prediction.predicted_events|number_format }}</h3>
                </div>
                <div class="mb-3">
                    <h6 class="text-muted">Trend</h6>
                    <span class="badge bg-{{ prediction.trend == 'increasing' ? 'success' : (prediction.trend == 'decreasing' ? 'danger' : 'secondary') }}">
                        <i class="bi bi-{{ prediction.trend == 'increasing' ? 'arrow-up' : (prediction.trend == 'decreasing' ? 'arrow-down' : 'dash') }} me-1"></i>
                        {{ prediction.trend|upper }}
                    </span>
                </div>
                <div>
                    <h6 class="text-muted">Confidence</h6>
                    <div class="progress" style="height: 25px;">
                        <div class="progress-bar bg-{{ prediction.confidence > 0.7 ? 'success' : (prediction.confidence > 0.4 ? 'warning' : 'danger') }}"
                             role="progressbar"
                             style="width: {{ (prediction.confidence * 100)|round }}%"
                             aria-valuenow="{{ (prediction.confidence * 100)|round }}"
                             aria-valuemin="0"
                             aria-valuemax="100">
                            {{ (prediction.confidence * 100)|round }}%
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6 mb-4">
            <div class="infinity-card p-4">
                <h5 class="mb-3">
                    <i class="bi bi-speedometer2 me-2"></i>Capacity Recommendation
                </h5>
                <div class="alert alert-{{ capacity.status == 'warning' ? 'warning' : (capacity.status == 'info' ? 'info' : 'success') }} mb-3">
                    <h6 class="alert-heading">{{ capacity.message }}</h6>
                    <p class="mb-0">{{ capacity.recommendation }}</p>
                </div>
                <div>
                    <h6 class="text-muted">Historical Data (Last 4 Weeks)</h6>
                    <ul class="list-unstyled">
                        {% for week_count in prediction.historical_data %}
                        <li>
                            <i class="bi bi-calendar-week me-2"></i>
                            Week {{ loop.index }}: {{ week_count|number_format }} events
                        </li>
                        {% endfor %}
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="module">
    import Chart from 'chart.js/auto';

    // Prevent multiple initializations
    if (window.auditChartsInitialized) {
        console.log('Charts already initialized');
    } else {
        window.auditChartsInitialized = true;

        // Detect theme
        const isDarkTheme = document.documentElement.getAttribute('data-theme') !== 'light';
        const textColor = isDarkTheme ? 'rgba(255, 255, 255, 0.9)' : '#1a1a1a';
        const gridColor = isDarkTheme ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';
        const tooltipBg = isDarkTheme ? 'rgba(26, 29, 41, 0.95)' : 'rgba(255, 255, 255, 0.95)';
        const chartBg = isDarkTheme ? 'rgba(59, 130, 246, 0.7)' : 'rgba(59, 130, 246, 0.8)';
        const chartBorder = isDarkTheme ? 'rgba(59, 130, 246, 1)' : 'rgba(59, 130, 246, 1)';

        // Set Chart.js defaults for theme
        Chart.defaults.color = textColor;
        Chart.defaults.borderColor = gridColor;

        // Hourly distribution chart
        const hourlyChart = new Chart(document.getElementById('hourlyChart'), {
        type: 'bar',
        data: {
            labels: {{ metrics.hourly_distribution.hours|json_encode|raw }},
            datasets: [{
                label: 'Events per Hour',
                data: {{ metrics.hourly_distribution.counts|json_encode|raw }},
                backgroundColor: chartBg,
                borderColor: chartBorder,
                borderWidth: 1,
                borderRadius: 4
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            layout: {
                padding: {
                    left: 10,
                    right: 10,
                    top: 10,
                    bottom: 10
                }
            },
            scales: {
                x: {
                    title: {
                        display: true,
                        text: 'Hour of Day',
                        color: textColor,
                        font: {
                            size: 12,
                            weight: 'bold'
                        }
                    },
                    grid: {
                        color: gridColor,
                        display: false
                    },
                    ticks: {
                        color: textColor,
                        font: {
                            size: 11
                        }
                    }
                },
                y: {
                    title: {
                        display: true,
                        text: 'Number of Events',
                        color: textColor,
                        font: {
                            size: 12,
                            weight: 'bold'
                        }
                    },
                    beginAtZero: true,
                    grid: {
                        color: gridColor
                    },
                    ticks: {
                        stepSize: 1,
                        color: textColor,
                        font: {
                            size: 11
                        }
                    }
                }
            },
            plugins: {
                legend: {
                    display: true,
                    position: 'top',
                    labels: {
                        color: textColor,
                        font: {
                            size: 11
                        }
                    }
                },
                tooltip: {
                    backgroundColor: tooltipBg,
                    titleColor: textColor,
                    bodyColor: textColor,
                    borderColor: isDarkTheme ? 'rgba(59, 130, 246, 0.5)' : 'rgba(0, 0, 0, 0.2)',
                    borderWidth: 1,
                    padding: 10,
                    displayColors: true
                }
            }
        }
    });

    // Action breakdown pie chart
    const actionChart = new Chart(document.getElementById('actionChart'), {
        type: 'pie',
        data: {
            labels: {{ metrics.action_breakdown.labels|json_encode|raw }},
            datasets: [{
                data: {{ metrics.action_breakdown.data|json_encode|raw }},
                backgroundColor: {{ metrics.action_breakdown.colors|json_encode|raw }},
                borderWidth: isDarkTheme ? 2 : 1,
                borderColor: isDarkTheme ? '#1a1d29' : '#ffffff'
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            layout: {
                padding: {
                    left: 10,
                    right: 20,
                    top: 10,
                    bottom: 10
                }
            },
            plugins: {
                legend: {
                    position: 'bottom',
                    align: 'center',
                    labels: {
                        color: textColor,
                        padding: 12,
                        font: {
                            size: 12
                        },
                        boxWidth: 15,
                        boxHeight: 15,
                        usePointStyle: false
                    }
                },
                tooltip: {
                    backgroundColor: tooltipBg,
                    titleColor: textColor,
                    bodyColor: textColor,
                    borderColor: isDarkTheme ? 'rgba(59, 130, 246, 0.5)' : 'rgba(0, 0, 0, 0.2)',
                    borderWidth: 1,
                    padding: 10,
                    displayColors: true,
                    callbacks: {
                        label: function(context) {
                            const label = context.label || '';
                            const value = context.parsed || 0;
                            const total = context.dataset.data.reduce((a, b) => a + b, 0);
                            const percentage = ((value / total) * 100).toFixed(1);
                            return label + ': ' + value + ' (' + percentage + '%)';
                        }
                    }
                }
            }
        }
    });

        // Store chart instances globally for cleanup
        window.auditCharts = { hourlyChart, actionChart };
    }

    // Clean up on page unload (Turbo navigation)
    document.addEventListener('turbo:before-render', function() {
        if (window.auditCharts) {
            window.auditCharts.hourlyChart?.destroy();
            window.auditCharts.actionChart?.destroy();
            window.auditChartsInitialized = false;
        }
    });
</script>
{% endblock %}
