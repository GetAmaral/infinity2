{% extends 'base.html.twig' %}

{% block title %}{{ 'settings.title'|trans({}, 'settings') }} - {{ 'nav.brand'|trans }}{% endblock %}

{% block body %}
<!-- Navigation -->
<div class="mb-4">
    <a href="{{ path('app_home') }}" class="btn luminai-btn-ai">
        <i class="bi bi-arrow-left me-2"></i>{{ 'ui.back.to.dashboard'|trans }}
    </a>
</div>

<!-- Settings Header -->
<div class="ai-dashboard-header mb-4">
    <div class="d-flex align-items-center">
        <i class="bi bi-gear text-neon fs-2 me-3"></i>
        <div>
            <h1 class="text-gradient mb-1">{{ 'settings.title'|trans({}, 'settings') }}</h1>
            <p class="text-secondary mb-0">{{ 'page.settings.description'|trans }}</p>
        </div>
    </div>
</div>

<!-- Settings Categories -->
<div class="bento-grid">
    <!-- Theme Selection -->
    <div class="bento-item large">
        <div class="luminai-card ai-enhanced p-4 h-100">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h5 class="text-neon mb-0">
                    <i class="bi bi-palette me-2"></i>{{ 'theme.settings'|trans({}, 'settings') }}
                </h5>
                <div class="ai-status-indicator" id="currentThemeStatus">
                    {{ 'theme.dark'|trans({}, 'settings') }}
                </div>
            </div>

            <div class="row">
                <!-- Dark Theme -->
                <div class="col-md-6 mb-3">
                    <div class="theme-card" data-theme="dark" id="darkTheme" onclick="window.switchTheme('dark')">
                        <div class="theme-preview-mini dark-preview-mini">
                            <div class="theme-header"></div>
                            <div class="theme-content">
                                <div class="theme-card-mini"></div>
                                <div class="theme-sidebar-mini"></div>
                            </div>
                        </div>
                        <div class="theme-info p-3">
                            <h6 class="theme-card-title mb-2">
                                <i class="bi bi-moon-stars me-2"></i>{{ 'theme.dark'|trans({}, 'settings') }}
                            </h6>
                            <p class="text-secondary mb-0" style="font-size: 0.875rem;">{{ 'theme.dark.description'|trans({}, 'settings') }}</p>
                        </div>
                    </div>
                </div>

                <!-- Light Theme -->
                <div class="col-md-6 mb-3">
                    <div class="theme-card" data-theme="light" id="lightTheme" onclick="window.switchTheme('light')">
                        <div class="theme-preview-mini light-preview-mini">
                            <div class="theme-header"></div>
                            <div class="theme-content">
                                <div class="theme-card-mini"></div>
                                <div class="theme-sidebar-mini"></div>
                            </div>
                        </div>
                        <div class="theme-info p-3">
                            <h6 class="theme-card-title mb-2">
                                <i class="bi bi-sun me-2"></i>{{ 'theme.light'|trans({}, 'settings') }}
                            </h6>
                            <p class="text-secondary mb-0" style="font-size: 0.875rem;">{{ 'theme.light.description'|trans({}, 'settings') }}</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Language Preferences -->
    <div class="bento-item">
        <div class="luminai-card p-4 h-100">
            <div class="mb-4">
                <div class="d-flex align-items-center mb-3">
                    <i class="bi bi-translate text-neon fs-4 me-3"></i>
                    <h5 class="text-white mb-0">{{ 'settings.language.preferences'|trans({}, 'settings') }}</h5>
                </div>

                <div class="mb-3">
                    <label class="form-label text-secondary">{{ 'settings.current.language'|trans({}, 'settings') }}:</label>
                    <div class="text-white fw-semibold">{{ ('language.' ~ current_locale)|trans }}</div>
                </div>

                <form method="post" action="{{ path('app_settings_locale') }}" data-controller="form-navigation">
                    <div class="mb-3">
                        <label for="locale" class="form-label text-secondary">{{ 'settings.choose.language'|trans({}, 'settings') }}:</label>
                        <select name="locale" id="locale" class="form-select" data-preference="locale" style="background: var(--luminai-dark-surface); border: 1px solid rgba(255, 255, 255, 0.2); color: white;" onchange="this.form.submit()">
                            {% for locale_code, locale_name in supported_locales %}
                                <option value="{{ locale_code }}" {{ locale_code == current_locale ? 'selected' : '' }}>
                                    {{ locale_name|trans }}
                                </option>
                            {% endfor %}
                        </select>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- UI Preferences -->
    <div class="bento-item">
        <div class="luminai-card p-4 h-100">
            <div class="mb-4">
                <div class="d-flex align-items-center mb-3">
                    <i class="bi bi-sliders text-neon fs-4 me-3"></i>
                    <h5 class="text-white mb-0">{{ 'settings.ui.preferences'|trans({}, 'settings') }}</h5>
                </div>

                <div class="space-y-3">
                    <!-- Animations -->
                    <div class="form-check form-switch">
                        <input class="form-check-input" type="checkbox" id="animations_enabled" data-preference="animations_enabled"
                               checked="{{ user_preferences.animations_enabled ? 'checked' : '' }}">
                        <label class="form-check-label text-secondary" for="animations_enabled">
                            {{ 'settings.enable.animations'|trans({}, 'settings') }}
                        </label>
                    </div>

                    <!-- Sound -->
                    <div class="form-check form-switch">
                        <input class="form-check-input" type="checkbox" id="sound_enabled" data-preference="sound_enabled"
                               checked="{{ user_preferences.sound_enabled ? 'checked' : '' }}">
                        <label class="form-check-label text-secondary" for="sound_enabled">
                            {{ 'settings.enable.sound'|trans({}, 'settings') }}
                        </label>
                    </div>

                    <!-- Compact Mode -->
                    <div class="form-check form-switch">
                        <input class="form-check-input" type="checkbox" id="compact_mode" data-preference="compact_mode"
                               checked="{{ user_preferences.compact_mode ? 'checked' : '' }}">
                        <label class="form-check-label text-secondary" for="compact_mode">
                            {{ 'settings.compact.mode'|trans({}, 'settings') }}
                        </label>
                    </div>

                    <!-- Items per page -->
                    <div class="mb-3">
                        <label for="items_per_page" class="form-label text-secondary">{{ 'settings.items.per.page'|trans({}, 'settings') }}:</label>
                        <select id="items_per_page" class="form-select" data-preference="items_per_page"
                                style="background: var(--luminai-dark-surface); border: 1px solid rgba(255, 255, 255, 0.2); color: white;">
                            <option value="10" {{ user_preferences.items_per_page == 10 ? 'selected' : '' }}>10</option>
                            <option value="25" {{ user_preferences.items_per_page == 25 ? 'selected' : '' }}>25</option>
                            <option value="50" {{ user_preferences.items_per_page == 50 ? 'selected' : '' }}>50</option>
                            <option value="100" {{ user_preferences.items_per_page == 100 ? 'selected' : '' }}>100</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Session Management -->
    <div class="bento-item">
        <div class="luminai-card p-4 h-100">
            <div class="mb-4">
                <div class="d-flex align-items-center mb-3">
                    <i class="bi bi-clock-history text-neon fs-4 me-3"></i>
                    <h5 class="text-white mb-0">{{ 'settings.session.management'|trans }}</h5>
                </div>

                <div class="space-y-3">
                    <!-- Sound Alerts -->
                    <div class="form-check form-switch">
                        <input class="form-check-input" type="checkbox" id="session_sound_enabled" data-preference="session_sound_enabled" checked>
                        <label class="form-check-label text-secondary" for="session_sound_enabled">
                            <i class="bi bi-volume-up me-1"></i>{{ 'settings.session.sound.alerts'|trans }}
                        </label>
                        <div class="text-muted small mt-1">{{ 'settings.session.sound.alerts.help'|trans }}</div>
                    </div>

                    <!-- Auto-Extend -->
                    <div class="form-check form-switch">
                        <input class="form-check-input" type="checkbox" id="session_auto_extend" data-preference="session_auto_extend" checked>
                        <label class="form-check-label text-secondary" for="session_auto_extend">
                            <i class="bi bi-arrow-repeat me-1"></i>{{ 'settings.session.auto.extend'|trans }}
                        </label>
                        <div class="text-muted small mt-1">{{ 'settings.session.auto.extend.help'|trans }}</div>
                    </div>

                    <!-- Session Info -->
                    <div class="mt-4 p-3 rounded" style="background: rgba(0, 245, 255, 0.05); border: 1px solid rgba(0, 245, 255, 0.2);">
                        <div class="text-white small">
                            <strong><i class="bi bi-info-circle me-1"></i>{{ 'settings.session.info'|trans }}</strong>
                            <div class="text-secondary mt-2">{{ 'settings.session.info.description'|trans }}</div>
                        </div>
                    </div>

                    <!-- View Analytics -->
                    <button class="btn btn-sm luminai-btn-ai w-100 mt-3" onclick="window.showSessionAnalytics()">
                        <i class="bi bi-graph-up me-2"></i>{{ 'settings.session.view.analytics'|trans }}
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- AI Configuration -->
    <div class="bento-item">
        <div class="luminai-card p-4 h-100">
            <div class="text-center mb-4">
                <div class="p-3 rounded-3 mx-auto mb-3" style="background: linear-gradient(135deg, var(--luminai-primary), var(--luminai-secondary)); width: 80px; height: 80px; display: flex; align-items: center; justify-content: center;">
                    <i class="bi bi-robot text-white fs-2"></i>
                </div>
                <h5 class="text-white mb-2">{{ 'ai.settings'|trans({}, 'insights') }}</h5>
                <p class="text-secondary mb-3">{{ 'ai.settings.description'|trans({}, 'insights') }}</p>
                <button class="btn luminai-btn-ai" disabled>
                    <i class="bi bi-magic me-2"></i>{{ 'misc.coming.soon'|trans }}
                </button>
            </div>
        </div>
    </div>

    <!-- System Information -->
    <div class="bento-item large">
        <div class="luminai-card p-4 h-100">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h5 class="text-neon mb-0">
                    <i class="bi bi-info-circle me-2"></i>{{ 'system.information'|trans }}
                </h5>
                <div class="ai-status-indicator">
                    {{ 'system.status'|trans }}
                </div>
            </div>

            <div class="row">
                <div class="col-md-3 mb-3">
                    <div class="metric-card">
                        <div class="metric-value" style="font-size: 1.5rem;">v1.0</div>
                        <div class="metric-label">{{ 'system.version'|trans }}</div>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="metric-card">
                        <div class="metric-value" style="font-size: 1.5rem;">PHP 8.4</div>
                        <div class="metric-label">{{ 'system.runtime'|trans }}</div>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="metric-card">
                        <div class="metric-value" style="font-size: 1.5rem;">Symfony 7.3</div>
                        <div class="metric-label">{{ 'system.framework'|trans }}</div>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="metric-card">
                        <div class="metric-value" style="font-size: 1.5rem;">PostgreSQL 18</div>
                        <div class="metric-label">{{ 'system.database'|trans }}</div>
                    </div>
                </div>
            </div>

            <div class="mt-4 p-3 rounded" style="background: rgba(0, 245, 255, 0.05); border: 1px solid rgba(0, 245, 255, 0.2);">
                <div class="d-flex align-items-center">
                    <i class="bi bi-shield-check text-neon me-2"></i>
                    <div>
                        <strong class="text-white">{{ 'system.security.status'|trans }}</strong>
                        <span class="text-secondary ms-2">{{ 'system.security.message'|trans }}</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
<style>
/* Theme Card Title - Always visible regardless of theme */
.theme-card-title {
    color: #ffffff !important;
}

/* Simple Theme Cards */
.theme-card {
    background: var(--luminai-dark-surface);
    border: 2px solid transparent;
    border-radius: 1rem;
    cursor: pointer;
    transition: all 0.3s ease;
    overflow: hidden;
}

.theme-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
}

.theme-card.active {
    border-color: var(--luminai-neon);
    box-shadow: 0 0 20px rgba(0, 245, 255, 0.3);
}

.theme-preview-mini {
    height: 120px;
    position: relative;
    overflow: hidden;
}

.dark-preview-mini {
    background: linear-gradient(135deg, #0a0a0b 0%, #1a1a2e 50%, #16213e 100%);
}

.light-preview-mini {
    background: linear-gradient(135deg, #ffffff 0%, #f8fafc 50%, #e2e8f0 100%);
}

.theme-header {
    height: 25px;
    margin: 8px;
    border-radius: 4px;
}

.dark-preview-mini .theme-header {
    background: rgba(26, 26, 30, 0.9);
    border-bottom: 1px solid rgba(0, 245, 255, 0.3);
}

.light-preview-mini .theme-header {
    background: rgba(255, 255, 255, 0.9);
    border-bottom: 1px solid rgba(59, 130, 246, 0.3);
}

.theme-content {
    display: flex;
    gap: 8px;
    margin: 8px;
    height: 70px;
}

.theme-card-mini {
    flex-grow: 1;
    border-radius: 6px;
}

.dark-preview-mini .theme-card-mini {
    background: rgba(45, 45, 52, 0.6);
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.light-preview-mini .theme-card-mini {
    background: rgba(255, 255, 255, 0.8);
    border: 1px solid rgba(0, 0, 0, 0.1);
}

.theme-sidebar-mini {
    width: 30px;
    border-radius: 6px;
}

.dark-preview-mini .theme-sidebar-mini {
    background: rgba(79, 70, 229, 0.3);
}

.light-preview-mini .theme-sidebar-mini {
    background: rgba(59, 130, 246, 0.3);
}
</style>

<script>
// Settings page theme management
window.SettingsTheme = window.SettingsTheme || {
    async init() {
        // Wait for PreferenceManager to load
        await window.PreferenceManager.waitForLoad();

        // Update UI based on current theme from PreferenceManager
        const current = window.PreferenceManager.getUserPreference('theme', 'dark');
        this.updateUI(current);
    },

    updateUI(theme) {
        // Update active state
        document.querySelectorAll('.theme-card').forEach(card => {
            card.classList.remove('active');
        });
        document.getElementById(theme + 'Theme')?.classList.add('active');

        // Update status indicator
        const status = document.getElementById('currentThemeStatus');
        if (status) {
            status.textContent = theme === 'light' ? '{{ 'theme.light'|trans({}, 'settings') }}' : '{{ 'theme.dark'|trans({}, 'settings') }}';
        }
    }
};

// Global theme switch function (attach to window to avoid redeclaration)
window.switchTheme = async function(theme) {
    // Save via PreferenceManager (saves to localStorage + database)
    await window.PreferenceManager.setUserPreference('theme', theme);

    // Apply theme globally
    if (typeof GlobalTheme !== 'undefined') {
        GlobalTheme.apply(theme);
        GlobalTheme.updateNavbar();
    } else {
        // Fallback if GlobalTheme not available
        document.documentElement.setAttribute('data-theme', theme);
    }

    // Update local UI
    window.SettingsTheme.updateUI(theme);

    // Show feedback
    const card = document.getElementById(theme + 'Theme');
    const originalContent = card.querySelector('.theme-info h6').innerHTML;
    card.querySelector('.theme-info h6').innerHTML = '<i class="bi bi-check-circle me-2"></i>Applied!';

    setTimeout(() => {
        card.querySelector('.theme-info h6').innerHTML = originalContent;
    }, 1500);
};

// Initialize when page loads (works for both DOMContentLoaded and Turbo)
function initializeSettings() {
    window.SettingsTheme.init();

    // Reset scroll position on page load
    if (history.scrollRestoration) {
        history.scrollRestoration = 'manual';
    }
    window.scrollTo(0, 0);
}

// Handle both initial load and Turbo navigation
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeSettings);
} else {
    // DOM already loaded (Turbo navigation)
    initializeSettings();
}

// Session Analytics Viewer
window.showSessionAnalytics = function() {
    const analyticsData = JSON.parse(localStorage.getItem('session_analytics') || '[]');

    if (analyticsData.length === 0) {
        alert('No session analytics data available yet. Analytics will be collected as you use the system.');
        return;
    }

    // Calculate summary statistics
    const totalSessions = analyticsData.length;
    const totalExtensions = analyticsData.reduce((sum, entry) => sum + (entry.extensionsRequested || 0), 0);
    const totalWarnings = analyticsData.reduce((sum, entry) => sum + (entry.warningsShown || 0), 0);
    const expiredSessions = analyticsData.filter(entry => entry.sessionExpired).length;
    const avgDuration = Math.floor(analyticsData.reduce((sum, entry) => sum + (entry.sessionDuration || 0), 0) / totalSessions);

    // Create modal
    const modal = document.createElement('div');
    modal.className = 'modal fade';
    modal.innerHTML = `
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content" style="background: var(--luminai-dark-surface); border: 1px solid rgba(255, 255, 255, 0.1);">
                <div class="modal-header border-0">
                    <h5 class="modal-title text-white">
                        <i class="bi bi-graph-up text-neon me-2"></i>Session Analytics
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body text-white">
                    <!-- Summary Stats -->
                    <div class="row mb-4">
                        <div class="col-md-3">
                            <div class="metric-card text-center p-3">
                                <div class="metric-value">${totalSessions}</div>
                                <div class="metric-label">Total Sessions</div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="metric-card text-center p-3">
                                <div class="metric-value">${totalExtensions}</div>
                                <div class="metric-label">Extensions</div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="metric-card text-center p-3">
                                <div class="metric-value">${totalWarnings}</div>
                                <div class="metric-label">Warnings</div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="metric-card text-center p-3">
                                <div class="metric-value">${Math.floor(avgDuration / 60)}m</div>
                                <div class="metric-label">Avg Duration</div>
                            </div>
                        </div>
                    </div>

                    <!-- Recent Sessions Table -->
                    <h6 class="text-neon mb-3">Recent Sessions</h6>
                    <div style="max-height: 300px; overflow-y: auto;">
                        <table class="table table-dark table-sm">
                            <thead>
                                <tr>
                                    <th>Timestamp</th>
                                    <th>Duration</th>
                                    <th>Warnings</th>
                                    <th>Extensions</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                ${analyticsData.slice(-20).reverse().map(entry => `
                                    <tr>
                                        <td class="small">${new Date(entry.timestamp).toLocaleString()}</td>
                                        <td>${Math.floor(entry.sessionDuration / 60)}m</td>
                                        <td>${entry.warningsShown || 0}</td>
                                        <td>${entry.extensionsRequested || 0}</td>
                                        <td>
                                            ${entry.sessionExpired
                                                ? '<span class="badge bg-danger">Expired</span>'
                                                : entry.event === 'session_extended'
                                                    ? '<span class="badge bg-success">Extended</span>'
                                                    : '<span class="badge bg-info">Active</span>'}
                                        </td>
                                    </tr>
                                `).join('')}
                            </tbody>
                        </table>
                    </div>

                    <!-- Insights -->
                    <div class="mt-4 p-3 rounded" style="background: rgba(0, 245, 255, 0.05); border: 1px solid rgba(0, 245, 255, 0.2);">
                        <strong class="text-neon"><i class="bi bi-lightbulb me-2"></i>Insights</strong>
                        <ul class="text-secondary small mt-2 mb-0">
                            <li>Extension Rate: ${totalSessions > 0 ? Math.round((totalExtensions / totalSessions) * 100) : 0}%</li>
                            <li>Expiration Rate: ${totalSessions > 0 ? Math.round((expiredSessions / totalSessions) * 100) : 0}%</li>
                            <li>Warnings per Session: ${totalSessions > 0 ? (totalWarnings / totalSessions).toFixed(1) : 0}</li>
                        </ul>
                    </div>
                </div>
                <div class="modal-footer border-0">
                    <button type="button" class="btn btn-secondary" onclick="localStorage.removeItem('session_analytics'); this.closest('.modal').querySelector('[data-bs-dismiss]').click(); alert('Analytics cleared!');">
                        Clear Analytics
                    </button>
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    `;

    document.body.appendChild(modal);
    const bsModal = new bootstrap.Modal(modal);
    bsModal.show();

    // Remove modal from DOM after it's hidden
    modal.addEventListener('hidden.bs.modal', () => {
        modal.remove();
    });
};
</script>
{% endblock %}
