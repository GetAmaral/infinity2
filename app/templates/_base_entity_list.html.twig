{% extends 'base.html.twig' %}

{# Base template for entity list pages (index views) #}
{# Child templates should extend this and override specific blocks #}
{#
  Child templates should define their own entity-specific action macros
  following this pattern for consistency across all views:

  {% macro entityActions(entity, dropdownOnly) %}
    - Desktop buttons (d-none d-lg-flex) for large screens
    - Dropdown menu for mobile and when dropdownOnly=true
  {% endmacro %}

  Dropdowns use standard Bootstrap functionality with Popper.js positioning
  for optimal placement across grid, list, and table views.
#}

{% block title %}{{ block('page_title') }} - {{ 'nav.brand'|trans }}{% endblock %}

{% block body %}
<!-- Page Header -->
<div class="ai-dashboard-header mb-4">
    <div class="d-flex justify-content-between align-items-center">
        <div class="d-flex align-items-center">
            {% block page_icon %}
                <i class="{{ page_icon|default('bi bi-grid-3x3') }} text-neon fs-2 me-3"></i>
            {% endblock %}
            <div>
                <h1 class="text-gradient mb-1">{% block page_title %}{{ (entity_name ~ '.title')|trans }}{% endblock %}</h1>
                <p class="text-secondary mb-0">{% block page_description %}{{ ('page.' ~ entity_name ~ '.description')|trans }}{% endblock %}</p>
            </div>
        </div>
        {% block header_actions %}
            {% if enable_create_button|default(true) %}
                {{ button_create(path(entity_name ~ '_new'), 'button.add', 'messages', null, ('button.add')|trans, entity_name|upper ~ '_CREATE') }}
            {% endif %}
        {% endblock %}
    </div>
</div>

<!-- View Toggle Controller Wrapper -->
<div data-controller="view-toggle"
     data-turbo-cache="false"
     data-view-toggle-default-value="{{ default_view|default('grid') }}"
     data-view-toggle-filter-all-value="{{ 'filter.all'|trans }}"
     data-view-toggle-filter-yes-value="{{ 'filter.yes'|trans }}"
     data-view-toggle-filter-no-value="{{ 'filter.no'|trans }}">
    {% block search_and_controls %}
        <!-- Search and Filters -->
        <div class="row mb-4">
            <div class="col-md-6">
                {% block search_input %}
                    {% if enable_search|default(true) %}
                        <div class="input-group">
                            <span class="input-group-text" style="background: var(--luminai-search-bg); border-color: var(--luminai-search-border); color: var(--luminai-text-secondary);">
                                <i class="bi bi-search"></i>
                            </span>
                            <input type="text"
                                   id="{{ entity_name }}SearchInput"
                                   class="form-control"
                                   placeholder="{{ ('search.placeholder')|trans }}"
                                   data-controller="live-search"
                                   data-live-search-url-value="{{ path(entity_name ~ '_api_search') }}"
                                   data-live-search-target-value="#{{ entity_name_plural }}-grid"
                                   style="background: var(--luminai-search-bg); border-color: var(--luminai-search-border); color: var(--luminai-search-text);">
                            {{ button_clear_search(null, 'messages', 'button.clear.search'|trans) }}
                        </div>
                    {% endif %}
                {% endblock %}
            </div>
            <div class="col-md-6">
                <div class="d-flex gap-2 justify-content-end">
                    {% block filter_controls %}
                        {% if enable_filters|default(true) %}
                            <div class="dropdown">
                                <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                    <i class="bi bi-funnel me-1"></i>{{ 'button.filter'|trans }}
                                </button>
                                <ul class="dropdown-menu dropdown-menu-dark" style="background: var(--luminai-dark-surface);">
                                    {% block filter_options %}
                                        {# Child templates override this block with entity-specific filters #}
                                    {% endblock %}
                                </ul>
                            </div>
                        {% endif %}
                    {% endblock %}

                    {% block view_toggle_buttons %}
                        <div class="btn-group" role="group">
                            {% if enable_grid_view|default(true) %}
                                {{ button_view_toggle('grid', 'bi-grid-3x3-gap', default_view|default('grid') == 'grid', 'view.grid'|trans) }}
                            {% endif %}
                            {% if enable_list_view|default(true) %}
                                {{ button_view_toggle('list', 'bi-list-ul', default_view|default('grid') == 'list', 'view.list'|trans) }}
                            {% endif %}
                            {% if enable_table_view|default(true) %}
                                {{ button_view_toggle('table', 'bi-table', default_view|default('grid') == 'table', 'view.table'|trans) }}
                            {% endif %}
                        </div>
                    {% endblock %}
                </div>
            </div>
        </div>
    {% endblock %}

    {# Hidden Templates for JavaScript Rendering #}
    {# Grid View Template - Child templates override this #}
    <template data-view-toggle-target="gridTemplate">
        {% block grid_view_item_template %}
            <div class="col">
                <div class="luminai-card p-4">
                    <p class="text-warning">Override grid_view_item_template block in {{ entity_name }}/index.html.twig</p>
                </div>
            </div>
        {% endblock %}
    </template>

    {# List View Template - Child templates override this #}
    <template data-view-toggle-target="listTemplate">
        {% block list_view_item_template %}
            <div class="luminai-card mb-3 p-3">
                <p class="text-warning">Override list_view_item_template block in {{ entity_name }}/index.html.twig</p>
            </div>
        {% endblock %}
    </template>

    {# Table Row Template - Child templates override this #}
    <template data-view-toggle-target="tableRowTemplate">
        {% block table_view_row_template %}
            <tr>
                <td colspan="10" class="text-warning">Override table_view_row_template block in {{ entity_name }}/index.html.twig</td>
            </tr>
        {% endblock %}
    </template>

    {% block grid_view %}
        <!-- Grid/List View -->
        <div id="{{ entity_name_plural }}-grid"
             class="{% if default_view|default('grid') == 'list' %}list-view{% else %}bento-grid{% endif %}"
             data-view-toggle-target="container"
             style="{% if default_view|default('grid') == 'table' %}display: none;{% endif %}">
            {% for entity in entities %}
                {% block grid_item %}
                    {# Child templates MUST override this block #}
                    <div class="bento-item">
                        <div class="luminai-card ai-enhanced p-4 h-100">
                            <p class="text-muted">Override grid_item block in child template</p>
                        </div>
                    </div>
                {% endblock %}
            {% else %}
                {% block empty_state %}
                    <div class="bento-item large">
                        <div class="luminai-card p-5 text-center">
                            <div class="mb-4">
                                <i class="{{ page_icon|default('bi bi-inbox') }}" style="font-size: 4rem; color: var(--luminai-text-muted);"></i>
                            </div>
                            <h4 class="text-white mb-3">{{ ('empty.no.' ~ entity_name_plural ~ '.yet')|trans }}</h4>
                            <p class="text-secondary mb-4">{{ ('empty.' ~ entity_name ~ '.description')|trans }}</p>
                            {{ button_create(path(entity_name ~ '_new'), 'button.create.first.' ~ entity_name, 'messages', null, ('button.create.first.' ~ entity_name)|trans, entity_name|upper ~ '_CREATE', 'lg') }}
                        </div>
                    </div>
                {% endblock %}
            {% endfor %}
        </div>
    {% endblock %}

    {% block table_view %}
        <!-- Table View -->
        <div id="{{ entity_name_plural }}-table"
             class="table-view"
             data-view-toggle-target="tableContainer"
             style="{% if default_view|default('grid') != 'table' %}display: none;{% endif %}">
            <div class="luminai-card table-card p-4">
                <div class="table-responsive">
                    <table id="{{ entity_name_plural }}DataTable" class="table table-hover" style="width:100%">
                        <thead>
                            <tr>
                                {% block table_headers %}
                                    {# Child templates MUST override this block #}
                                    <th>Override table_headers block</th>
                                {% endblock %}
                            </tr>
                            {# Filter row - dynamically populated by JavaScript #}
                            <tr class="filters"></tr>
                        </thead>
                        <tbody>
                            {% for entity in entities %}
                                <tr>
                                    {% block table_row %}
                                        {# Child templates MUST override this block #}
                                        <td>Override table_row block</td>
                                    {% endblock %}
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    {% endblock %}

    {# Global Pagination/Controls Card - Works for all views #}
    <div class="luminai-card p-3 mt-3" id="globalViewControls">
        <div class="row align-items-center">
            <div class="col-12 col-md-4">
                <span class="text-secondary" style="font-size: 0.875rem;" id="viewInfo">
                    {{ 'pagination.showing'|trans }} <strong id="itemsStart">1</strong> {{ 'pagination.to'|trans }} <strong id="itemsEnd">10</strong> {{ 'pagination.of'|trans }} <strong id="itemsTotal">{{ entities|length }}</strong> {{ (entity_name ~ '.plural')|trans({},entity_name) }}
                </span>
            </div>
            <div class="col-12 col-md-4">
                <nav aria-label="Page navigation" id="globalPagination">
                    <ul class="pagination pagination-sm justify-content-center mb-0" id="paginationButtons">
                        {# Pagination buttons will be generated by JavaScript #}
                    </ul>
                </nav>
            </div>
            <div class="col-12 col-md-4">
                <div class="d-flex align-items-center gap-2 justify-content-end">
                    <label for="itemsPerPageSelector" class="text-secondary mb-0" style="white-space: nowrap; font-size: 0.875rem;">
                        {{ 'pagination.show'|trans }}
                    </label>
                    <select id="itemsPerPageSelector" class="form-select form-select-sm" style="width: auto; min-width: 80px;">
                        <option value="10">10</option>
                        <option value="25">25</option>
                        <option value="50">50</option>
                        <option value="100">100</option>
                    </select>
                </div>
            </div>
        </div>
    </div>
</div>

{% block entity_list_styles %}
    <style>
    {# Common styles for all entity list pages #}
    @keyframes gradientShift {
        0% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
        100% { background-position: 0% 50%; }
    }

    /* List View Styles */
    .list-view {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        overflow: visible !important;
    }

    .list-view .bento-item {
        width: 100% !important;
        max-width: none !important;
        overflow: visible !important;
    }

    .bento-grid {
        overflow: visible !important;
    }

    .bento-grid .bento-item,
    .list-view .bento-item {
        overflow: visible !important;
    }

    .list-view .luminai-card {
        display: flex;
        flex-direction: column;
        padding: 1.5rem !important;
        height: auto !important;
        overflow: visible !important;
    }

    /* Dropdown overflow fix */
    .bento-item {
        overflow: visible !important;
    }

    .luminai-card {
        overflow: visible !important;
        position: relative;
    }

    /* Special handling for table cards to allow dropdowns to escape */
    .luminai-card.table-card {
        overflow: visible !important;
    }

    /* Dropdown positioning - use Bootstrap's default Popper.js */
    .dropdown {
        position: relative;
    }

    .dropdown-menu {
        position: absolute !important;
        z-index: 1060 !important;
    }

    /* Tooltip styling */
    .tooltip-inner {
        background: linear-gradient(135deg, #00f5ff 0%, #8a2be2 100%);
        color: white;
        padding: 0.5rem 0.75rem;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0, 245, 255, 0.3);
        font-weight: 500;
    }

    /* Clear Search Button - Always Visible with Light Red Styling */
    .btn-clear-search {
        background: linear-gradient(135deg, rgba(239, 68, 68, 0.15) 0%, rgba(220, 38, 38, 0.15) 100%);
        border: 1px solid rgba(239, 68, 68, 0.3);
        color: #fca5a5;
        padding: 0.5rem 1rem;
        font-size: 1rem;
        font-weight: 500;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        box-shadow: 0 2px 8px rgba(239, 68, 68, 0.1);
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
    }

    .btn-clear-search:hover {
        background: linear-gradient(135deg, rgba(239, 68, 68, 0.25) 0%, rgba(220, 38, 38, 0.25) 100%);
        border-color: rgba(239, 68, 68, 0.5);
        color: #ef4444;
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(239, 68, 68, 0.2);
    }

    .btn-clear-search:active {
        transform: translateY(0);
        box-shadow: 0 2px 6px rgba(239, 68, 68, 0.15);
    }

    .btn-clear-search i {
        font-size: 1.1rem;
        transition: transform 0.2s ease;
    }

    .btn-clear-search:hover i {
        transform: rotate(90deg);
    }

    [data-theme="light"] .btn-clear-search {
        background: linear-gradient(135deg, rgba(239, 68, 68, 0.1) 0%, rgba(220, 38, 38, 0.1) 100%);
        border-color: rgba(239, 68, 68, 0.25);
        color: #dc2626;
    }

    [data-theme="light"] .btn-clear-search:hover {
        background: linear-gradient(135deg, rgba(239, 68, 68, 0.2) 0%, rgba(220, 38, 38, 0.2) 100%);
        border-color: rgba(239, 68, 68, 0.4);
        color: #b91c1c;
        transition: all 0.2s ease;
    }

    /* DataTables Custom Styling - Dark Theme */
    .table-view {
        width: 100%;
    }

    /* Table Responsive Wrapper */
    .table-responsive {
        border-radius: 0.75rem;
    }

    .table-hover {
        color: var(--luminai-text-primary) !important;
        background: transparent !important;
    }

    .table-hover thead th {
        background: var(--luminai-dark-surface) !important;
        color: var(--luminai-text-primary) !important;
        border-bottom: 2px solid rgba(0, 245, 255, 0.3) !important;
        padding: 1rem !important;
        font-weight: 600;
        cursor: pointer;
        user-select: none;
    }

    .table-hover thead th:hover {
        background: rgba(0, 245, 255, 0.05) !important;
    }

    .table-hover tbody td {
        background: transparent !important;
        border-top: 1px solid rgba(255, 255, 255, 0.1) !important;
        padding: 1rem !important;
        color: var(--luminai-text-primary) !important;
        vertical-align: middle;
    }

    .table-hover tbody tr:hover {
        background: rgba(0, 245, 255, 0.05) !important;
    }

    /* Dropdown menu styling for all views */
    .dropdown-menu {
        min-width: 200px;
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 12px;
        padding: 8px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.5);
        backdrop-filter: blur(10px);
    }

    .dropdown-menu .dropdown-item {
        color: var(--luminai-text-primary);
        padding: 10px 16px;
        border-radius: 8px;
        transition: all 0.2s ease;
        display: flex;
        align-items: center;
        font-size: 0.9rem;
    }

    .dropdown-menu .dropdown-item:hover {
        background: linear-gradient(135deg, rgba(79, 70, 229, 0.2), rgba(124, 58, 237, 0.2));
        color: var(--luminai-text-primary);
        transform: translateX(4px);
    }

    .dropdown-menu .dropdown-divider {
        border-color: rgba(255, 255, 255, 0.1);
        margin: 8px 0;
    }

    .dropdown-menu .text-danger {
        color: #ef4444 !important;
    }

    .dropdown-menu .text-danger:hover {
        background: rgba(239, 68, 68, 0.1) !important;
    }

    /* DataTables Custom Styling - Light Theme */
    [data-theme="light"] .table-hover {
        color: #1a1a1a !important;
    }

    [data-theme="light"] .table-hover thead th {
        background: #f8f9fa !important;
        color: #1a1a1a !important;
        border-bottom: 2px solid rgba(59, 130, 246, 0.3) !important;
    }

    [data-theme="light"] .table-hover thead th:hover {
        background: rgba(59, 130, 246, 0.05) !important;
    }

    [data-theme="light"] .table-hover tbody td {
        border-top: 1px solid rgba(0, 0, 0, 0.1) !important;
        color: #1a1a1a !important;
    }

    [data-theme="light"] .table-hover tbody tr:hover {
        background: rgba(59, 130, 246, 0.05) !important;
    }

    /* Light Theme - Dropdown Menus */
    [data-theme="light"] .dropdown-menu {
        background: rgba(255, 255, 255, 0.95) !important;
        border: 1px solid rgba(0, 0, 0, 0.1) !important;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15) !important;
    }

    [data-theme="light"] .dropdown-menu .dropdown-item {
        color: #1a1a1a !important;
    }

    [data-theme="light"] .dropdown-menu .dropdown-item:hover {
        background: linear-gradient(135deg, rgba(79, 70, 229, 0.1), rgba(124, 58, 237, 0.1)) !important;
        color: #4f46e5 !important;
    }

    [data-theme="light"] .dropdown-menu .dropdown-divider {
        border-color: rgba(0, 0, 0, 0.1) !important;
    }

    [data-theme="light"] .dropdown-menu .text-danger {
        color: #dc2626 !important;
    }

    [data-theme="light"] .dropdown-menu .text-danger:hover {
        background: rgba(220, 38, 38, 0.1) !important;
        color: #b91c1c !important;
    }

    /* Global Controls Card Styling */
    #globalViewControls {
        background: var(--luminai-card-bg) !important;
        border: 1px solid var(--luminai-border-color) !important;
    }

    [data-theme="light"] #globalViewControls {
        background: rgba(255, 255, 255, 0.8) !important;
        border: 1px solid rgba(0, 0, 0, 0.1) !important;
    }

    #globalViewControls select.form-select {
        background: var(--luminai-dark-surface) !important;
        border: 1px solid rgba(255, 255, 255, 0.2) !important;
        color: var(--luminai-text-primary) !important;
        cursor: pointer;
    }

    [data-theme="light"] #globalViewControls select.form-select {
        background: white !important;
        border: 1px solid rgba(0, 0, 0, 0.2) !important;
        color: #1a1a1a !important;
    }

    #globalViewControls .pagination .page-link {
        background: var(--luminai-dark-surface) !important;
        border: 1px solid rgba(255, 255, 255, 0.2) !important;
        color: var(--luminai-text-primary) !important;
        border-radius: 0.375rem;
        margin: 0 0.125rem;
        padding: 0.375rem 0.75rem;
    }

    [data-theme="light"] #globalViewControls .pagination .page-link {
        background: white !important;
        border: 1px solid rgba(0, 0, 0, 0.2) !important;
        color: #1a1a1a !important;
    }

    #globalViewControls .pagination .page-link:hover {
        background: linear-gradient(135deg, rgba(79, 70, 229, 0.3), rgba(124, 58, 237, 0.3)) !important;
        border-color: var(--luminai-neon) !important;
        color: var(--luminai-neon) !important;
    }

    #globalViewControls .pagination .page-item.active .page-link {
        background: var(--luminai-ai-gradient) !important;
        border-color: var(--luminai-neon) !important;
        color: white !important;
    }

    #globalViewControls .pagination .page-item.disabled .page-link {
        opacity: 0.4;
        cursor: not-allowed;
        pointer-events: none;
    }

    /* Fancy Tooltips for Pagination */
    .tooltip-inner {
        background: linear-gradient(135deg, #00f5ff 0%, #8a2be2 100%);
        color: white;
        padding: 0.5rem 0.75rem;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0, 245, 255, 0.3);
        font-weight: 500;
        font-size: 0.875rem;
    }

    .tooltip.bs-tooltip-top .tooltip-arrow::before,
    .tooltip.bs-tooltip-auto[data-popper-placement^="top"] .tooltip-arrow::before {
        border-top-color: #00f5ff;
    }

    .tooltip.bs-tooltip-bottom .tooltip-arrow::before,
    .tooltip.bs-tooltip-auto[data-popper-placement^="bottom"] .tooltip-arrow::before {
        border-bottom-color: #00f5ff;
    }

    .tooltip.bs-tooltip-start .tooltip-arrow::before,
    .tooltip.bs-tooltip-auto[data-popper-placement^="left"] .tooltip-arrow::before {
        border-left-color: #00f5ff;
    }

    .tooltip.bs-tooltip-end .tooltip-arrow::before,
    .tooltip.bs-tooltip-auto[data-popper-placement^="right"] .tooltip-arrow::before {
        border-right-color: #00f5ff;
    }

    /* DataTables Pagination & Controls - Bottom aligned */
    .dataTables_wrapper .row {
        margin-top: 1rem;
        margin-bottom: 0;
    }

    .dataTables_wrapper .dataTables_info,
    .dataTables_wrapper .dataTables_length {
        color: var(--luminai-text-secondary) !important;
        font-size: 0.875rem;
        display: inline-block;
        margin-right: 1rem;
    }

    [data-theme="light"] .dataTables_wrapper .dataTables_info,
    [data-theme="light"] .dataTables_wrapper .dataTables_length {
        color: #6b7280 !important;
    }

    .dataTables_wrapper .dataTables_length {
        display: inline-block;
    }

    .dataTables_wrapper .dataTables_paginate {
        text-align: right;
    }

    .dataTables_wrapper .col-sm-6 {
        display: flex;
        align-items: center;
    }

    .dataTables_wrapper .col-sm-6:last-child {
        justify-content: flex-end;
    }

    /* DataTables Select Control - Theme Responsive */
    .dataTables_wrapper .dataTables_length select {
        background: var(--luminai-dark-surface) !important;
        border: 1px solid rgba(255, 255, 255, 0.2) !important;
        color: var(--luminai-text-primary) !important;
        border-radius: 0.375rem;
        padding: 0.375rem 0.75rem;
        margin: 0 0.5rem;
    }

    [data-theme="light"] .dataTables_wrapper .dataTables_length select {
        background: white !important;
        border: 1px solid rgba(0, 0, 0, 0.2) !important;
        color: #1a1a1a !important;
    }

    /* DataTables Pagination Buttons - Theme Responsive */
    .dataTables_wrapper .dataTables_paginate .paginate_button {
        color: var(--luminai-text-primary) !important;
        border: 1px solid rgba(255, 255, 255, 0.2) !important;
        background: var(--luminai-dark-surface) !important;
        border-radius: 0.375rem !important;
        padding: 0.375rem 0.75rem !important;
        margin: 0 0.25rem !important;
    }

    [data-theme="light"] .dataTables_wrapper .dataTables_paginate .paginate_button {
        color: #1a1a1a !important;
        border: 1px solid rgba(0, 0, 0, 0.2) !important;
        background: white !important;
    }

    .dataTables_wrapper .dataTables_paginate .paginate_button:hover {
        background: linear-gradient(135deg, rgba(79, 70, 229, 0.3), rgba(124, 58, 237, 0.3)) !important;
        border-color: var(--luminai-neon) !important;
        color: var(--luminai-neon) !important;
    }

    .dataTables_wrapper .dataTables_paginate .paginate_button.current {
        background: var(--luminai-ai-gradient) !important;
        border-color: var(--luminai-neon) !important;
        color: white !important;
    }

    .dataTables_wrapper .dataTables_paginate .paginate_button.disabled,
    .dataTables_wrapper .dataTables_paginate .paginate_button.disabled:hover {
        opacity: 0.4;
        cursor: not-allowed;
        background: var(--luminai-dark-surface) !important;
        border-color: rgba(255, 255, 255, 0.1) !important;
        color: var(--luminai-text-muted) !important;
    }

    [data-theme="light"] .dataTables_wrapper .dataTables_paginate .paginate_button.disabled,
    [data-theme="light"] .dataTables_wrapper .dataTables_paginate .paginate_button.disabled:hover {
        background: rgba(0, 0, 0, 0.05) !important;
        border-color: rgba(0, 0, 0, 0.1) !important;
        color: rgba(0, 0, 0, 0.4) !important;
    }

    /* DataTables Column Filter Inputs - Dark Theme */
    .table-hover thead tr.filters th {
        padding: 0.5rem 1rem !important;
        background: var(--luminai-dark-surface) !important;
        border-top: 1px solid rgba(255, 255, 255, 0.1) !important;
    }

    .table-hover thead tr.filters th input,
    .table-hover thead tr.filters th select {
        width: 100%;
        background: rgba(255, 255, 255, 0.05) !important;
        border: 1px solid rgba(255, 255, 255, 0.2) !important;
        color: var(--luminai-text-primary) !important;
        border-radius: 0.375rem;
        padding: 0.375rem 0.75rem;
        font-size: 0.875rem;
    }

    .table-hover thead tr.filters th input::placeholder {
        color: rgba(255, 255, 255, 0.4);
    }

    .table-hover thead tr.filters th select option {
        background: var(--luminai-dark-surface) !important;
        color: var(--luminai-text-primary) !important;
    }

    .table-hover thead tr.filters th input:focus,
    .table-hover thead tr.filters th select:focus {
        outline: none;
        border-color: var(--luminai-neon) !important;
        box-shadow: 0 0 0 2px rgba(0, 245, 255, 0.1);
    }

    /* DataTables Column Filter Inputs - Light Theme */
    [data-theme="light"] .table-hover thead tr.filters th {
        background: #f8f9fa !important;
        border-top: 1px solid rgba(0, 0, 0, 0.1) !important;
    }

    [data-theme="light"] .table-hover thead tr.filters th input,
    [data-theme="light"] .table-hover thead tr.filters th select {
        background: white !important;
        border: 1px solid rgba(0, 0, 0, 0.2) !important;
        color: #1a1a1a !important;
    }

    [data-theme="light"] .table-hover thead tr.filters th input::placeholder {
        color: rgba(0, 0, 0, 0.4);
    }

    [data-theme="light"] .table-hover thead tr.filters th select option {
        background: white !important;
        color: #1a1a1a !important;
    }

    [data-theme="light"] .table-hover thead tr.filters th input:focus,
    [data-theme="light"] .table-hover thead tr.filters th select:focus {
        border-color: #3b82f6 !important;
        box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.1);
    }

    {% block additional_styles %}
        {# Child templates can add entity-specific styles here #}
    {% endblock %}
    </style>
{% endblock %}

{% block entity_list_scripts %}
    <script>
    // Store observer globally for cleanup (use var for Turbo compatibility - allows redeclaration)
    var entityListObserver = null;

    function initializeEntityList() {
        console.log('📋 Initializing entity list: {{ entity_name }}');

        const searchInput = document.getElementById('{{ entity_name }}SearchInput');
        const clearBtn = document.getElementById('clearSearchBtn');
        const gridElement = document.getElementById('{{ entity_name_plural }}-grid');
        const originalContent = gridElement?.innerHTML;
        let isSearching = false;

        if (searchInput && clearBtn) {
            // Track search state
            searchInput.addEventListener('input', function() {
                if (this.value.trim().length > 0) {
                    isSearching = true;
                } else {
                    if (isSearching) {
                        restoreOriginalContent();
                        isSearching = false;
                    }
                }
            });

            // Clear button click handler
            clearBtn.addEventListener('click', function(e) {
                e.preventDefault();
                searchInput.value = '';
                restoreOriginalContent();
                searchInput.focus();

                // Trigger input event to update view toggle controller
                searchInput.dispatchEvent(new Event('input', { bubbles: true }));
            });

            // ESC key handler
            searchInput.addEventListener('keydown', function(e) {
                if (e.key === 'Escape' || e.key === 'Esc') {
                    e.preventDefault();
                    this.value = '';
                    restoreOriginalContent();
                    this.blur();

                    // Trigger input event to update view toggle controller
                    this.dispatchEvent(new Event('input', { bubbles: true }));
                }
            });
        }

        async function initializeTooltips() {
            // Wait for Bootstrap to be ready
            if (window.bootstrapReady) {
                await window.bootstrapReady;
            }

            if (typeof bootstrap === 'undefined' || typeof bootstrap.Tooltip === 'undefined') {
                return;
            }

            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.forEach(function (tooltipTriggerEl) {
                const existingTooltip = bootstrap.Tooltip.getInstance(tooltipTriggerEl);
                if (existingTooltip) {
                    existingTooltip.dispose();
                }
                new bootstrap.Tooltip(tooltipTriggerEl, {
                    trigger: 'hover',
                    delay: { show: 300, hide: 100 }
                });
            });
        }

        function restoreOriginalContent() {
            const container = document.getElementById('{{ entity_name_plural }}-grid');
            if (container && originalContent) {
                container.innerHTML = originalContent;
                initializeTooltips();
            }
        }

        // Clean up previous observer if it exists
        if (entityListObserver) {
            entityListObserver.disconnect();
            entityListObserver = null;
        }

        // Create new MutationObserver for tooltip re-initialization
        entityListObserver = new MutationObserver(function() {
            initializeTooltips();
        });

        const gridContainer = document.getElementById('{{ entity_name_plural }}-grid');
        if (gridContainer) {
            entityListObserver.observe(gridContainer, {
                childList: true,
                subtree: true
            });
        }

        {% block additional_scripts %}
            {# Child templates can add entity-specific JavaScript here #}
        {% endblock %}
    }

    // Support both events
    document.addEventListener('DOMContentLoaded', initializeEntityList);
    document.addEventListener('turbo:load', initializeEntityList);

    // Cleanup before Turbo caches page
    document.addEventListener('turbo:before-cache', function() {
        console.log('🧹 Cleaning up entity list');
        if (entityListObserver) {
            entityListObserver.disconnect();
            entityListObserver = null;
        }
    });
    </script>
{% endblock %}
{% endblock %}
