<!-- Full Screen Modal Overlay -->
<div class="modal-fullscreen-overlay"
     data-controller="crud-modal"
     data-crud-modal-target="overlay"
     data-action="click->crud-modal#backdropClick">

    {{ form_start(form, {
        'action': (is_edit and input.id) ? path('input_edit', {treeflowId: treeflow.id, stepId: step.id, inputId: input.id}) : path('input_new', {treeflowId: treeflow.id, stepId: step.id}),
        'attr': {
            'data-controller': 'form-navigation',
            'data-crud-modal-target': 'form',
            'data-action': 'submit->crud-modal#submit'
        }
    }) }}

    <div class="modal-dialog-centered" data-action="click->crud-modal#stopPropagation">
        <div class="modal-content-box">

            <!-- Header -->
            <div class="modal-header-bar">
                <div class="d-flex align-items-center gap-3">
                    <div class="modal-icon-circle" style="background: linear-gradient(135deg, #f59e0b, #d97706);">
                        <i class="bi bi-arrow-left-circle"></i>
                    </div>
                    <div>
                        <h2 class="modal-title-text">
                            {% if is_edit %}
                                {{ 'action.edit'|trans }} {{ input.name }}
                            {% else %}
                                {{ 'input.modal.create.title'|trans({}, 'treeflow') }}
                            {% endif %}
                        </h2>
                        <p class="modal-subtitle-text">
                            {% if is_edit %}
                                {{ 'input.modal.edit.subtitle'|trans({}, 'treeflow') }}
                            {% else %}
                                {{ 'input.modal.create.subtitle'|trans({}, 'treeflow') }}
                            {% endif %}
                        </p>
                    </div>
                </div>
                <button type="button"
                        class="modal-close-btn"
                        data-action="crud-modal#close"
                        aria-label="{{ 'button.close'|trans }}">
                    <i class="bi bi-x-lg"></i>
                </button>
            </div>

            <!-- Body -->
            <div class="modal-body-content">
                <div class="form-group-modern">
                    <label class="form-label-modern">{{ form_label(form.name) }}</label>
                    {{ form_widget(form.name, {
                        'attr': {
                            'class': 'form-input-modern' ~ (form.name.vars.errors|length > 0 ? ' input-error' : ''),
                            'placeholder': 'input.form.name.placeholder'|trans({}, 'treeflow'),
                            'autofocus': 'autofocus'
                        }
                    }) }}
                    {{ form_errors(form.name) }}
                </div>

                <div class="form-group-modern">
                    <label class="form-label-modern">{{ form_label(form.type) }}</label>
                    <div class="d-flex flex-column gap-2">
                        {% for choice in form.type %}
                            <div class="form-check">
                                {{ form_widget(choice, {
                                    'attr': {
                                        'class': 'form-check-input'
                                    }
                                }) }}
                                {{ form_label(choice, null, {
                                    'label_attr': {
                                        'class': 'form-check-label'
                                    }
                                }) }}
                            </div>
                        {% endfor %}
                    </div>
                    {{ form_errors(form.type) }}
                </div>

                <div class="form-group-modern">
                    <label class="form-label-modern">{{ form_label(form.sourceStep) }}</label>
                    {{ form_widget(form.sourceStep, {
                        'attr': {
                            'class': 'form-select-modern' ~ (form.sourceStep.vars.errors|length > 0 ? ' input-error' : '')
                        }
                    }) }}
                    <small class="text-muted mt-1 d-block">{{ 'input.form.source.help'|trans({}, 'treeflow') }}</small>
                    {{ form_errors(form.sourceStep) }}
                </div>

                <div class="form-group-modern">
                    <label class="form-label-modern">{{ form_label(form.prompt) }}</label>
                    {{ form_widget(form.prompt, {
                        'attr': {
                            'class': 'form-input-modern' ~ (form.prompt.vars.errors|length > 0 ? ' input-error' : ''),
                            'placeholder': 'input.form.prompt.placeholder'|trans({}, 'treeflow'),
                            'rows': 4
                        }
                    }) }}
                    <small class="text-muted mt-1 d-block">{{ 'input.form.prompt.help'|trans({}, 'treeflow') }}</small>
                    {{ form_errors(form.prompt) }}
                </div>

                {{ form_widget(form._token) }}
            </div>

            <!-- Footer -->
            <div class="modal-footer-bar">
                <button type="button"
                        class="btn-modal-secondary"
                        data-action="crud-modal#close">
                    {{ 'button.cancel'|trans }}
                </button>
                <button type="submit"
                        class="btn-modal-primary"
                        data-crud-modal-target="submitButton"
                        data-loading-text="{{ 'button.saving'|trans }}"
                        style="background: linear-gradient(135deg, #f59e0b, #d97706);">
                    <i class="bi bi-{{ is_edit ? 'check2' : 'plus-lg' }} me-2" data-button-icon></i>
                    <span data-button-text>
                        {% if is_edit %}
                            {{ 'button.save.changes'|trans }}
                        {% else %}
                            {{ 'input.button.create.input'|trans({}, 'treeflow') }}
                        {% endif %}
                    </span>
                </button>
            </div>

        </div>
    </div>

    {{ form_end(form, {'render_rest': false}) }}
</div>

<style>
/* Full Screen Modal Overlay */
.modal-fullscreen-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100vw;
    height: 100vh;
    background: var(--infinity-overlay-bg, rgba(0, 0, 0, 0.85));
    backdrop-filter: blur(8px);
    z-index: 9999;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 2rem;
    animation: modalFadeIn 0.2s ease-out;
}

@keyframes modalFadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

/* Centered Dialog */
.modal-dialog-centered {
    width: 100%;
    max-width: 700px;
    animation: modalSlideUp 0.3s cubic-bezier(0.16, 1, 0.3, 1);
}

@keyframes modalSlideUp {
    from {
        opacity: 0;
        transform: translateY(30px) scale(0.95);
    }
    to {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
}

/* Modal Content Box */
.modal-content-box {
    background: var(--infinity-card-bg, #1a1a1a);
    border-radius: 16px;
    border: 1px solid var(--infinity-border-color, rgba(255, 255, 255, 0.1));
    box-shadow: 0 25px 80px var(--infinity-shadow, rgba(0, 0, 0, 0.6));
    overflow: hidden;
    display: flex;
    flex-direction: column;
    max-height: calc(100vh - 4rem);
}

/* Header */
.modal-header-bar {
    padding: 1.75rem 2rem;
    border-bottom: 1px solid var(--infinity-border-color, rgba(255, 255, 255, 0.08));
    background: var(--infinity-modal-header-bg, linear-gradient(135deg, rgba(245, 158, 11, 0.03) 0%, rgba(217, 119, 6, 0.03) 100%));
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-shrink: 0;
}

.modal-icon-circle {
    width: 56px;
    height: 56px;
    border-radius: 14px;
    background: linear-gradient(135deg, #f59e0b, #d97706);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.75rem;
    color: white;
    flex-shrink: 0;
}

.modal-title-text {
    color: var(--infinity-text-primary, white);
    font-size: 1.5rem;
    font-weight: 700;
    margin: 0;
    letter-spacing: -0.02em;
}

.modal-subtitle-text {
    color: var(--infinity-text-secondary, rgba(255, 255, 255, 0.6));
    font-size: 0.875rem;
    margin: 0.25rem 0 0 0;
}

.modal-close-btn {
    width: 40px;
    height: 40px;
    border-radius: 10px;
    border: none;
    background: var(--infinity-btn-secondary-bg, rgba(255, 255, 255, 0.08));
    color: var(--infinity-text-secondary, rgba(255, 255, 255, 0.7));
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s;
    flex-shrink: 0;
}

.modal-close-btn:hover {
    background: var(--infinity-btn-secondary-hover, rgba(255, 255, 255, 0.15));
    color: var(--infinity-text-primary, white);
    transform: rotate(90deg);
}

/* Body */
.modal-body-content {
    padding: 2rem;
    flex: 1;
    overflow-y: auto;
}

.form-group-modern {
    margin-bottom: 1.75rem;
}

.form-group-modern:last-child {
    margin-bottom: 0;
}

.form-label-modern {
    display: block;
    color: var(--infinity-text-primary, rgba(255, 255, 255, 0.95));
    font-weight: 600;
    font-size: 0.875rem;
    margin-bottom: 0.625rem;
    letter-spacing: 0.01em;
}

.form-input-modern, .form-select-modern {
    width: 100%;
    background: var(--infinity-input-bg, rgba(255, 255, 255, 0.04));
    border: 1.5px solid var(--infinity-border-color, rgba(255, 255, 255, 0.12));
    border-radius: 10px;
    color: var(--infinity-text-primary, white);
    padding: 0.875rem 1.125rem;
    font-size: 1rem;
    transition: all 0.2s;
    font-family: inherit;
}

.form-input-modern:focus, .form-select-modern:focus {
    outline: none;
    background: var(--infinity-input-focus-bg, rgba(255, 255, 255, 0.06));
    border-color: #f59e0b;
    box-shadow: 0 0 0 4px rgba(245, 158, 11, 0.08);
}

.form-input-modern::placeholder {
    color: var(--infinity-text-muted, rgba(255, 255, 255, 0.3));
}

.input-error {
    border-color: #ef4444;
}

.input-error:focus {
    border-color: #ef4444;
    box-shadow: 0 0 0 4px rgba(239, 68, 68, 0.1);
}

.invalid-feedback {
    display: block;
    color: #ef4444;
    font-size: 0.875rem;
    margin-top: 0.5rem;
}

/* Footer */
.modal-footer-bar {
    padding: 1.5rem 2rem;
    border-top: 1px solid var(--infinity-border-color, rgba(255, 255, 255, 0.08));
    background: var(--infinity-modal-footer-bg, rgba(0, 0, 0, 0.2));
    display: flex;
    gap: 1rem;
    justify-content: flex-end;
    flex-shrink: 0;
}

.btn-modal-secondary,
.btn-modal-primary {
    padding: 0.75rem 1.75rem;
    border-radius: 10px;
    font-weight: 600;
    font-size: 0.9375rem;
    border: none;
    cursor: pointer;
    transition: all 0.2s;
    display: inline-flex;
    align-items: center;
    justify-content: center;
}

.btn-modal-secondary {
    background: var(--infinity-btn-secondary-bg, rgba(255, 255, 255, 0.08));
    color: var(--infinity-text-primary, rgba(255, 255, 255, 0.9));
}

.btn-modal-secondary:hover {
    background: var(--infinity-btn-secondary-hover, rgba(255, 255, 255, 0.12));
    transform: translateY(-1px);
}

.btn-modal-primary {
    background: linear-gradient(135deg, #f59e0b, #d97706);
    color: white;
}

.btn-modal-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(245, 158, 11, 0.4);
}

.btn-modal-primary:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
}

/* Responsive */
@media (max-width: 768px) {
    .modal-fullscreen-overlay {
        padding: 1rem;
    }

    .modal-header-bar {
        padding: 1.25rem 1.5rem;
    }

    .modal-body-content {
        padding: 1.5rem;
    }

    .modal-footer-bar {
        padding: 1.25rem 1.5rem;
        flex-direction: column;
    }

    .btn-modal-secondary,
    .btn-modal-primary {
        width: 100%;
    }
}

/* Input Type Radio Buttons */
.form-check-input:checked {
    background-color: #f59e0b;
    border-color: #f59e0b;
}

.form-check-input:focus {
    border-color: #fbbf24;
    box-shadow: 0 0 0 0.25rem rgba(245, 158, 11, 0.25);
}
</style>

<script>
// Loading State Handler (Enhancement)
document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('[data-crud-modal-target="form"]');
    if (form) {
        form.addEventListener('submit', function(e) {
            const submitButton = form.querySelector('[data-crud-modal-target="submitButton"]');
            if (submitButton && !submitButton.disabled) {
                const loadingText = submitButton.dataset.loadingText || 'Loading...';
                const buttonText = submitButton.querySelector('[data-button-text]');
                const buttonIcon = submitButton.querySelector('[data-button-icon]');

                // Disable button and show loading state
                submitButton.disabled = true;
                if (buttonIcon) {
                    buttonIcon.className = 'bi bi-hourglass-split me-2 spinner-grow spinner-grow-sm';
                }
                if (buttonText) {
                    buttonText.textContent = loadingText;
                }
            }
        });
    }
});
</script>
