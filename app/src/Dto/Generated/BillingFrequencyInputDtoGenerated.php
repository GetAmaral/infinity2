<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use Symfony\Component\Serializer\Annotation\Groups;
use App\Dto\OrganizationInputDto;

/**
 * Billing Frequency Input DTO (Generated Base Class)
 *
 * Defines billing frequency options for subscriptions (Daily, Weekly, Biweekly, Monthly, Quarterly, Semi-Annual, Annual, Biennial). Controls recurring billing intervals with support for custom cycles and discount management. *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to BillingFrequencyInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class BillingFrequencyInputDtoGenerated
{
    /**
     * organization reference
     * Must be: IRI string (e.g., "/api/organizatia/uuid")
     * Auto-assigned by system if not provided
     */
    #[Groups(['billingfrequency:write'])]
    public ?string $organization = null;

    #[Groups(['billingfrequency:write'])]
    public string $name;

    #[Groups(['billingfrequency:write'])]
    public string $value;

    #[Groups(['billingfrequency:write'])]
    public ?string $description = null;

    #[Groups(['billingfrequency:write'])]
    public ?string $displayName = null;

    #[Groups(['billingfrequency:write'])]
    public string $intervalType;

    #[Groups(['billingfrequency:write'])]
    public int $intervalCount = 1;

    #[Groups(['billingfrequency:write'])]
    public ?int $daysInCycle = null;

    #[Groups(['billingfrequency:write'])]
    public ?string $discountPercentage = '0';

    #[Groups(['billingfrequency:write'])]
    public bool $default = false;

    #[Groups(['billingfrequency:write'])]
    public int $sortOrder = 0;

    #[Groups(['billingfrequency:write'])]
    public bool $active = true;


    // Getters and Setters

    public function getOrganization(): ?string    {
        return $this->organization;
    }

    public function setOrganization(?string $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getValue(): string    {
        return $this->value;
    }

    public function setValue(string $value): self
    {
        $this->value = $value;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getDisplayName(): ?string    {
        return $this->displayName;
    }

    public function setDisplayName(?string $displayName): self
    {
        $this->displayName = $displayName;
        return $this;
    }

    public function getIntervalType(): string    {
        return $this->intervalType;
    }

    public function setIntervalType(string $intervalType): self
    {
        $this->intervalType = $intervalType;
        return $this;
    }

    public function getIntervalCount(): int    {
        return $this->intervalCount;
    }

    public function setIntervalCount(int $intervalCount): self
    {
        $this->intervalCount = $intervalCount;
        return $this;
    }

    public function getDaysInCycle(): ?int    {
        return $this->daysInCycle;
    }

    public function setDaysInCycle(?int $daysInCycle): self
    {
        $this->daysInCycle = $daysInCycle;
        return $this;
    }

    public function getDiscountPercentage(): ?string    {
        return $this->discountPercentage;
    }

    public function setDiscountPercentage(?string $discountPercentage): self
    {
        $this->discountPercentage = $discountPercentage;
        return $this;
    }

    public function getDefault(): bool    {
        return $this->default;
    }

    public function setDefault(bool $default): self
    {
        $this->default = $default;
        return $this;
    }

    public function getSortOrder(): int    {
        return $this->sortOrder;
    }

    public function setSortOrder(int $sortOrder): self
    {
        $this->sortOrder = $sortOrder;
        return $this;
    }

    public function getActive(): bool    {
        return $this->active;
    }

    public function setActive(bool $active): self
    {
        $this->active = $active;
        return $this;
    }

    public function getProducts(): ?string    {
        return $this->products;
    }

    public function setProducts(?string $products): self
    {
        $this->products = $products;
        return $this;
    }
}
