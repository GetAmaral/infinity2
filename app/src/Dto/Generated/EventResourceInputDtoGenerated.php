<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use Symfony\Component\Serializer\Annotation\Groups;
use App\Dto\OrganizationInputDto;
use App\Dto\CityInputDto;
use App\Dto\EventResourceTypeInputDto;

/**
 * EventResource Input DTO (Generated Base Class)
 *
 * Bookable resources (Rooms, Equipment, etc.) *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to EventResourceInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class EventResourceInputDtoGenerated
{
    /**
     * organization reference
     * Must be: IRI string (e.g., "/api/organizatia/uuid")
     * Auto-assigned by system if not provided
     */
    #[Groups(['eventresource:write'])]
    public ?string $organization = null;

    #[Groups(['eventresource:write'])]
    public string $name;

    #[Groups(['eventresource:write'])]
    public ?string $description = null;

    #[Groups(['eventresource:write'])]
    public ?array $availabilitySchedule = null;

    #[Groups(['eventresource:write'])]
    public bool $available = true;

    #[Groups(['eventresource:write'])]
    public bool $active = true;

    #[Groups(['eventresource:write'])]
    public bool $bookable = true;

    #[Groups(['eventresource:write'])]
    public ?string $timezone = null;

    #[Groups(['eventresource:write'])]
    public bool $requiresApproval = false;

    #[Groups(['eventresource:write'])]
    public bool $autoConfirm = true;

    #[Groups(['eventresource:write'])]
    public ?int $minimumBookingDuration = 30;

    #[Groups(['eventresource:write'])]
    public ?int $maximumBookingDuration = null;

    #[Groups(['eventresource:write'])]
    public ?string $pricePerHour = null;

    #[Groups(['eventresource:write'])]
    public ?array $bookingRules = null;

    #[Groups(['eventresource:write'])]
    public ?string $pricePerDay = null;

    #[Groups(['eventresource:write'])]
    public ?string $imageUrl = null;

    #[Groups(['eventresource:write'])]
    public ?string $thumbnailUrl = null;

    #[Groups(['eventresource:write'])]
    public ?array $tags = null;

    #[Groups(['eventresource:write'])]
    public ?int $capacity = null;

    /**
     * city reference
     * Must be: IRI string (e.g., "/api/ties/uuid")
     */
    #[Groups(['eventresource:write'])]
    public ?string $city = null;

    #[Groups(['eventresource:write'])]
    public ?array $equipment = null;

    #[Groups(['eventresource:write'])]
    public ?string $geoCoordinates = null;

    #[Groups(['eventresource:write'])]
    public ?string $location = null;

    /**
     * type reference
     * Must be: IRI string (e.g., "/api/event_resource_types/uuid")
     */
    #[Assert\NotNull]
    #[Groups(['eventresource:write'])]
    public ?string $type = null;


    // Getters and Setters

    public function getOrganization(): ?string    {
        return $this->organization;
    }

    public function setOrganization(?string $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getAvailabilitySchedule(): ?array    {
        return $this->availabilitySchedule;
    }

    public function setAvailabilitySchedule(?array $availabilitySchedule): self
    {
        $this->availabilitySchedule = $availabilitySchedule;
        return $this;
    }

    public function getAvailable(): bool    {
        return $this->available;
    }

    public function setAvailable(bool $available): self
    {
        $this->available = $available;
        return $this;
    }

    public function getActive(): bool    {
        return $this->active;
    }

    public function setActive(bool $active): self
    {
        $this->active = $active;
        return $this;
    }

    public function getBookable(): bool    {
        return $this->bookable;
    }

    public function setBookable(bool $bookable): self
    {
        $this->bookable = $bookable;
        return $this;
    }

    public function getTimezone(): ?string    {
        return $this->timezone;
    }

    public function setTimezone(?string $timezone): self
    {
        $this->timezone = $timezone;
        return $this;
    }

    public function getRequiresApproval(): bool    {
        return $this->requiresApproval;
    }

    public function setRequiresApproval(bool $requiresApproval): self
    {
        $this->requiresApproval = $requiresApproval;
        return $this;
    }

    public function getAutoConfirm(): bool    {
        return $this->autoConfirm;
    }

    public function setAutoConfirm(bool $autoConfirm): self
    {
        $this->autoConfirm = $autoConfirm;
        return $this;
    }

    public function getMinimumBookingDuration(): ?int    {
        return $this->minimumBookingDuration;
    }

    public function setMinimumBookingDuration(?int $minimumBookingDuration): self
    {
        $this->minimumBookingDuration = $minimumBookingDuration;
        return $this;
    }

    public function getMaximumBookingDuration(): ?int    {
        return $this->maximumBookingDuration;
    }

    public function setMaximumBookingDuration(?int $maximumBookingDuration): self
    {
        $this->maximumBookingDuration = $maximumBookingDuration;
        return $this;
    }

    public function getPricePerHour(): ?string    {
        return $this->pricePerHour;
    }

    public function setPricePerHour(?string $pricePerHour): self
    {
        $this->pricePerHour = $pricePerHour;
        return $this;
    }

    public function getBookingRules(): ?array    {
        return $this->bookingRules;
    }

    public function setBookingRules(?array $bookingRules): self
    {
        $this->bookingRules = $bookingRules;
        return $this;
    }

    public function getPricePerDay(): ?string    {
        return $this->pricePerDay;
    }

    public function setPricePerDay(?string $pricePerDay): self
    {
        $this->pricePerDay = $pricePerDay;
        return $this;
    }

    public function getImageUrl(): ?string    {
        return $this->imageUrl;
    }

    public function setImageUrl(?string $imageUrl): self
    {
        $this->imageUrl = $imageUrl;
        return $this;
    }

    public function getThumbnailUrl(): ?string    {
        return $this->thumbnailUrl;
    }

    public function setThumbnailUrl(?string $thumbnailUrl): self
    {
        $this->thumbnailUrl = $thumbnailUrl;
        return $this;
    }

    public function getTags(): ?array    {
        return $this->tags;
    }

    public function setTags(?array $tags): self
    {
        $this->tags = $tags;
        return $this;
    }

    public function getCapacity(): ?int    {
        return $this->capacity;
    }

    public function setCapacity(?int $capacity): self
    {
        $this->capacity = $capacity;
        return $this;
    }

    public function getCity(): ?string    {
        return $this->city;
    }

    public function setCity(?string $city): self
    {
        $this->city = $city;
        return $this;
    }

    public function getEquipment(): ?array    {
        return $this->equipment;
    }

    public function setEquipment(?array $equipment): self
    {
        $this->equipment = $equipment;
        return $this;
    }

    public function getEventBookings(): ?string    {
        return $this->eventBookings;
    }

    public function setEventBookings(?string $eventBookings): self
    {
        $this->eventBookings = $eventBookings;
        return $this;
    }

    public function getGeoCoordinates(): ?string    {
        return $this->geoCoordinates;
    }

    public function setGeoCoordinates(?string $geoCoordinates): self
    {
        $this->geoCoordinates = $geoCoordinates;
        return $this;
    }

    public function getLocation(): ?string    {
        return $this->location;
    }

    public function setLocation(?string $location): self
    {
        $this->location = $location;
        return $this;
    }

    public function getType(): ?string    {
        return $this->type;
    }

    public function setType(?string $type): self
    {
        $this->type = $type;
        return $this;
    }
}
