<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use App\Dto\OrganizationInputDto;
use App\Dto\UserInputDto;
use App\Dto\EventInputDto;
use App\Dto\EventResourceInputDto;

/**
 * EventResourceBooking Input DTO (Generated Base Class)
 *
 * Resource booking reservations *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to EventResourceBookingInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class EventResourceBookingInputDtoGenerated
{
    /**
     * organization reference
     * Can be: IRI string (e.g., "/api/organizations/uuid") or nested OrganizationInput object
     */
    #[Assert\NotNull]
    public string|OrganizationInputDto $organization;

    public \DateTimeImmutable $startTime;

    /**
     * bookedBy reference
     * Can be: IRI string (e.g., "/api/users/uuid") or nested UserInput object
     */
    public string|UserInputDto|null $bookedBy = null;

    public \DateTimeImmutable $endTime;

    public bool $confirmed = false;

    public bool $cancelled = false;

    public bool $paid = false;

    public ?string $depositAmount = '0';

    public ?string $totalAmount = '0';

    public ?\DateTimeImmutable $confirmedAt = null;

    public ?\DateTimeImmutable $cancelledAt = null;

    public ?string $cancellationReason = null;

    /**
     * event reference
     * Can be: IRI string (e.g., "/api/events/uuid") or nested EventInput object
     */
    public string|EventInputDto|null $event = null;

    public bool $reminderSent = false;

    public ?string $notes = null;

    public int $quantity = 1;

    /**
     * resource reference
     * Can be: IRI string (e.g., "/api/eventresources/uuid") or nested EventResourceInput object
     */
    public string|EventResourceInputDto|null $resource = null;

    public string $status = 'pending';


    // Getters and Setters

    public function getOrganization(): string|OrganizationInputDto    {
        return $this->organization;
    }

    public function setOrganization(string|OrganizationInputDto $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getStarttime(): \DateTimeImmutable    {
        return $this->startTime;
    }

    public function setStarttime(\DateTimeImmutable $startTime): self
    {
        $this->startTime = $startTime;
        return $this;
    }

    public function getBookedby(): string|UserInputDto|null    {
        return $this->bookedBy;
    }

    public function setBookedby(string|UserInputDto|null $bookedBy): self
    {
        $this->bookedBy = $bookedBy;
        return $this;
    }

    public function getEndtime(): \DateTimeImmutable    {
        return $this->endTime;
    }

    public function setEndtime(\DateTimeImmutable $endTime): self
    {
        $this->endTime = $endTime;
        return $this;
    }

    public function getConfirmed(): bool    {
        return $this->confirmed;
    }

    public function setConfirmed(bool $confirmed): self
    {
        $this->confirmed = $confirmed;
        return $this;
    }

    public function getCancelled(): bool    {
        return $this->cancelled;
    }

    public function setCancelled(bool $cancelled): self
    {
        $this->cancelled = $cancelled;
        return $this;
    }

    public function getPaid(): bool    {
        return $this->paid;
    }

    public function setPaid(bool $paid): self
    {
        $this->paid = $paid;
        return $this;
    }

    public function getDepositamount(): ?string    {
        return $this->depositAmount;
    }

    public function setDepositamount(?string $depositAmount): self
    {
        $this->depositAmount = $depositAmount;
        return $this;
    }

    public function getTotalamount(): ?string    {
        return $this->totalAmount;
    }

    public function setTotalamount(?string $totalAmount): self
    {
        $this->totalAmount = $totalAmount;
        return $this;
    }

    public function getConfirmedat(): ?\DateTimeImmutable    {
        return $this->confirmedAt;
    }

    public function setConfirmedat(?\DateTimeImmutable $confirmedAt): self
    {
        $this->confirmedAt = $confirmedAt;
        return $this;
    }

    public function getCancelledat(): ?\DateTimeImmutable    {
        return $this->cancelledAt;
    }

    public function setCancelledat(?\DateTimeImmutable $cancelledAt): self
    {
        $this->cancelledAt = $cancelledAt;
        return $this;
    }

    public function getCancellationreason(): ?string    {
        return $this->cancellationReason;
    }

    public function setCancellationreason(?string $cancellationReason): self
    {
        $this->cancellationReason = $cancellationReason;
        return $this;
    }

    public function getEvent(): string|EventInputDto|null    {
        return $this->event;
    }

    public function setEvent(string|EventInputDto|null $event): self
    {
        $this->event = $event;
        return $this;
    }

    public function getRemindersent(): bool    {
        return $this->reminderSent;
    }

    public function setRemindersent(bool $reminderSent): self
    {
        $this->reminderSent = $reminderSent;
        return $this;
    }

    public function getNotes(): ?string    {
        return $this->notes;
    }

    public function setNotes(?string $notes): self
    {
        $this->notes = $notes;
        return $this;
    }

    public function getQuantity(): int    {
        return $this->quantity;
    }

    public function setQuantity(int $quantity): self
    {
        $this->quantity = $quantity;
        return $this;
    }

    public function getResource(): string|EventResourceInputDto|null    {
        return $this->resource;
    }

    public function setResource(string|EventResourceInputDto|null $resource): self
    {
        $this->resource = $resource;
        return $this;
    }

    public function getStatus(): string    {
        return $this->status;
    }

    public function setStatus(string $status): self
    {
        $this->status = $status;
        return $this;
    }
}
