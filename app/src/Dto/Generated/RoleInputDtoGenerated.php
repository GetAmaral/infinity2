<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;

/**
 * Role Input DTO (Generated Base Class)
 *
 * User roles for permission management and access control *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to RoleInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class RoleInputDtoGenerated
{
    #[Assert\Length(max: 50)]
    public string $name;

    public array $permissions;

    #[Assert\Length(max: 255)]
    public string $description;

    #[Assert\Range(max: 5, min: 1)]
    public ?int $priority = null;

    public bool $systemRole = false;


    // Getters and Setters

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getPermissions(): array    {
        return $this->permissions;
    }

    public function setPermissions(array $permissions): self
    {
        $this->permissions = $permissions;
        return $this;
    }

    public function getUsers(): string    {
        return $this->users;
    }

    public function setUsers(string $users): self
    {
        $this->users = $users;
        return $this;
    }

    public function getDescription(): string    {
        return $this->description;
    }

    public function setDescription(string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getPriority(): ?int    {
        return $this->priority;
    }

    public function setPriority(?int $priority): self
    {
        $this->priority = $priority;
        return $this;
    }

    public function getSystemrole(): bool    {
        return $this->systemRole;
    }

    public function setSystemrole(bool $systemRole): self
    {
        $this->systemRole = $systemRole;
        return $this;
    }
}
