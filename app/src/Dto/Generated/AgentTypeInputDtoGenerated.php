<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;

/**
 * AgentType Input DTO (Generated Base Class)
 *
 * Agent types for customer support and sales teams *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to AgentTypeInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class AgentTypeInputDtoGenerated
{
    public string $name;

    public ?string $description = null;

    public ?bool $active = null;

    public ?string $code = null;

    public ?string $color = '#0dcaf0';

    public ?bool $default = null;

    public ?string $defaultPrompt = null;

    public ?string $icon = null;

    public ?int $sortOrder = null;


    // Getters and Setters

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getAgents(): ?string    {
        return $this->agents;
    }

    public function setAgents(?string $agents): self
    {
        $this->agents = $agents;
        return $this;
    }

    public function getActive(): ?bool    {
        return $this->active;
    }

    public function setActive(?bool $active): self
    {
        $this->active = $active;
        return $this;
    }

    public function getCode(): ?string    {
        return $this->code;
    }

    public function setCode(?string $code): self
    {
        $this->code = $code;
        return $this;
    }

    public function getColor(): ?string    {
        return $this->color;
    }

    public function setColor(?string $color): self
    {
        $this->color = $color;
        return $this;
    }

    public function getDefault(): ?bool    {
        return $this->default;
    }

    public function setDefault(?bool $default): self
    {
        $this->default = $default;
        return $this;
    }

    public function getDefaultprompt(): ?string    {
        return $this->defaultPrompt;
    }

    public function setDefaultprompt(?string $defaultPrompt): self
    {
        $this->defaultPrompt = $defaultPrompt;
        return $this;
    }

    public function getIcon(): ?string    {
        return $this->icon;
    }

    public function setIcon(?string $icon): self
    {
        $this->icon = $icon;
        return $this;
    }

    public function getSortorder(): ?int    {
        return $this->sortOrder;
    }

    public function setSortorder(?int $sortOrder): self
    {
        $this->sortOrder = $sortOrder;
        return $this;
    }
}
