<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use App\Dto\StepInputDto;

/**
 * StepInput Input DTO (Generated Base Class)
 *
 * Input parameters for workflow steps *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to StepInputInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class StepInputInputDtoGenerated
{
    #[Assert\Length(max: 255)]
    public string $name;

    /**
     * step reference
     * Can be: IRI string (e.g., "/api/steps/uuid") or nested StepInput object
     */
    #[Assert\NotNull]
    public string|StepInputDto $step;

    public string $type = 'ANY';

    #[Assert\Length(max: 255)]
    public ?string $slug = null;

    public ?string $prompt = null;


    // Getters and Setters

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getStep(): string|StepInputDto    {
        return $this->step;
    }

    public function setStep(string|StepInputDto $step): self
    {
        $this->step = $step;
        return $this;
    }

    public function getType(): string    {
        return $this->type;
    }

    public function setType(string $type): self
    {
        $this->type = $type;
        return $this;
    }

    public function getSlug(): ?string    {
        return $this->slug;
    }

    public function setSlug(?string $slug): self
    {
        $this->slug = $slug;
        return $this;
    }

    public function getPrompt(): ?string    {
        return $this->prompt;
    }

    public function setPrompt(?string $prompt): self
    {
        $this->prompt = $prompt;
        return $this;
    }

    public function getConnections(): ?string    {
        return $this->connections;
    }

    public function setConnections(?string $connections): self
    {
        $this->connections = $connections;
        return $this;
    }
}
