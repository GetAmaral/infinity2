<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use Symfony\Component\Serializer\Annotation\Groups;
use App\Dto\OrganizationInputDto;
use App\Dto\BillingFrequencyInputDto;
use App\Dto\BrandInputDto;
use App\Dto\ProductCategoryInputDto;
use App\Dto\ProductLineInputDto;
use App\Dto\TaxCategoryInputDto;

/**
 * Product Input DTO (Generated Base Class)
 *
 * Products and services catalog *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to ProductInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class ProductInputDtoGenerated
{
    /**
     * organization reference
     * Must be: IRI string (e.g., "/api/organizations/uuid")
     * Auto-assigned by system if not provided
     */
    #[Groups(['product:write'])]
    public ?string $organization = null;

    #[Assert\Length(max: 100)]
    #[Groups(['product:write'])]
    public ?string $sku = null;

    #[Groups(['product:write'])]
    public string $name;

    #[Groups(['product:write'])]
    public ?string $description = null;

    #[Assert\Length(max: 14)]
    #[Groups(['product:write'])]
    public ?string $gtin = null;

    #[Assert\Length(max: 12)]
    #[Groups(['product:write'])]
    public ?string $upc = null;

    #[Assert\Length(max: 13)]
    #[Groups(['product:write'])]
    public ?string $ean = null;

    #[Assert\Length(max: 100)]
    #[Groups(['product:write'])]
    public ?string $mpn = null;

    #[Assert\Length(max: 100)]
    #[Groups(['product:write'])]
    public ?string $barcode = null;

    #[Groups(['product:write'])]
    public ?bool $available = null;

    #[Assert\PositiveOrZero]
    #[Groups(['product:write'])]
    public ?string $price = null;

    #[Assert\PositiveOrZero]
    #[Groups(['product:write'])]
    public ?string $compareAtPrice = null;

    #[Assert\Choice(choices: ['draft', 'active', 'archived', 'discontinued'])]
    #[Groups(['product:write'])]
    public ?string $status = null;

    #[Assert\PositiveOrZero]
    #[Groups(['product:write'])]
    public ?int $reorderLevel = null;

    #[Assert\PositiveOrZero]
    #[Groups(['product:write'])]
    public ?int $reorderQuantity = null;

    #[Assert\PositiveOrZero]
    #[Groups(['product:write'])]
    public ?int $leadTime = null;

    #[Groups(['product:write'])]
    public ?bool $active = null;

    #[Assert\Positive]
    #[Groups(['product:write'])]
    public ?int $minOrderQuantity = null;

    #[Assert\Positive]
    #[Groups(['product:write'])]
    public ?int $maxOrderQuantity = null;

    #[Groups(['product:write'])]
    public ?int $availableQuantity = null;

    /**
     * billingFrequency reference
     * Must be: IRI string (e.g., "/api/billingfrequencys/uuid")
     */
    #[Groups(['product:write'])]
    public ?string $billingFrequency = null;

    /**
     * brand reference
     * Must be: IRI string (e.g., "/api/brands/uuid")
     */
    #[Groups(['product:write'])]
    public ?string $brand = null;

    #[Groups(['product:write'])]
    public ?string $cancellationFee = null;

    /**
     * category reference
     * Must be: IRI string (e.g., "/api/productcategorys/uuid")
     */
    #[Groups(['product:write'])]
    public ?string $category = null;

    #[Groups(['product:write'])]
    public ?string $commissionAmount = null;

    #[Assert\Range(max: 100, min: 0)]
    #[Groups(['product:write'])]
    public ?string $commissionRate = null;

    #[Groups(['product:write'])]
    public ?string $costPrice = null;

    #[Groups(['product:write'])]
    public ?string $currency = null;

    #[Groups(['product:write'])]
    public ?array $customFields = null;

    #[Groups(['product:write'])]
    public ?string $dimensions = null;

    #[Groups(['product:write'])]
    public ?string $discountAmount = null;

    #[Assert\Range(max: 100, min: 0)]
    #[Groups(['product:write'])]
    public ?string $discountPercentage = null;

    #[Groups(['product:write'])]
    public ?\DateTimeImmutable $endOfLifeDate = null;

    #[Groups(['product:write'])]
    public ?float $exchangeRate = null;

    #[Groups(['product:write'])]
    public ?array $features = null;

    #[Groups(['product:write'])]
    public ?\DateTimeImmutable $launchDate = null;

    #[Groups(['product:write'])]
    public ?string $lifecycleStage = null;

    #[Groups(['product:write'])]
    public ?string $listPrice = null;

    #[Assert\Range(max: 100, min: 0)]
    #[Groups(['product:write'])]
    public ?string $marginPercentage = null;

    #[Groups(['product:write'])]
    public ?string $maximumDiscount = null;

    #[Groups(['product:write'])]
    public ?string $minimumPrice = null;

    #[Groups(['product:write'])]
    public ?string $productCode = null;

    /**
     * productLine reference
     * Must be: IRI string (e.g., "/api/productlines/uuid")
     */
    #[Groups(['product:write'])]
    public ?string $productLine = null;

    #[Groups(['product:write'])]
    public ?int $productType = null;

    #[Groups(['product:write'])]
    public ?bool $purchasable = null;

    #[Groups(['product:write'])]
    public ?string $recurringFee = null;

    #[Groups(['product:write'])]
    public ?bool $requiresApproval = null;

    #[Groups(['product:write'])]
    public ?int $reservedQuantity = null;

    #[Groups(['product:write'])]
    public ?bool $sellable = null;

    #[Groups(['product:write'])]
    public ?string $setupFee = null;

    #[Groups(['product:write'])]
    public ?string $shortDescription = null;

    #[Groups(['product:write'])]
    public ?array $specifications = null;

    #[Groups(['product:write'])]
    public ?int $stockQuantity = null;

    #[Groups(['product:write'])]
    public ?bool $subscription = null;

    #[Groups(['product:write'])]
    public ?string $subscriptionPeriod = null;

    #[Groups(['product:write'])]
    public ?int $supportPeriod = null;

    /**
     * taxCategory reference
     * Must be: IRI string (e.g., "/api/taxcategorys/uuid")
     */
    #[Groups(['product:write'])]
    public ?string $taxCategory = null;

    #[Groups(['product:write'])]
    public ?string $unitOfMeasure = null;

    #[Groups(['product:write'])]
    public ?int $warrantyPeriod = null;

    #[Groups(['product:write'])]
    public ?float $weight = null;


    // Getters and Setters

    public function getOrganization(): ?string    {
        return $this->organization;
    }

    public function setOrganization(?string $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getSku(): ?string    {
        return $this->sku;
    }

    public function setSku(?string $sku): self
    {
        $this->sku = $sku;
        return $this;
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getGtin(): ?string    {
        return $this->gtin;
    }

    public function setGtin(?string $gtin): self
    {
        $this->gtin = $gtin;
        return $this;
    }

    public function getUpc(): ?string    {
        return $this->upc;
    }

    public function setUpc(?string $upc): self
    {
        $this->upc = $upc;
        return $this;
    }

    public function getEan(): ?string    {
        return $this->ean;
    }

    public function setEan(?string $ean): self
    {
        $this->ean = $ean;
        return $this;
    }

    public function getMpn(): ?string    {
        return $this->mpn;
    }

    public function setMpn(?string $mpn): self
    {
        $this->mpn = $mpn;
        return $this;
    }

    public function getBarcode(): ?string    {
        return $this->barcode;
    }

    public function setBarcode(?string $barcode): self
    {
        $this->barcode = $barcode;
        return $this;
    }

    public function getAvailable(): ?bool    {
        return $this->available;
    }

    public function setAvailable(?bool $available): self
    {
        $this->available = $available;
        return $this;
    }

    public function getPrice(): ?string    {
        return $this->price;
    }

    public function setPrice(?string $price): self
    {
        $this->price = $price;
        return $this;
    }

    public function getCompareatprice(): ?string    {
        return $this->compareAtPrice;
    }

    public function setCompareatprice(?string $compareAtPrice): self
    {
        $this->compareAtPrice = $compareAtPrice;
        return $this;
    }

    public function getStatus(): ?string    {
        return $this->status;
    }

    public function setStatus(?string $status): self
    {
        $this->status = $status;
        return $this;
    }

    public function getAttachments(): ?string    {
        return $this->attachments;
    }

    public function setAttachments(?string $attachments): self
    {
        $this->attachments = $attachments;
        return $this;
    }

    public function getReorderlevel(): ?int    {
        return $this->reorderLevel;
    }

    public function setReorderlevel(?int $reorderLevel): self
    {
        $this->reorderLevel = $reorderLevel;
        return $this;
    }

    public function getReorderquantity(): ?int    {
        return $this->reorderQuantity;
    }

    public function setReorderquantity(?int $reorderQuantity): self
    {
        $this->reorderQuantity = $reorderQuantity;
        return $this;
    }

    public function getLeadtime(): ?int    {
        return $this->leadTime;
    }

    public function setLeadtime(?int $leadTime): self
    {
        $this->leadTime = $leadTime;
        return $this;
    }

    public function getActive(): ?bool    {
        return $this->active;
    }

    public function setActive(?bool $active): self
    {
        $this->active = $active;
        return $this;
    }

    public function getMinorderquantity(): ?int    {
        return $this->minOrderQuantity;
    }

    public function setMinorderquantity(?int $minOrderQuantity): self
    {
        $this->minOrderQuantity = $minOrderQuantity;
        return $this;
    }

    public function getMaxorderquantity(): ?int    {
        return $this->maxOrderQuantity;
    }

    public function setMaxorderquantity(?int $maxOrderQuantity): self
    {
        $this->maxOrderQuantity = $maxOrderQuantity;
        return $this;
    }

    public function getAvailablequantity(): ?int    {
        return $this->availableQuantity;
    }

    public function setAvailablequantity(?int $availableQuantity): self
    {
        $this->availableQuantity = $availableQuantity;
        return $this;
    }

    public function getBatches(): ?string    {
        return $this->batches;
    }

    public function setBatches(?string $batches): self
    {
        $this->batches = $batches;
        return $this;
    }

    public function getBillingfrequency(): ?string    {
        return $this->billingFrequency;
    }

    public function setBillingfrequency(?string $billingFrequency): self
    {
        $this->billingFrequency = $billingFrequency;
        return $this;
    }

    public function getBrand(): ?string    {
        return $this->brand;
    }

    public function setBrand(?string $brand): self
    {
        $this->brand = $brand;
        return $this;
    }

    public function getCancellationfee(): ?string    {
        return $this->cancellationFee;
    }

    public function setCancellationfee(?string $cancellationFee): self
    {
        $this->cancellationFee = $cancellationFee;
        return $this;
    }

    public function getCategory(): ?string    {
        return $this->category;
    }

    public function setCategory(?string $category): self
    {
        $this->category = $category;
        return $this;
    }

    public function getCommissionamount(): ?string    {
        return $this->commissionAmount;
    }

    public function setCommissionamount(?string $commissionAmount): self
    {
        $this->commissionAmount = $commissionAmount;
        return $this;
    }

    public function getCommissionrate(): ?string    {
        return $this->commissionRate;
    }

    public function setCommissionrate(?string $commissionRate): self
    {
        $this->commissionRate = $commissionRate;
        return $this;
    }

    public function getCostprice(): ?string    {
        return $this->costPrice;
    }

    public function setCostprice(?string $costPrice): self
    {
        $this->costPrice = $costPrice;
        return $this;
    }

    public function getCurrency(): ?string    {
        return $this->currency;
    }

    public function setCurrency(?string $currency): self
    {
        $this->currency = $currency;
        return $this;
    }

    public function getCustomfields(): ?array    {
        return $this->customFields;
    }

    public function setCustomfields(?array $customFields): self
    {
        $this->customFields = $customFields;
        return $this;
    }

    public function getDeals(): ?string    {
        return $this->deals;
    }

    public function setDeals(?string $deals): self
    {
        $this->deals = $deals;
        return $this;
    }

    public function getDimensions(): ?string    {
        return $this->dimensions;
    }

    public function setDimensions(?string $dimensions): self
    {
        $this->dimensions = $dimensions;
        return $this;
    }

    public function getDiscountamount(): ?string    {
        return $this->discountAmount;
    }

    public function setDiscountamount(?string $discountAmount): self
    {
        $this->discountAmount = $discountAmount;
        return $this;
    }

    public function getDiscountpercentage(): ?string    {
        return $this->discountPercentage;
    }

    public function setDiscountpercentage(?string $discountPercentage): self
    {
        $this->discountPercentage = $discountPercentage;
        return $this;
    }

    public function getEndoflifedate(): ?\DateTimeImmutable    {
        return $this->endOfLifeDate;
    }

    public function setEndoflifedate(?\DateTimeImmutable $endOfLifeDate): self
    {
        $this->endOfLifeDate = $endOfLifeDate;
        return $this;
    }

    public function getExchangerate(): ?float    {
        return $this->exchangeRate;
    }

    public function setExchangerate(?float $exchangeRate): self
    {
        $this->exchangeRate = $exchangeRate;
        return $this;
    }

    public function getFeatures(): ?array    {
        return $this->features;
    }

    public function setFeatures(?array $features): self
    {
        $this->features = $features;
        return $this;
    }

    public function getLaunchdate(): ?\DateTimeImmutable    {
        return $this->launchDate;
    }

    public function setLaunchdate(?\DateTimeImmutable $launchDate): self
    {
        $this->launchDate = $launchDate;
        return $this;
    }

    public function getLifecyclestage(): ?string    {
        return $this->lifecycleStage;
    }

    public function setLifecyclestage(?string $lifecycleStage): self
    {
        $this->lifecycleStage = $lifecycleStage;
        return $this;
    }

    public function getListprice(): ?string    {
        return $this->listPrice;
    }

    public function setListprice(?string $listPrice): self
    {
        $this->listPrice = $listPrice;
        return $this;
    }

    public function getManufacturer(): ?string    {
        return $this->manufacturer;
    }

    public function setManufacturer(?string $manufacturer): self
    {
        $this->manufacturer = $manufacturer;
        return $this;
    }

    public function getMarginpercentage(): ?string    {
        return $this->marginPercentage;
    }

    public function setMarginpercentage(?string $marginPercentage): self
    {
        $this->marginPercentage = $marginPercentage;
        return $this;
    }

    public function getMaximumdiscount(): ?string    {
        return $this->maximumDiscount;
    }

    public function setMaximumdiscount(?string $maximumDiscount): self
    {
        $this->maximumDiscount = $maximumDiscount;
        return $this;
    }

    public function getMinimumprice(): ?string    {
        return $this->minimumPrice;
    }

    public function setMinimumprice(?string $minimumPrice): self
    {
        $this->minimumPrice = $minimumPrice;
        return $this;
    }

    public function getProductcode(): ?string    {
        return $this->productCode;
    }

    public function setProductcode(?string $productCode): self
    {
        $this->productCode = $productCode;
        return $this;
    }

    public function getProductline(): ?string    {
        return $this->productLine;
    }

    public function setProductline(?string $productLine): self
    {
        $this->productLine = $productLine;
        return $this;
    }

    public function getProducttype(): ?int    {
        return $this->productType;
    }

    public function setProducttype(?int $productType): self
    {
        $this->productType = $productType;
        return $this;
    }

    public function getPurchasable(): ?bool    {
        return $this->purchasable;
    }

    public function setPurchasable(?bool $purchasable): self
    {
        $this->purchasable = $purchasable;
        return $this;
    }

    public function getRecurringfee(): ?string    {
        return $this->recurringFee;
    }

    public function setRecurringfee(?string $recurringFee): self
    {
        $this->recurringFee = $recurringFee;
        return $this;
    }

    public function getRelatedfrom(): ?string    {
        return $this->relatedFrom;
    }

    public function setRelatedfrom(?string $relatedFrom): self
    {
        $this->relatedFrom = $relatedFrom;
        return $this;
    }

    public function getRelatedto(): ?string    {
        return $this->relatedTo;
    }

    public function setRelatedto(?string $relatedTo): self
    {
        $this->relatedTo = $relatedTo;
        return $this;
    }

    public function getRequiresapproval(): ?bool    {
        return $this->requiresApproval;
    }

    public function setRequiresapproval(?bool $requiresApproval): self
    {
        $this->requiresApproval = $requiresApproval;
        return $this;
    }

    public function getReservedquantity(): ?int    {
        return $this->reservedQuantity;
    }

    public function setReservedquantity(?int $reservedQuantity): self
    {
        $this->reservedQuantity = $reservedQuantity;
        return $this;
    }

    public function getSellable(): ?bool    {
        return $this->sellable;
    }

    public function setSellable(?bool $sellable): self
    {
        $this->sellable = $sellable;
        return $this;
    }

    public function getSetupfee(): ?string    {
        return $this->setupFee;
    }

    public function setSetupfee(?string $setupFee): self
    {
        $this->setupFee = $setupFee;
        return $this;
    }

    public function getShortdescription(): ?string    {
        return $this->shortDescription;
    }

    public function setShortdescription(?string $shortDescription): self
    {
        $this->shortDescription = $shortDescription;
        return $this;
    }

    public function getSpecifications(): ?array    {
        return $this->specifications;
    }

    public function setSpecifications(?array $specifications): self
    {
        $this->specifications = $specifications;
        return $this;
    }

    public function getStockquantity(): ?int    {
        return $this->stockQuantity;
    }

    public function setStockquantity(?int $stockQuantity): self
    {
        $this->stockQuantity = $stockQuantity;
        return $this;
    }

    public function getSubscription(): ?bool    {
        return $this->subscription;
    }

    public function setSubscription(?bool $subscription): self
    {
        $this->subscription = $subscription;
        return $this;
    }

    public function getSubscriptionperiod(): ?string    {
        return $this->subscriptionPeriod;
    }

    public function setSubscriptionperiod(?string $subscriptionPeriod): self
    {
        $this->subscriptionPeriod = $subscriptionPeriod;
        return $this;
    }

    public function getSubstitutefrom(): ?string    {
        return $this->substituteFrom;
    }

    public function setSubstitutefrom(?string $substituteFrom): self
    {
        $this->substituteFrom = $substituteFrom;
        return $this;
    }

    public function getSubstituteto(): ?string    {
        return $this->substituteTo;
    }

    public function setSubstituteto(?string $substituteTo): self
    {
        $this->substituteTo = $substituteTo;
        return $this;
    }

    public function getSupplier(): ?string    {
        return $this->supplier;
    }

    public function setSupplier(?string $supplier): self
    {
        $this->supplier = $supplier;
        return $this;
    }

    public function getSupportperiod(): ?int    {
        return $this->supportPeriod;
    }

    public function setSupportperiod(?int $supportPeriod): self
    {
        $this->supportPeriod = $supportPeriod;
        return $this;
    }

    public function getTags(): ?string    {
        return $this->tags;
    }

    public function setTags(?string $tags): self
    {
        $this->tags = $tags;
        return $this;
    }

    public function getTaxcategory(): ?string    {
        return $this->taxCategory;
    }

    public function setTaxcategory(?string $taxCategory): self
    {
        $this->taxCategory = $taxCategory;
        return $this;
    }

    public function getUnitofmeasure(): ?string    {
        return $this->unitOfMeasure;
    }

    public function setUnitofmeasure(?string $unitOfMeasure): self
    {
        $this->unitOfMeasure = $unitOfMeasure;
        return $this;
    }

    public function getWarrantyperiod(): ?int    {
        return $this->warrantyPeriod;
    }

    public function setWarrantyperiod(?int $warrantyPeriod): self
    {
        $this->warrantyPeriod = $warrantyPeriod;
        return $this;
    }

    public function getWeight(): ?float    {
        return $this->weight;
    }

    public function setWeight(?float $weight): self
    {
        $this->weight = $weight;
        return $this;
    }
}
