<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Uid\Uuid;
use App\Dto\OrganizationOutputDto;
use App\Dto\EventOutputDto;

/**
 * Meeting Data Output DTO (Generated Base Class)
 *
 * Meeting data including links, notes, recordings, agenda, minutes, and attendee tracking for comprehensive meeting management *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom computed properties to MeetingDataOutputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class MeetingDataOutputDtoGenerated
{
    public ?Uuid $id = null;

    /**
     * organization reference
     * Can be: IRI string or nested OrganizationOutput object
     */
    public string|OrganizationOutputDto $organization;

    /**
     * event reference
     * Can be: IRI string or nested EventOutput object
     */
    public string|EventOutputDto|null $event = null;

    public string $title;

    public string $meetingType;

    public string $status;

    public \DateTimeImmutable $startTime;

    public ?\DateTimeImmutable $endTime = null;

    public ?int $duration = null;

    public ?string $location = null;

    public ?array $agenda = null;

    public ?string $notes = null;

    public ?string $minutes = null;

    public ?array $attendees = null;

    public ?string $meetingId = null;

    public ?array $absentees = null;

    public ?array $decisions = null;

    public ?array $actionItems = null;

    public bool $recordingAvailable;

    public ?string $transcript = null;

    public ?int $recordingDuration = null;

    public ?string $recordingSize = null;

    public ?\DateTimeImmutable $nextMeetingDate = null;

    public ?string $organizer = null;

    public ?array $tags = null;

    public ?string $platform = null;

    public bool $confidential;

    public bool $recurring;

    public ?array $recurrencePattern = null;

    public ?string $recordUrl = null;

    public ?string $secret = null;

    public ?string $url = null;

    public ?\DateTimeImmutable $createdAt = null;

    public ?\DateTimeImmutable $updatedAt = null;

    // Getters and Setters
    public function getId(): ?Uuid
    {
        return $this->id;
    }

    public function setId(?Uuid $id): self
    {
        $this->id = $id;
        return $this;
    }


    public function getOrganization(): string|OrganizationOutputDto    {
        return $this->organization;
    }

    public function setOrganization(string|OrganizationOutputDto $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getEvent(): string|EventOutputDto|null    {
        return $this->event;
    }

    public function setEvent(string|EventOutputDto|null $event): self
    {
        $this->event = $event;
        return $this;
    }

    public function getTitle(): string    {
        return $this->title;
    }

    public function setTitle(string $title): self
    {
        $this->title = $title;
        return $this;
    }

    public function getMeetingType(): string    {
        return $this->meetingType;
    }

    public function setMeetingType(string $meetingType): self
    {
        $this->meetingType = $meetingType;
        return $this;
    }

    public function getStatus(): string    {
        return $this->status;
    }

    public function setStatus(string $status): self
    {
        $this->status = $status;
        return $this;
    }

    public function getStartTime(): \DateTimeImmutable    {
        return $this->startTime;
    }

    public function setStartTime(\DateTimeImmutable $startTime): self
    {
        $this->startTime = $startTime;
        return $this;
    }

    public function getEndTime(): ?\DateTimeImmutable    {
        return $this->endTime;
    }

    public function setEndTime(?\DateTimeImmutable $endTime): self
    {
        $this->endTime = $endTime;
        return $this;
    }

    public function getDuration(): ?int    {
        return $this->duration;
    }

    public function setDuration(?int $duration): self
    {
        $this->duration = $duration;
        return $this;
    }

    public function getLocation(): ?string    {
        return $this->location;
    }

    public function setLocation(?string $location): self
    {
        $this->location = $location;
        return $this;
    }

    public function getAgenda(): ?array    {
        return $this->agenda;
    }

    public function setAgenda(?array $agenda): self
    {
        $this->agenda = $agenda;
        return $this;
    }

    public function getNotes(): ?string    {
        return $this->notes;
    }

    public function setNotes(?string $notes): self
    {
        $this->notes = $notes;
        return $this;
    }

    public function getMinutes(): ?string    {
        return $this->minutes;
    }

    public function setMinutes(?string $minutes): self
    {
        $this->minutes = $minutes;
        return $this;
    }

    public function getAttendees(): ?array    {
        return $this->attendees;
    }

    public function setAttendees(?array $attendees): self
    {
        $this->attendees = $attendees;
        return $this;
    }

    public function getMeetingId(): ?string    {
        return $this->meetingId;
    }

    public function setMeetingId(?string $meetingId): self
    {
        $this->meetingId = $meetingId;
        return $this;
    }

    public function getAbsentees(): ?array    {
        return $this->absentees;
    }

    public function setAbsentees(?array $absentees): self
    {
        $this->absentees = $absentees;
        return $this;
    }

    public function getDecisions(): ?array    {
        return $this->decisions;
    }

    public function setDecisions(?array $decisions): self
    {
        $this->decisions = $decisions;
        return $this;
    }

    public function getActionItems(): ?array    {
        return $this->actionItems;
    }

    public function setActionItems(?array $actionItems): self
    {
        $this->actionItems = $actionItems;
        return $this;
    }

    public function getRecordingAvailable(): bool    {
        return $this->recordingAvailable;
    }

    public function setRecordingAvailable(bool $recordingAvailable): self
    {
        $this->recordingAvailable = $recordingAvailable;
        return $this;
    }

    public function getTranscript(): ?string    {
        return $this->transcript;
    }

    public function setTranscript(?string $transcript): self
    {
        $this->transcript = $transcript;
        return $this;
    }

    public function getRecordingDuration(): ?int    {
        return $this->recordingDuration;
    }

    public function setRecordingDuration(?int $recordingDuration): self
    {
        $this->recordingDuration = $recordingDuration;
        return $this;
    }

    public function getRecordingSize(): ?string    {
        return $this->recordingSize;
    }

    public function setRecordingSize(?string $recordingSize): self
    {
        $this->recordingSize = $recordingSize;
        return $this;
    }

    public function getNextMeetingDate(): ?\DateTimeImmutable    {
        return $this->nextMeetingDate;
    }

    public function setNextMeetingDate(?\DateTimeImmutable $nextMeetingDate): self
    {
        $this->nextMeetingDate = $nextMeetingDate;
        return $this;
    }

    public function getOrganizer(): ?string    {
        return $this->organizer;
    }

    public function setOrganizer(?string $organizer): self
    {
        $this->organizer = $organizer;
        return $this;
    }

    public function getTags(): ?array    {
        return $this->tags;
    }

    public function setTags(?array $tags): self
    {
        $this->tags = $tags;
        return $this;
    }

    public function getPlatform(): ?string    {
        return $this->platform;
    }

    public function setPlatform(?string $platform): self
    {
        $this->platform = $platform;
        return $this;
    }

    public function getConfidential(): bool    {
        return $this->confidential;
    }

    public function setConfidential(bool $confidential): self
    {
        $this->confidential = $confidential;
        return $this;
    }

    public function getRecurring(): bool    {
        return $this->recurring;
    }

    public function setRecurring(bool $recurring): self
    {
        $this->recurring = $recurring;
        return $this;
    }

    public function getRecurrencePattern(): ?array    {
        return $this->recurrencePattern;
    }

    public function setRecurrencePattern(?array $recurrencePattern): self
    {
        $this->recurrencePattern = $recurrencePattern;
        return $this;
    }

    public function getRecordUrl(): ?string    {
        return $this->recordUrl;
    }

    public function setRecordUrl(?string $recordUrl): self
    {
        $this->recordUrl = $recordUrl;
        return $this;
    }

    public function getSecret(): ?string    {
        return $this->secret;
    }

    public function setSecret(?string $secret): self
    {
        $this->secret = $secret;
        return $this;
    }

    public function getUrl(): ?string    {
        return $this->url;
    }

    public function setUrl(?string $url): self
    {
        $this->url = $url;
        return $this;
    }

    public function getCreatedAt(): ?\DateTimeImmutable
    {
        return $this->createdAt;
    }

    public function setCreatedAt(?\DateTimeImmutable $createdAt): self
    {
        $this->createdAt = $createdAt;
        return $this;
    }

    public function getUpdatedAt(): ?\DateTimeImmutable
    {
        return $this->updatedAt;
    }

    public function setUpdatedAt(?\DateTimeImmutable $updatedAt): self
    {
        $this->updatedAt = $updatedAt;
        return $this;
    }
}
