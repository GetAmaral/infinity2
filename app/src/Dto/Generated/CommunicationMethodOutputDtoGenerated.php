<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Uid\Uuid;
use App\Dto\NotificationOutputDto;
use App\Dto\ReminderOutputDto;

/**
 * CommunicationMethod Output DTO (Generated Base Class)
 *
 * Communication methods (Phone, Email, SMS, Video Call, etc.) *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom computed properties to CommunicationMethodOutputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class CommunicationMethodOutputDtoGenerated
{
    public ?Uuid $id = null;

    public string $name;

    public ?string $function = null;

    /**
     * notifications collection
     * @var NotificationOutputDto[]
     */
    public array $notifications = [];

    public ?string $property = null;

    /**
     * reminders collection
     * @var ReminderOutputDto[]
     */
    public array $reminders = [];

    public ?\DateTimeImmutable $createdAt = null;

    public ?\DateTimeImmutable $updatedAt = null;

    // Getters and Setters
    public function getId(): ?Uuid
    {
        return $this->id;
    }

    public function setId(?Uuid $id): self
    {
        $this->id = $id;
        return $this;
    }


    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getFunction(): ?string    {
        return $this->function;
    }

    public function setFunction(?string $function): self
    {
        $this->function = $function;
        return $this;
    }

    public function getNotifications(): array    {
        return $this->notifications;
    }

    public function setNotifications(array $notifications): self
    {
        $this->notifications = $notifications;
        return $this;
    }

    public function getProperty(): ?string    {
        return $this->property;
    }

    public function setProperty(?string $property): self
    {
        $this->property = $property;
        return $this;
    }

    public function getReminders(): array    {
        return $this->reminders;
    }

    public function setReminders(array $reminders): self
    {
        $this->reminders = $reminders;
        return $this;
    }

    public function getCreatedAt(): ?\DateTimeImmutable
    {
        return $this->createdAt;
    }

    public function setCreatedAt(?\DateTimeImmutable $createdAt): self
    {
        $this->createdAt = $createdAt;
        return $this;
    }

    public function getUpdatedAt(): ?\DateTimeImmutable
    {
        return $this->updatedAt;
    }

    public function setUpdatedAt(?\DateTimeImmutable $updatedAt): self
    {
        $this->updatedAt = $updatedAt;
        return $this;
    }
}
