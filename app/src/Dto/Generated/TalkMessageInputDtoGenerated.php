<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use App\Dto\OrganizationInputDto;
use App\Dto\TalkInputDto;
use App\Dto\ContactInputDto;
use App\Dto\UserInputDto;
use App\Dto\AgentInputDto;
use App\Dto\TalkMessageInputDto;
use App\Dto\NotificationInputDto;

/**
 * TalkMessage Input DTO (Generated Base Class)
 *
 * Individual messages within communication threads *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to TalkMessageInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class TalkMessageInputDtoGenerated
{
    /**
     * organization reference
     * Can be: IRI string (e.g., "/api/organizations/uuid") or nested OrganizationInput object
     */
    #[Assert\NotNull]
    public string|OrganizationInputDto $organization;

    /**
     * talk reference
     * Can be: IRI string (e.g., "/api/talks/uuid") or nested TalkInput object
     */
    #[Assert\NotNull]
    public string|TalkInputDto $talk;

    /**
     * fromContact reference
     * Can be: IRI string (e.g., "/api/contacts/uuid") or nested ContactInput object
     */
    public string|ContactInputDto|null $fromContact = null;

    /**
     * fromUser reference
     * Can be: IRI string (e.g., "/api/users/uuid") or nested UserInput object
     */
    public string|UserInputDto|null $fromUser = null;

    /**
     * fromAgent reference
     * Can be: IRI string (e.g., "/api/agents/uuid") or nested AgentInput object
     */
    public string|AgentInputDto|null $fromAgent = null;

    public \DateTimeImmutable $sentAt;

    public string $body;

    public string $messageType = 'text';

    public bool $read = false;

    public ?\DateTimeImmutable $readAt = null;

    public ?string $sentiment = null;

    /**
     * parentMessage reference
     * Can be: IRI string (e.g., "/api/talkmessages/uuid") or nested TalkMessageInput object
     */
    public string|TalkMessageInputDto|null $parentMessage = null;

    public ?bool $edited = null;

    /**
     * notification reference
     * Can be: IRI string (e.g., "/api/notifications/uuid") or nested NotificationInput object
     */
    public string|NotificationInputDto|null $notification = null;

    public string $direction = 'inbound';

    public ?\DateTimeImmutable $deliveredAt = null;

    public bool $internal = false;

    public bool $system = false;

    public ?\DateTimeImmutable $editedAt = null;

    public ?string $channel = null;

    #[Assert\Length(max: 500)]
    public ?string $subject = null;

    public ?array $metadata = null;


    // Getters and Setters

    public function getOrganization(): string|OrganizationInputDto    {
        return $this->organization;
    }

    public function setOrganization(string|OrganizationInputDto $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getTalk(): string|TalkInputDto    {
        return $this->talk;
    }

    public function setTalk(string|TalkInputDto $talk): self
    {
        $this->talk = $talk;
        return $this;
    }

    public function getFromcontact(): string|ContactInputDto|null    {
        return $this->fromContact;
    }

    public function setFromcontact(string|ContactInputDto|null $fromContact): self
    {
        $this->fromContact = $fromContact;
        return $this;
    }

    public function getFromuser(): string|UserInputDto|null    {
        return $this->fromUser;
    }

    public function setFromuser(string|UserInputDto|null $fromUser): self
    {
        $this->fromUser = $fromUser;
        return $this;
    }

    public function getFromagent(): string|AgentInputDto|null    {
        return $this->fromAgent;
    }

    public function setFromagent(string|AgentInputDto|null $fromAgent): self
    {
        $this->fromAgent = $fromAgent;
        return $this;
    }

    public function getSentat(): \DateTimeImmutable    {
        return $this->sentAt;
    }

    public function setSentat(\DateTimeImmutable $sentAt): self
    {
        $this->sentAt = $sentAt;
        return $this;
    }

    public function getBody(): string    {
        return $this->body;
    }

    public function setBody(string $body): self
    {
        $this->body = $body;
        return $this;
    }

    public function getMessagetype(): string    {
        return $this->messageType;
    }

    public function setMessagetype(string $messageType): self
    {
        $this->messageType = $messageType;
        return $this;
    }

    public function getAttachments(): ?string    {
        return $this->attachments;
    }

    public function setAttachments(?string $attachments): self
    {
        $this->attachments = $attachments;
        return $this;
    }

    public function getRead(): bool    {
        return $this->read;
    }

    public function setRead(bool $read): self
    {
        $this->read = $read;
        return $this;
    }

    public function getReadat(): ?\DateTimeImmutable    {
        return $this->readAt;
    }

    public function setReadat(?\DateTimeImmutable $readAt): self
    {
        $this->readAt = $readAt;
        return $this;
    }

    public function getSentiment(): ?string    {
        return $this->sentiment;
    }

    public function setSentiment(?string $sentiment): self
    {
        $this->sentiment = $sentiment;
        return $this;
    }

    public function getParentmessage(): string|TalkMessageInputDto|null    {
        return $this->parentMessage;
    }

    public function setParentmessage(string|TalkMessageInputDto|null $parentMessage): self
    {
        $this->parentMessage = $parentMessage;
        return $this;
    }

    public function getEdited(): ?bool    {
        return $this->edited;
    }

    public function setEdited(?bool $edited): self
    {
        $this->edited = $edited;
        return $this;
    }

    public function getNotification(): string|NotificationInputDto|null    {
        return $this->notification;
    }

    public function setNotification(string|NotificationInputDto|null $notification): self
    {
        $this->notification = $notification;
        return $this;
    }

    public function getDirection(): string    {
        return $this->direction;
    }

    public function setDirection(string $direction): self
    {
        $this->direction = $direction;
        return $this;
    }

    public function getDeliveredat(): ?\DateTimeImmutable    {
        return $this->deliveredAt;
    }

    public function setDeliveredat(?\DateTimeImmutable $deliveredAt): self
    {
        $this->deliveredAt = $deliveredAt;
        return $this;
    }

    public function getInternal(): bool    {
        return $this->internal;
    }

    public function setInternal(bool $internal): self
    {
        $this->internal = $internal;
        return $this;
    }

    public function getSystem(): bool    {
        return $this->system;
    }

    public function setSystem(bool $system): self
    {
        $this->system = $system;
        return $this;
    }

    public function getEditedat(): ?\DateTimeImmutable    {
        return $this->editedAt;
    }

    public function setEditedat(?\DateTimeImmutable $editedAt): self
    {
        $this->editedAt = $editedAt;
        return $this;
    }

    public function getChannel(): ?string    {
        return $this->channel;
    }

    public function setChannel(?string $channel): self
    {
        $this->channel = $channel;
        return $this;
    }

    public function getSubject(): ?string    {
        return $this->subject;
    }

    public function setSubject(?string $subject): self
    {
        $this->subject = $subject;
        return $this;
    }

    public function getMetadata(): ?array    {
        return $this->metadata;
    }

    public function setMetadata(?array $metadata): self
    {
        $this->metadata = $metadata;
        return $this;
    }
}
