<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Uid\Uuid;
use App\Dto\OrganizationOutputDto;
use App\Dto\CityOutputDto;
use App\Dto\EventResourceBookingOutputDto;
use App\Dto\EventResourceTypeOutputDto;

/**
 * EventResource Output DTO (Generated Base Class)
 *
 * Bookable resources (Rooms, Equipment, etc.) *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom computed properties to EventResourceOutputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class EventResourceOutputDtoGenerated
{
    public ?Uuid $id = null;

    /**
     * organization reference
     * Can be: IRI string or nested OrganizationOutput object
     */
    public string|OrganizationOutputDto $organization;

    public string $name;

    public ?string $description = null;

    public ?array $availabilitySchedule = null;

    public bool $available;

    public bool $active;

    public bool $bookable;

    public ?string $timezone = null;

    public bool $requiresApproval;

    public bool $autoConfirm;

    public ?int $minimumBookingDuration = null;

    public ?int $maximumBookingDuration = null;

    public ?string $pricePerHour = null;

    public ?array $bookingRules = null;

    public ?string $pricePerDay = null;

    public ?string $imageUrl = null;

    public ?string $thumbnailUrl = null;

    public ?array $tags = null;

    public ?int $capacity = null;

    /**
     * city reference
     * Can be: IRI string or nested CityOutput object
     */
    public string|CityOutputDto|null $city = null;

    public ?array $equipment = null;

    /**
     * eventBookings collection
     * @var EventResourceBookingOutputDto[]
     */
    public array $eventBookings = [];

    public ?string $geoCoordinates = null;

    public ?string $location = null;

    /**
     * type reference
     * Can be: IRI string or nested EventResourceTypeOutput object
     */
    public string|EventResourceTypeOutputDto $type;

    public ?\DateTimeImmutable $createdAt = null;

    public ?\DateTimeImmutable $updatedAt = null;

    // Getters and Setters
    public function getId(): ?Uuid
    {
        return $this->id;
    }

    public function setId(?Uuid $id): self
    {
        $this->id = $id;
        return $this;
    }


    public function getOrganization(): string|OrganizationOutputDto    {
        return $this->organization;
    }

    public function setOrganization(string|OrganizationOutputDto $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getAvailabilityschedule(): ?array    {
        return $this->availabilitySchedule;
    }

    public function setAvailabilityschedule(?array $availabilitySchedule): self
    {
        $this->availabilitySchedule = $availabilitySchedule;
        return $this;
    }

    public function getAvailable(): bool    {
        return $this->available;
    }

    public function setAvailable(bool $available): self
    {
        $this->available = $available;
        return $this;
    }

    public function getActive(): bool    {
        return $this->active;
    }

    public function setActive(bool $active): self
    {
        $this->active = $active;
        return $this;
    }

    public function getBookable(): bool    {
        return $this->bookable;
    }

    public function setBookable(bool $bookable): self
    {
        $this->bookable = $bookable;
        return $this;
    }

    public function getTimezone(): ?string    {
        return $this->timezone;
    }

    public function setTimezone(?string $timezone): self
    {
        $this->timezone = $timezone;
        return $this;
    }

    public function getRequiresapproval(): bool    {
        return $this->requiresApproval;
    }

    public function setRequiresapproval(bool $requiresApproval): self
    {
        $this->requiresApproval = $requiresApproval;
        return $this;
    }

    public function getAutoconfirm(): bool    {
        return $this->autoConfirm;
    }

    public function setAutoconfirm(bool $autoConfirm): self
    {
        $this->autoConfirm = $autoConfirm;
        return $this;
    }

    public function getMinimumbookingduration(): ?int    {
        return $this->minimumBookingDuration;
    }

    public function setMinimumbookingduration(?int $minimumBookingDuration): self
    {
        $this->minimumBookingDuration = $minimumBookingDuration;
        return $this;
    }

    public function getMaximumbookingduration(): ?int    {
        return $this->maximumBookingDuration;
    }

    public function setMaximumbookingduration(?int $maximumBookingDuration): self
    {
        $this->maximumBookingDuration = $maximumBookingDuration;
        return $this;
    }

    public function getPriceperhour(): ?string    {
        return $this->pricePerHour;
    }

    public function setPriceperhour(?string $pricePerHour): self
    {
        $this->pricePerHour = $pricePerHour;
        return $this;
    }

    public function getBookingrules(): ?array    {
        return $this->bookingRules;
    }

    public function setBookingrules(?array $bookingRules): self
    {
        $this->bookingRules = $bookingRules;
        return $this;
    }

    public function getPriceperday(): ?string    {
        return $this->pricePerDay;
    }

    public function setPriceperday(?string $pricePerDay): self
    {
        $this->pricePerDay = $pricePerDay;
        return $this;
    }

    public function getImageurl(): ?string    {
        return $this->imageUrl;
    }

    public function setImageurl(?string $imageUrl): self
    {
        $this->imageUrl = $imageUrl;
        return $this;
    }

    public function getThumbnailurl(): ?string    {
        return $this->thumbnailUrl;
    }

    public function setThumbnailurl(?string $thumbnailUrl): self
    {
        $this->thumbnailUrl = $thumbnailUrl;
        return $this;
    }

    public function getTags(): ?array    {
        return $this->tags;
    }

    public function setTags(?array $tags): self
    {
        $this->tags = $tags;
        return $this;
    }

    public function getCapacity(): ?int    {
        return $this->capacity;
    }

    public function setCapacity(?int $capacity): self
    {
        $this->capacity = $capacity;
        return $this;
    }

    public function getCity(): string|CityOutputDto|null    {
        return $this->city;
    }

    public function setCity(string|CityOutputDto|null $city): self
    {
        $this->city = $city;
        return $this;
    }

    public function getEquipment(): ?array    {
        return $this->equipment;
    }

    public function setEquipment(?array $equipment): self
    {
        $this->equipment = $equipment;
        return $this;
    }

    public function getEventbookings(): array    {
        return $this->eventBookings;
    }

    public function setEventbookings(array $eventBookings): self
    {
        $this->eventBookings = $eventBookings;
        return $this;
    }

    public function getGeocoordinates(): ?string    {
        return $this->geoCoordinates;
    }

    public function setGeocoordinates(?string $geoCoordinates): self
    {
        $this->geoCoordinates = $geoCoordinates;
        return $this;
    }

    public function getLocation(): ?string    {
        return $this->location;
    }

    public function setLocation(?string $location): self
    {
        $this->location = $location;
        return $this;
    }

    public function getType(): string|EventResourceTypeOutputDto    {
        return $this->type;
    }

    public function setType(string|EventResourceTypeOutputDto $type): self
    {
        $this->type = $type;
        return $this;
    }

    public function getCreatedAt(): ?\DateTimeImmutable
    {
        return $this->createdAt;
    }

    public function setCreatedAt(?\DateTimeImmutable $createdAt): self
    {
        $this->createdAt = $createdAt;
        return $this;
    }

    public function getUpdatedAt(): ?\DateTimeImmutable
    {
        return $this->updatedAt;
    }

    public function setUpdatedAt(?\DateTimeImmutable $updatedAt): self
    {
        $this->updatedAt = $updatedAt;
        return $this;
    }
}
