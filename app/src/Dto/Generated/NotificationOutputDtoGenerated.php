<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Uid\Uuid;
use App\Dto\OrganizationOutputDto;
use App\Dto\UserOutputDto;
use App\Dto\EventAttendeeOutputDto;
use App\Dto\CommunicationMethodOutputDto;
use App\Dto\EventOutputDto;
use App\Dto\ReminderOutputDto;
use App\Dto\TalkMessageOutputDto;
use App\Dto\NotificationTypeOutputDto;

/**
 * Notification Output DTO (Generated Base Class)
 *
 * System notifications for users *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom computed properties to NotificationOutputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class NotificationOutputDtoGenerated
{
    public ?Uuid $id = null;

    /**
     * organization reference
     * Can be: IRI string or nested OrganizationOutput object
     */
    public string|OrganizationOutputDto $organization;

    public string $title;

    /**
     * recipient reference
     * Can be: IRI string or nested UserOutput object
     */
    public string|UserOutputDto $recipient;

    /**
     * sender reference
     * Can be: IRI string or nested UserOutput object
     */
    public string|UserOutputDto|null $sender = null;

    public string $priority;

    public ?string $actionUrl = null;

    /**
     * attendee reference
     * Can be: IRI string or nested EventAttendeeOutput object
     */
    public string|EventAttendeeOutputDto|null $attendee = null;

    public bool $read;

    public bool $archived;

    public ?\DateTimeImmutable $readAt = null;

    /**
     * communicationMethod reference
     * Can be: IRI string or nested CommunicationMethodOutput object
     */
    public string|CommunicationMethodOutputDto|null $communicationMethod = null;

    /**
     * event reference
     * Can be: IRI string or nested EventOutput object
     */
    public string|EventOutputDto|null $event = null;

    public ?string $message = null;

    public ?int $notificationStatus = null;

    /**
     * reminder reference
     * Can be: IRI string or nested ReminderOutput object
     */
    public string|ReminderOutputDto|null $reminder = null;

    public ?\DateTimeImmutable $sentAt = null;

    /**
     * talkMessage reference
     * Can be: IRI string or nested TalkMessageOutput object
     */
    public string|TalkMessageOutputDto|null $talkMessage = null;

    /**
     * type reference
     * Can be: IRI string or nested NotificationTypeOutput object
     */
    public string|NotificationTypeOutputDto|null $type = null;

    public ?\DateTimeImmutable $createdAt = null;

    public ?\DateTimeImmutable $updatedAt = null;

    // Getters and Setters
    public function getId(): ?Uuid
    {
        return $this->id;
    }

    public function setId(?Uuid $id): self
    {
        $this->id = $id;
        return $this;
    }


    public function getOrganization(): string|OrganizationOutputDto    {
        return $this->organization;
    }

    public function setOrganization(string|OrganizationOutputDto $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getTitle(): string    {
        return $this->title;
    }

    public function setTitle(string $title): self
    {
        $this->title = $title;
        return $this;
    }

    public function getRecipient(): string|UserOutputDto    {
        return $this->recipient;
    }

    public function setRecipient(string|UserOutputDto $recipient): self
    {
        $this->recipient = $recipient;
        return $this;
    }

    public function getSender(): string|UserOutputDto|null    {
        return $this->sender;
    }

    public function setSender(string|UserOutputDto|null $sender): self
    {
        $this->sender = $sender;
        return $this;
    }

    public function getPriority(): string    {
        return $this->priority;
    }

    public function setPriority(string $priority): self
    {
        $this->priority = $priority;
        return $this;
    }

    public function getActionurl(): ?string    {
        return $this->actionUrl;
    }

    public function setActionurl(?string $actionUrl): self
    {
        $this->actionUrl = $actionUrl;
        return $this;
    }

    public function getAttendee(): string|EventAttendeeOutputDto|null    {
        return $this->attendee;
    }

    public function setAttendee(string|EventAttendeeOutputDto|null $attendee): self
    {
        $this->attendee = $attendee;
        return $this;
    }

    public function getRead(): bool    {
        return $this->read;
    }

    public function setRead(bool $read): self
    {
        $this->read = $read;
        return $this;
    }

    public function getArchived(): bool    {
        return $this->archived;
    }

    public function setArchived(bool $archived): self
    {
        $this->archived = $archived;
        return $this;
    }

    public function getReadat(): ?\DateTimeImmutable    {
        return $this->readAt;
    }

    public function setReadat(?\DateTimeImmutable $readAt): self
    {
        $this->readAt = $readAt;
        return $this;
    }

    public function getCommunicationmethod(): string|CommunicationMethodOutputDto|null    {
        return $this->communicationMethod;
    }

    public function setCommunicationmethod(string|CommunicationMethodOutputDto|null $communicationMethod): self
    {
        $this->communicationMethod = $communicationMethod;
        return $this;
    }

    public function getEvent(): string|EventOutputDto|null    {
        return $this->event;
    }

    public function setEvent(string|EventOutputDto|null $event): self
    {
        $this->event = $event;
        return $this;
    }

    public function getMessage(): ?string    {
        return $this->message;
    }

    public function setMessage(?string $message): self
    {
        $this->message = $message;
        return $this;
    }

    public function getNotificationstatus(): ?int    {
        return $this->notificationStatus;
    }

    public function setNotificationstatus(?int $notificationStatus): self
    {
        $this->notificationStatus = $notificationStatus;
        return $this;
    }

    public function getReminder(): string|ReminderOutputDto|null    {
        return $this->reminder;
    }

    public function setReminder(string|ReminderOutputDto|null $reminder): self
    {
        $this->reminder = $reminder;
        return $this;
    }

    public function getSentat(): ?\DateTimeImmutable    {
        return $this->sentAt;
    }

    public function setSentat(?\DateTimeImmutable $sentAt): self
    {
        $this->sentAt = $sentAt;
        return $this;
    }

    public function getTalkmessage(): string|TalkMessageOutputDto|null    {
        return $this->talkMessage;
    }

    public function setTalkmessage(string|TalkMessageOutputDto|null $talkMessage): self
    {
        $this->talkMessage = $talkMessage;
        return $this;
    }

    public function getType(): string|NotificationTypeOutputDto|null    {
        return $this->type;
    }

    public function setType(string|NotificationTypeOutputDto|null $type): self
    {
        $this->type = $type;
        return $this;
    }

    public function getCreatedAt(): ?\DateTimeImmutable
    {
        return $this->createdAt;
    }

    public function setCreatedAt(?\DateTimeImmutable $createdAt): self
    {
        $this->createdAt = $createdAt;
        return $this;
    }

    public function getUpdatedAt(): ?\DateTimeImmutable
    {
        return $this->updatedAt;
    }

    public function setUpdatedAt(?\DateTimeImmutable $updatedAt): self
    {
        $this->updatedAt = $updatedAt;
        return $this;
    }
}
