<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use Symfony\Component\Serializer\Annotation\Groups;

/**
 * Module Input DTO (Generated Base Class)
 *
 * System modules for role-based access control *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to ModuleInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class ModuleInputDtoGenerated
{
    #[Groups(['module:write'])]
    public string $name;

    #[Groups(['module:write'])]
    public ?string $description = null;

    #[Groups(['module:write'])]
    public ?bool $enabled = null;

    #[Groups(['module:write'])]
    public ?string $version = null;


    // Getters and Setters

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getEnabled(): ?bool    {
        return $this->enabled;
    }

    public function setEnabled(?bool $enabled): self
    {
        $this->enabled = $enabled;
        return $this;
    }

    public function getVersion(): ?string    {
        return $this->version;
    }

    public function setVersion(?string $version): self
    {
        $this->version = $version;
        return $this;
    }
}
