<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Uid\Uuid;
use App\Dto\UserOutputDto;

/**
 * Role Output DTO (Generated Base Class)
 *
 * User roles for permission management and access control *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom computed properties to RoleOutputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class RoleOutputDtoGenerated
{
    public ?Uuid $id = null;

    public string $name;

    public array $permissions;

    /**
     * users collection
     * @var UserOutputDto[]
     */
    public array $users = [];

    public string $description;

    public ?int $priority = null;

    public bool $systemRole;

    public ?\DateTimeImmutable $createdAt = null;

    public ?\DateTimeImmutable $updatedAt = null;

    // Getters and Setters
    public function getId(): ?Uuid
    {
        return $this->id;
    }

    public function setId(?Uuid $id): self
    {
        $this->id = $id;
        return $this;
    }


    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getPermissions(): array    {
        return $this->permissions;
    }

    public function setPermissions(array $permissions): self
    {
        $this->permissions = $permissions;
        return $this;
    }

    public function getUsers(): array    {
        return $this->users;
    }

    public function setUsers(array $users): self
    {
        $this->users = $users;
        return $this;
    }

    public function getDescription(): string    {
        return $this->description;
    }

    public function setDescription(string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getPriority(): ?int    {
        return $this->priority;
    }

    public function setPriority(?int $priority): self
    {
        $this->priority = $priority;
        return $this;
    }

    public function getSystemrole(): bool    {
        return $this->systemRole;
    }

    public function setSystemrole(bool $systemRole): self
    {
        $this->systemRole = $systemRole;
        return $this;
    }

    public function getCreatedAt(): ?\DateTimeImmutable
    {
        return $this->createdAt;
    }

    public function setCreatedAt(?\DateTimeImmutable $createdAt): self
    {
        $this->createdAt = $createdAt;
        return $this;
    }

    public function getUpdatedAt(): ?\DateTimeImmutable
    {
        return $this->updatedAt;
    }

    public function setUpdatedAt(?\DateTimeImmutable $updatedAt): self
    {
        $this->updatedAt = $updatedAt;
        return $this;
    }
}
