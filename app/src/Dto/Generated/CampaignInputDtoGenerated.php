<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use App\Dto\OrganizationInputDto;
use App\Dto\UserInputDto;
use App\Dto\CampaignInputDto;

/**
 * Campaign Input DTO (Generated Base Class)
 *
 * Marketing campaigns for lead generation and customer engagement *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to CampaignInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class CampaignInputDtoGenerated
{
    /**
     * organization reference
     * Can be: IRI string (e.g., "/api/organizations/uuid") or nested OrganizationInput object
     */
    #[Assert\NotNull]
    public string|OrganizationInputDto $organization;

    public string $name;

    public ?string $description = null;

    public ?string $actualBudget = null;

    public bool $active;

    public ?string $actualCost = null;

    public ?string $actualReturn = null;

    public ?string $actualRevenue = null;

    public bool $archived;

    public ?string $budgetedCost = null;

    public ?int $campaignStatus = null;

    public string $campaignType;

    #[Assert\Length(max: 100)]
    public ?string $codeName = null;

    public bool $draft;

    public ?int $duration = null;

    #[Assert\Length(max: 255)]
    public ?string $emailAddress = null;

    public ?\DateTimeImmutable $endDate = null;

    public ?int $expectedResponse = null;

    public ?string $expectedRevenue = null;

    /**
     * manager reference
     * Can be: IRI string (e.g., "/api/users/uuid") or nested UserInput object
     */
    public string|UserInputDto|null $manager = null;

    public ?string $message = null;

    public ?int $numberOfContacts = null;

    public ?int $numberOfConverted = null;

    public ?int $numberOfLeads = null;

    public ?int $numberOfResponses = null;

    public ?string $objective = null;

    public ?string $otherCost = null;

    /**
     * owner reference
     * Can be: IRI string (e.g., "/api/users/uuid") or nested UserInput object
     */
    #[Assert\NotNull]
    public string|UserInputDto $owner;

    /**
     * parentCampaign reference
     * Can be: IRI string (e.g., "/api/campaigns/uuid") or nested CampaignInput object
     */
    public string|CampaignInputDto|null $parentCampaign = null;

    public ?string $plannedBudget = null;

    public ?int $plannedDuration = null;

    public ?\DateTimeImmutable $plannedEndDate = null;

    public ?string $plannedReturn = null;

    public ?\DateTimeImmutable $plannedStartDate = null;

    public ?string $roi = null;

    public ?\DateTimeImmutable $startDate = null;

    public string $status;

    public ?string $targetAudience = null;

    public bool $template;


    // Getters and Setters

    public function getOrganization(): string|OrganizationInputDto    {
        return $this->organization;
    }

    public function setOrganization(string|OrganizationInputDto $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getActualbudget(): ?string    {
        return $this->actualBudget;
    }

    public function setActualbudget(?string $actualBudget): self
    {
        $this->actualBudget = $actualBudget;
        return $this;
    }

    public function getActive(): bool    {
        return $this->active;
    }

    public function setActive(bool $active): self
    {
        $this->active = $active;
        return $this;
    }

    public function getActualcost(): ?string    {
        return $this->actualCost;
    }

    public function setActualcost(?string $actualCost): self
    {
        $this->actualCost = $actualCost;
        return $this;
    }

    public function getActualreturn(): ?string    {
        return $this->actualReturn;
    }

    public function setActualreturn(?string $actualReturn): self
    {
        $this->actualReturn = $actualReturn;
        return $this;
    }

    public function getActualrevenue(): ?string    {
        return $this->actualRevenue;
    }

    public function setActualrevenue(?string $actualRevenue): self
    {
        $this->actualRevenue = $actualRevenue;
        return $this;
    }

    public function getArchived(): bool    {
        return $this->archived;
    }

    public function setArchived(bool $archived): self
    {
        $this->archived = $archived;
        return $this;
    }

    public function getBudgetedcost(): ?string    {
        return $this->budgetedCost;
    }

    public function setBudgetedcost(?string $budgetedCost): self
    {
        $this->budgetedCost = $budgetedCost;
        return $this;
    }

    public function getCampaignstatus(): ?int    {
        return $this->campaignStatus;
    }

    public function setCampaignstatus(?int $campaignStatus): self
    {
        $this->campaignStatus = $campaignStatus;
        return $this;
    }

    public function getCampaigntype(): string    {
        return $this->campaignType;
    }

    public function setCampaigntype(string $campaignType): self
    {
        $this->campaignType = $campaignType;
        return $this;
    }

    public function getCodename(): ?string    {
        return $this->codeName;
    }

    public function setCodename(?string $codeName): self
    {
        $this->codeName = $codeName;
        return $this;
    }

    public function getCompanies(): ?string    {
        return $this->companies;
    }

    public function setCompanies(?string $companies): self
    {
        $this->companies = $companies;
        return $this;
    }

    public function getContacts(): ?string    {
        return $this->contacts;
    }

    public function setContacts(?string $contacts): self
    {
        $this->contacts = $contacts;
        return $this;
    }

    public function getDeals(): ?string    {
        return $this->deals;
    }

    public function setDeals(?string $deals): self
    {
        $this->deals = $deals;
        return $this;
    }

    public function getDraft(): bool    {
        return $this->draft;
    }

    public function setDraft(bool $draft): self
    {
        $this->draft = $draft;
        return $this;
    }

    public function getDuration(): ?int    {
        return $this->duration;
    }

    public function setDuration(?int $duration): self
    {
        $this->duration = $duration;
        return $this;
    }

    public function getEmailaddress(): ?string    {
        return $this->emailAddress;
    }

    public function setEmailaddress(?string $emailAddress): self
    {
        $this->emailAddress = $emailAddress;
        return $this;
    }

    public function getEnddate(): ?\DateTimeImmutable    {
        return $this->endDate;
    }

    public function setEnddate(?\DateTimeImmutable $endDate): self
    {
        $this->endDate = $endDate;
        return $this;
    }

    public function getExpectedresponse(): ?int    {
        return $this->expectedResponse;
    }

    public function setExpectedresponse(?int $expectedResponse): self
    {
        $this->expectedResponse = $expectedResponse;
        return $this;
    }

    public function getExpectedrevenue(): ?string    {
        return $this->expectedRevenue;
    }

    public function setExpectedrevenue(?string $expectedRevenue): self
    {
        $this->expectedRevenue = $expectedRevenue;
        return $this;
    }

    public function getManager(): string|UserInputDto|null    {
        return $this->manager;
    }

    public function setManager(string|UserInputDto|null $manager): self
    {
        $this->manager = $manager;
        return $this;
    }

    public function getMessage(): ?string    {
        return $this->message;
    }

    public function setMessage(?string $message): self
    {
        $this->message = $message;
        return $this;
    }

    public function getChildcampaigns(): ?string    {
        return $this->childCampaigns;
    }

    public function setChildcampaigns(?string $childCampaigns): self
    {
        $this->childCampaigns = $childCampaigns;
        return $this;
    }

    public function getNumberofcontacts(): ?int    {
        return $this->numberOfContacts;
    }

    public function setNumberofcontacts(?int $numberOfContacts): self
    {
        $this->numberOfContacts = $numberOfContacts;
        return $this;
    }

    public function getNumberofconverted(): ?int    {
        return $this->numberOfConverted;
    }

    public function setNumberofconverted(?int $numberOfConverted): self
    {
        $this->numberOfConverted = $numberOfConverted;
        return $this;
    }

    public function getNumberofleads(): ?int    {
        return $this->numberOfLeads;
    }

    public function setNumberofleads(?int $numberOfLeads): self
    {
        $this->numberOfLeads = $numberOfLeads;
        return $this;
    }

    public function getNumberofresponses(): ?int    {
        return $this->numberOfResponses;
    }

    public function setNumberofresponses(?int $numberOfResponses): self
    {
        $this->numberOfResponses = $numberOfResponses;
        return $this;
    }

    public function getObjective(): ?string    {
        return $this->objective;
    }

    public function setObjective(?string $objective): self
    {
        $this->objective = $objective;
        return $this;
    }

    public function getOthercost(): ?string    {
        return $this->otherCost;
    }

    public function setOthercost(?string $otherCost): self
    {
        $this->otherCost = $otherCost;
        return $this;
    }

    public function getOwner(): string|UserInputDto    {
        return $this->owner;
    }

    public function setOwner(string|UserInputDto $owner): self
    {
        $this->owner = $owner;
        return $this;
    }

    public function getParentcampaign(): string|CampaignInputDto|null    {
        return $this->parentCampaign;
    }

    public function setParentcampaign(string|CampaignInputDto|null $parentCampaign): self
    {
        $this->parentCampaign = $parentCampaign;
        return $this;
    }

    public function getPlannedbudget(): ?string    {
        return $this->plannedBudget;
    }

    public function setPlannedbudget(?string $plannedBudget): self
    {
        $this->plannedBudget = $plannedBudget;
        return $this;
    }

    public function getPlannedduration(): ?int    {
        return $this->plannedDuration;
    }

    public function setPlannedduration(?int $plannedDuration): self
    {
        $this->plannedDuration = $plannedDuration;
        return $this;
    }

    public function getPlannedenddate(): ?\DateTimeImmutable    {
        return $this->plannedEndDate;
    }

    public function setPlannedenddate(?\DateTimeImmutable $plannedEndDate): self
    {
        $this->plannedEndDate = $plannedEndDate;
        return $this;
    }

    public function getPlannedreturn(): ?string    {
        return $this->plannedReturn;
    }

    public function setPlannedreturn(?string $plannedReturn): self
    {
        $this->plannedReturn = $plannedReturn;
        return $this;
    }

    public function getPlannedstartdate(): ?\DateTimeImmutable    {
        return $this->plannedStartDate;
    }

    public function setPlannedstartdate(?\DateTimeImmutable $plannedStartDate): self
    {
        $this->plannedStartDate = $plannedStartDate;
        return $this;
    }

    public function getRoi(): ?string    {
        return $this->roi;
    }

    public function setRoi(?string $roi): self
    {
        $this->roi = $roi;
        return $this;
    }

    public function getSocialmedias(): ?string    {
        return $this->socialMedias;
    }

    public function setSocialmedias(?string $socialMedias): self
    {
        $this->socialMedias = $socialMedias;
        return $this;
    }

    public function getStartdate(): ?\DateTimeImmutable    {
        return $this->startDate;
    }

    public function setStartdate(?\DateTimeImmutable $startDate): self
    {
        $this->startDate = $startDate;
        return $this;
    }

    public function getStatus(): string    {
        return $this->status;
    }

    public function setStatus(string $status): self
    {
        $this->status = $status;
        return $this;
    }

    public function getTalks(): ?string    {
        return $this->talks;
    }

    public function setTalks(?string $talks): self
    {
        $this->talks = $talks;
        return $this;
    }

    public function getTargetaudience(): ?string    {
        return $this->targetAudience;
    }

    public function setTargetaudience(?string $targetAudience): self
    {
        $this->targetAudience = $targetAudience;
        return $this;
    }

    public function getTeam(): ?string    {
        return $this->team;
    }

    public function setTeam(?string $team): self
    {
        $this->team = $team;
        return $this;
    }

    public function getTemplate(): bool    {
        return $this->template;
    }

    public function setTemplate(bool $template): self
    {
        $this->template = $template;
        return $this;
    }
}
