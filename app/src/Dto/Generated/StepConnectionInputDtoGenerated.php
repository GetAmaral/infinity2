<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use App\Dto\StepOutputInputDto;
use App\Dto\StepInputInputDto;

/**
 * StepConnection Input DTO (Generated Base Class)
 *
 * Connections between workflow steps *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to StepConnectionInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class StepConnectionInputDtoGenerated
{
    /**
     * sourceOutput reference
     * Can be: IRI string (e.g., "/api/stepoutputs/uuid") or nested StepOutputInput object
     */
    #[Assert\NotNull]
    public string|StepOutputInputDto $sourceOutput;

    /**
     * targetInput reference
     * Can be: IRI string (e.g., "/api/stepinputs/uuid") or nested StepInputInput object
     */
    #[Assert\NotNull]
    public string|StepInputInputDto $targetInput;


    // Getters and Setters

    public function getSourceoutput(): string|StepOutputInputDto    {
        return $this->sourceOutput;
    }

    public function setSourceoutput(string|StepOutputInputDto $sourceOutput): self
    {
        $this->sourceOutput = $sourceOutput;
        return $this;
    }

    public function getTargetinput(): string|StepInputInputDto    {
        return $this->targetInput;
    }

    public function setTargetinput(string|StepInputInputDto $targetInput): self
    {
        $this->targetInput = $targetInput;
        return $this;
    }
}
