<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Uid\Uuid;
use App\Dto\OrganizationOutputDto;
use App\Dto\ProductOutputDto;

/**
 * ProductBatch Output DTO (Generated Base Class)
 *
 * Tracks product batches with manufacturing dates, expiry dates, lot numbers, and inventory quantities for complete supply chain traceability *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom computed properties to ProductBatchOutputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class ProductBatchOutputDtoGenerated
{
    public ?Uuid $id = null;

    /**
     * organization reference
     * Can be: IRI string or nested OrganizationOutput object
     */
    public string|OrganizationOutputDto $organization;

    public string $batchNumber;

    public string $name;

    public ?\DateTimeImmutable $manufacturingDate = null;

    public ?string $lotNumber = null;

    public ?string $serialNumber = null;

    public bool $expired;

    public ?string $supplier = null;

    public ?string $qualityStatus = null;

    public ?string $notes = null;

    public ?int $availableQuantity = null;

    public bool $active;

    public ?string $commissionAmount = null;

    public ?string $commissionRate = null;

    public ?string $costPrice = null;

    public ?string $currency = null;

    public ?string $discountAmount = null;

    public ?string $discountPercentage = null;

    public ?float $exchangeRate = null;

    public ?\DateTimeImmutable $expirationDate = null;

    public ?string $listPrice = null;

    public ?string $marginPercentage = null;

    public ?string $maximumDiscount = null;

    public ?string $minimumPrice = null;

    /**
     * product reference
     * Can be: IRI string or nested ProductOutput object
     */
    public string|ProductOutputDto|null $product = null;

    public ?int $reservedQuantity = null;

    public ?int $stockQuantity = null;

    public ?\DateTimeImmutable $createdAt = null;

    public ?\DateTimeImmutable $updatedAt = null;

    // Getters and Setters
    public function getId(): ?Uuid
    {
        return $this->id;
    }

    public function setId(?Uuid $id): self
    {
        $this->id = $id;
        return $this;
    }


    public function getOrganization(): string|OrganizationOutputDto    {
        return $this->organization;
    }

    public function setOrganization(string|OrganizationOutputDto $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getBatchNumber(): string    {
        return $this->batchNumber;
    }

    public function setBatchNumber(string $batchNumber): self
    {
        $this->batchNumber = $batchNumber;
        return $this;
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getManufacturingDate(): ?\DateTimeImmutable    {
        return $this->manufacturingDate;
    }

    public function setManufacturingDate(?\DateTimeImmutable $manufacturingDate): self
    {
        $this->manufacturingDate = $manufacturingDate;
        return $this;
    }

    public function getLotNumber(): ?string    {
        return $this->lotNumber;
    }

    public function setLotNumber(?string $lotNumber): self
    {
        $this->lotNumber = $lotNumber;
        return $this;
    }

    public function getSerialNumber(): ?string    {
        return $this->serialNumber;
    }

    public function setSerialNumber(?string $serialNumber): self
    {
        $this->serialNumber = $serialNumber;
        return $this;
    }

    public function getExpired(): bool    {
        return $this->expired;
    }

    public function setExpired(bool $expired): self
    {
        $this->expired = $expired;
        return $this;
    }

    public function getSupplier(): ?string    {
        return $this->supplier;
    }

    public function setSupplier(?string $supplier): self
    {
        $this->supplier = $supplier;
        return $this;
    }

    public function getQualityStatus(): ?string    {
        return $this->qualityStatus;
    }

    public function setQualityStatus(?string $qualityStatus): self
    {
        $this->qualityStatus = $qualityStatus;
        return $this;
    }

    public function getNotes(): ?string    {
        return $this->notes;
    }

    public function setNotes(?string $notes): self
    {
        $this->notes = $notes;
        return $this;
    }

    public function getAvailableQuantity(): ?int    {
        return $this->availableQuantity;
    }

    public function setAvailableQuantity(?int $availableQuantity): self
    {
        $this->availableQuantity = $availableQuantity;
        return $this;
    }

    public function getActive(): bool    {
        return $this->active;
    }

    public function setActive(bool $active): self
    {
        $this->active = $active;
        return $this;
    }

    public function getCommissionAmount(): ?string    {
        return $this->commissionAmount;
    }

    public function setCommissionAmount(?string $commissionAmount): self
    {
        $this->commissionAmount = $commissionAmount;
        return $this;
    }

    public function getCommissionRate(): ?string    {
        return $this->commissionRate;
    }

    public function setCommissionRate(?string $commissionRate): self
    {
        $this->commissionRate = $commissionRate;
        return $this;
    }

    public function getCostPrice(): ?string    {
        return $this->costPrice;
    }

    public function setCostPrice(?string $costPrice): self
    {
        $this->costPrice = $costPrice;
        return $this;
    }

    public function getCurrency(): ?string    {
        return $this->currency;
    }

    public function setCurrency(?string $currency): self
    {
        $this->currency = $currency;
        return $this;
    }

    public function getDiscountAmount(): ?string    {
        return $this->discountAmount;
    }

    public function setDiscountAmount(?string $discountAmount): self
    {
        $this->discountAmount = $discountAmount;
        return $this;
    }

    public function getDiscountPercentage(): ?string    {
        return $this->discountPercentage;
    }

    public function setDiscountPercentage(?string $discountPercentage): self
    {
        $this->discountPercentage = $discountPercentage;
        return $this;
    }

    public function getExchangeRate(): ?float    {
        return $this->exchangeRate;
    }

    public function setExchangeRate(?float $exchangeRate): self
    {
        $this->exchangeRate = $exchangeRate;
        return $this;
    }

    public function getExpirationDate(): ?\DateTimeImmutable    {
        return $this->expirationDate;
    }

    public function setExpirationDate(?\DateTimeImmutable $expirationDate): self
    {
        $this->expirationDate = $expirationDate;
        return $this;
    }

    public function getListPrice(): ?string    {
        return $this->listPrice;
    }

    public function setListPrice(?string $listPrice): self
    {
        $this->listPrice = $listPrice;
        return $this;
    }

    public function getMarginPercentage(): ?string    {
        return $this->marginPercentage;
    }

    public function setMarginPercentage(?string $marginPercentage): self
    {
        $this->marginPercentage = $marginPercentage;
        return $this;
    }

    public function getMaximumDiscount(): ?string    {
        return $this->maximumDiscount;
    }

    public function setMaximumDiscount(?string $maximumDiscount): self
    {
        $this->maximumDiscount = $maximumDiscount;
        return $this;
    }

    public function getMinimumPrice(): ?string    {
        return $this->minimumPrice;
    }

    public function setMinimumPrice(?string $minimumPrice): self
    {
        $this->minimumPrice = $minimumPrice;
        return $this;
    }

    public function getProduct(): string|ProductOutputDto|null    {
        return $this->product;
    }

    public function setProduct(string|ProductOutputDto|null $product): self
    {
        $this->product = $product;
        return $this;
    }

    public function getReservedQuantity(): ?int    {
        return $this->reservedQuantity;
    }

    public function setReservedQuantity(?int $reservedQuantity): self
    {
        $this->reservedQuantity = $reservedQuantity;
        return $this;
    }

    public function getStockQuantity(): ?int    {
        return $this->stockQuantity;
    }

    public function setStockQuantity(?int $stockQuantity): self
    {
        $this->stockQuantity = $stockQuantity;
        return $this;
    }

    public function getCreatedAt(): ?\DateTimeImmutable
    {
        return $this->createdAt;
    }

    public function setCreatedAt(?\DateTimeImmutable $createdAt): self
    {
        $this->createdAt = $createdAt;
        return $this;
    }

    public function getUpdatedAt(): ?\DateTimeImmutable
    {
        return $this->updatedAt;
    }

    public function setUpdatedAt(?\DateTimeImmutable $updatedAt): self
    {
        $this->updatedAt = $updatedAt;
        return $this;
    }
}
