<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Uid\Uuid;
use App\Dto\TreeFlowOutputDto;
use App\Dto\StepQuestionOutputDto;
use App\Dto\StepOutputOutputDto;
use App\Dto\StepInputOutputDto;

/**
 * Step Output DTO (Generated Base Class)
 *
 * Individual steps in automated workflows *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom computed properties to StepOutputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class StepOutputDtoGenerated
{
    public ?Uuid $id = null;

    /**
     * treeFlow reference
     * Can be: IRI string or nested TreeFlowOutput object
     */
    public string|TreeFlowOutputDto $treeFlow;

    public string $name;

    public bool $first;

    public string $slug;

    public ?string $objective = null;

    public ?string $prompt = null;

    public int $viewOrder;

    public ?int $positionX = null;

    public ?int $positionY = null;

    /**
     * questions collection
     * @var StepQuestionOutputDto[]
     */
    public array $questions = [];

    /**
     * outputs collection
     * @var StepOutputOutputDto[]
     */
    public array $outputs = [];

    /**
     * inputs collection
     * @var StepInputOutputDto[]
     */
    public array $inputs = [];

    public ?\DateTimeImmutable $createdAt = null;

    public ?\DateTimeImmutable $updatedAt = null;

    // Getters and Setters
    public function getId(): ?Uuid
    {
        return $this->id;
    }

    public function setId(?Uuid $id): self
    {
        $this->id = $id;
        return $this;
    }


    public function getTreeflow(): string|TreeFlowOutputDto    {
        return $this->treeFlow;
    }

    public function setTreeflow(string|TreeFlowOutputDto $treeFlow): self
    {
        $this->treeFlow = $treeFlow;
        return $this;
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getFirst(): bool    {
        return $this->first;
    }

    public function setFirst(bool $first): self
    {
        $this->first = $first;
        return $this;
    }

    public function getSlug(): string    {
        return $this->slug;
    }

    public function setSlug(string $slug): self
    {
        $this->slug = $slug;
        return $this;
    }

    public function getObjective(): ?string    {
        return $this->objective;
    }

    public function setObjective(?string $objective): self
    {
        $this->objective = $objective;
        return $this;
    }

    public function getPrompt(): ?string    {
        return $this->prompt;
    }

    public function setPrompt(?string $prompt): self
    {
        $this->prompt = $prompt;
        return $this;
    }

    public function getVieworder(): int    {
        return $this->viewOrder;
    }

    public function setVieworder(int $viewOrder): self
    {
        $this->viewOrder = $viewOrder;
        return $this;
    }

    public function getPositionx(): ?int    {
        return $this->positionX;
    }

    public function setPositionx(?int $positionX): self
    {
        $this->positionX = $positionX;
        return $this;
    }

    public function getPositiony(): ?int    {
        return $this->positionY;
    }

    public function setPositiony(?int $positionY): self
    {
        $this->positionY = $positionY;
        return $this;
    }

    public function getQuestions(): array    {
        return $this->questions;
    }

    public function setQuestions(array $questions): self
    {
        $this->questions = $questions;
        return $this;
    }

    public function getOutputs(): array    {
        return $this->outputs;
    }

    public function setOutputs(array $outputs): self
    {
        $this->outputs = $outputs;
        return $this;
    }

    public function getInputs(): array    {
        return $this->inputs;
    }

    public function setInputs(array $inputs): self
    {
        $this->inputs = $inputs;
        return $this;
    }

    public function getCreatedAt(): ?\DateTimeImmutable
    {
        return $this->createdAt;
    }

    public function setCreatedAt(?\DateTimeImmutable $createdAt): self
    {
        $this->createdAt = $createdAt;
        return $this;
    }

    public function getUpdatedAt(): ?\DateTimeImmutable
    {
        return $this->updatedAt;
    }

    public function setUpdatedAt(?\DateTimeImmutable $updatedAt): self
    {
        $this->updatedAt = $updatedAt;
        return $this;
    }
}
