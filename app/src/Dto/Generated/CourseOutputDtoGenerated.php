<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Uid\Uuid;
use App\Dto\OrganizationOutputDto;
use App\Dto\CourseModuleOutputDto;
use App\Dto\UserOutputDto;
use App\Dto\StudentCourseOutputDto;

/**
 * Course Output DTO (Generated Base Class)
 *
 * Educational courses and training programs *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom computed properties to CourseOutputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class CourseOutputDtoGenerated
{
    public ?Uuid $id = null;

    /**
     * organization reference
     * Can be: IRI string or nested OrganizationOutput object
     */
    public string|OrganizationOutputDto $organization;

    public ?\DateTimeImmutable $releaseDate = null;

    public string $name;

    public ?string $description = null;

    /**
     * modules collection
     * @var CourseModuleOutputDto[]
     */
    public array $modules = [];

    public bool $active;

    /**
     * owner reference
     * Can be: IRI string or nested UserOutput object
     */
    public string|UserOutputDto $owner;

    /**
     * studentCourses collection
     * @var StudentCourseOutputDto[]
     */
    public array $studentCourses = [];

    public int $totalLengthSeconds;

    public ?\DateTimeImmutable $createdAt = null;

    public ?\DateTimeImmutable $updatedAt = null;

    // Getters and Setters
    public function getId(): ?Uuid
    {
        return $this->id;
    }

    public function setId(?Uuid $id): self
    {
        $this->id = $id;
        return $this;
    }


    public function getOrganization(): string|OrganizationOutputDto    {
        return $this->organization;
    }

    public function setOrganization(string|OrganizationOutputDto $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getReleaseDate(): ?\DateTimeImmutable    {
        return $this->releaseDate;
    }

    public function setReleaseDate(?\DateTimeImmutable $releaseDate): self
    {
        $this->releaseDate = $releaseDate;
        return $this;
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getModules(): array    {
        return $this->modules;
    }

    public function setModules(array $modules): self
    {
        $this->modules = $modules;
        return $this;
    }

    public function getActive(): bool    {
        return $this->active;
    }

    public function setActive(bool $active): self
    {
        $this->active = $active;
        return $this;
    }

    public function getOwner(): string|UserOutputDto    {
        return $this->owner;
    }

    public function setOwner(string|UserOutputDto $owner): self
    {
        $this->owner = $owner;
        return $this;
    }

    public function getStudentCourses(): array    {
        return $this->studentCourses;
    }

    public function setStudentCourses(array $studentCourses): self
    {
        $this->studentCourses = $studentCourses;
        return $this;
    }

    public function getTotalLengthSeconds(): int    {
        return $this->totalLengthSeconds;
    }

    public function setTotalLengthSeconds(int $totalLengthSeconds): self
    {
        $this->totalLengthSeconds = $totalLengthSeconds;
        return $this;
    }

    public function getCreatedAt(): ?\DateTimeImmutable
    {
        return $this->createdAt;
    }

    public function setCreatedAt(?\DateTimeImmutable $createdAt): self
    {
        $this->createdAt = $createdAt;
        return $this;
    }

    public function getUpdatedAt(): ?\DateTimeImmutable
    {
        return $this->updatedAt;
    }

    public function setUpdatedAt(?\DateTimeImmutable $updatedAt): self
    {
        $this->updatedAt = $updatedAt;
        return $this;
    }
}
