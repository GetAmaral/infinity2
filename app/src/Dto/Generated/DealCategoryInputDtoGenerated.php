<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use Symfony\Component\Serializer\Annotation\Groups;
use App\Dto\OrganizationInputDto;
use App\Dto\DealCategoryInputDto;

/**
 * DealCategory Input DTO (Generated Base Class)
 *
 * Deal categories for reporting and analysis *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to DealCategoryInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class DealCategoryInputDtoGenerated
{
    /**
     * organization reference
     * Must be: IRI string (e.g., "/api/organizatia/uuid")
     * Auto-assigned by system if not provided
     */
    #[Groups(['dealcategory:write'])]
    public ?string $organization = null;

    #[Groups(['dealcategory:write'])]
    public string $name;

    #[Groups(['dealcategory:write'])]
    public ?string $color = '#0dcaf0';

    #[Groups(['dealcategory:write'])]
    public ?string $icon = null;

    #[Groups(['dealcategory:write'])]
    public ?string $description = null;

    #[Groups(['dealcategory:write'])]
    public bool $default = false;

    #[Groups(['dealcategory:write'])]
    public ?int $displayOrder = 10;

    /**
     * parentCategory reference
     * Must be: IRI string (e.g., "/api/deal_ries/uuid")
     */
    #[Groups(['dealcategory:write'])]
    public ?string $parentCategory = null;

    #[Groups(['dealcategory:write'])]
    public bool $active = true;

    #[Groups(['dealcategory:write'])]
    public ?string $group = null;


    // Getters and Setters

    public function getOrganization(): ?string    {
        return $this->organization;
    }

    public function setOrganization(?string $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getColor(): ?string    {
        return $this->color;
    }

    public function setColor(?string $color): self
    {
        $this->color = $color;
        return $this;
    }

    public function getIcon(): ?string    {
        return $this->icon;
    }

    public function setIcon(?string $icon): self
    {
        $this->icon = $icon;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getDefault(): bool    {
        return $this->default;
    }

    public function setDefault(bool $default): self
    {
        $this->default = $default;
        return $this;
    }

    public function getDisplayOrder(): ?int    {
        return $this->displayOrder;
    }

    public function setDisplayOrder(?int $displayOrder): self
    {
        $this->displayOrder = $displayOrder;
        return $this;
    }

    public function getParentCategory(): ?string    {
        return $this->parentCategory;
    }

    public function setParentCategory(?string $parentCategory): self
    {
        $this->parentCategory = $parentCategory;
        return $this;
    }

    public function getSubcategories(): ?string    {
        return $this->subcategories;
    }

    public function setSubcategories(?string $subcategories): self
    {
        $this->subcategories = $subcategories;
        return $this;
    }

    public function getDeals(): ?string    {
        return $this->deals;
    }

    public function setDeals(?string $deals): self
    {
        $this->deals = $deals;
        return $this;
    }

    public function getActive(): bool    {
        return $this->active;
    }

    public function setActive(bool $active): self
    {
        $this->active = $active;
        return $this;
    }

    public function getGroup(): ?string    {
        return $this->group;
    }

    public function setGroup(?string $group): self
    {
        $this->group = $group;
        return $this;
    }
}
