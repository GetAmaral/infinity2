<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use Symfony\Component\Serializer\Annotation\Groups;
use App\Dto\OrganizationInputDto;
use App\Dto\CourseModuleInputDto;
use App\Dto\UserInputDto;

/**
 * Course Input DTO (Generated Base Class)
 *
 * Educational courses and training programs *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to CourseInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class CourseInputDtoGenerated
{
    /**
     * organization reference
     * Must be: IRI string (e.g., "/api/organizatia/uuid")
     * Auto-assigned by system if not provided
     */
    #[Groups(['course:write'])]
    public ?string $organization = null;

    #[Groups(['course:write'])]
    public ?\DateTimeImmutable $releaseDate = null;

    #[Assert\Length(max: 255)]
    #[Groups(['course:write'])]
    public string $name;

    #[Groups(['course:write'])]
    public ?string $description = null;

    /**
     * Nested modules collection
     * Strategy: create_and_update
     * Max items: 50     */
    #[Assert\Valid]
    #[Assert\Count(max: 50, maxMessage: 'Cannot have more than 50 modules')]
    #[Groups(['course:write'])]
    public array $modules = [];

    #[Groups(['course:write'])]
    public bool $active = true;

    /**
     * owner reference
     * Must be: IRI string (e.g., "/api/users/uuid")
     * Auto-assigned by system if not provided
     */
    #[Groups(['course:write'])]
    public ?string $owner = null;

    #[Groups(['course:write'])]
    public int $totalLengthSeconds = 0;


    // Getters and Setters

    public function getOrganization(): ?string    {
        return $this->organization;
    }

    public function setOrganization(?string $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getReleaseDate(): ?\DateTimeImmutable    {
        return $this->releaseDate;
    }

    public function setReleaseDate(?\DateTimeImmutable $releaseDate): self
    {
        $this->releaseDate = $releaseDate;
        return $this;
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getModules(): array    {
        return $this->modules;
    }

    public function setModules(array $modules): self
    {
        $this->modules = $modules;
        return $this;
    }

    public function getActive(): bool    {
        return $this->active;
    }

    public function setActive(bool $active): self
    {
        $this->active = $active;
        return $this;
    }

    public function getOwner(): ?string    {
        return $this->owner;
    }

    public function setOwner(?string $owner): self
    {
        $this->owner = $owner;
        return $this;
    }

    public function getStudentCourses(): ?string    {
        return $this->studentCourses;
    }

    public function setStudentCourses(?string $studentCourses): self
    {
        $this->studentCourses = $studentCourses;
        return $this;
    }

    public function getTotalLengthSeconds(): int    {
        return $this->totalLengthSeconds;
    }

    public function setTotalLengthSeconds(int $totalLengthSeconds): self
    {
        $this->totalLengthSeconds = $totalLengthSeconds;
        return $this;
    }
}
