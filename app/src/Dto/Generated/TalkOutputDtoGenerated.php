<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Uid\Uuid;
use App\Dto\OrganizationOutputDto;
use App\Dto\CompanyOutputDto;
use App\Dto\ContactOutputDto;
use App\Dto\DealOutputDto;
use App\Dto\TalkTypeOutputDto;
use App\Dto\UserOutputDto;
use App\Dto\AgentOutputDto;
use App\Dto\CampaignOutputDto;
use App\Dto\TalkMessageOutputDto;

/**
 * Talk Output DTO (Generated Base Class)
 *
 * Communication threads with customers and prospects *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom computed properties to TalkOutputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class TalkOutputDtoGenerated
{
    public ?Uuid $id = null;

    /**
     * organization reference
     * Can be: IRI string or nested OrganizationOutput object
     */
    public string|OrganizationOutputDto $organization;

    public string $subject;

    public ?string $summary = null;

    /**
     * company reference
     * Can be: IRI string or nested CompanyOutput object
     */
    public string|CompanyOutputDto|null $company = null;

    /**
     * contact reference
     * Can be: IRI string or nested ContactOutput object
     */
    public string|ContactOutputDto|null $contact = null;

    /**
     * deal reference
     * Can be: IRI string or nested DealOutput object
     */
    public string|DealOutputDto|null $deal = null;

    /**
     * talkType reference
     * Can be: IRI string or nested TalkTypeOutput object
     */
    public string|TalkTypeOutputDto $talkType;

    public int $channel;

    public int $status;

    public ?int $priority = null;

    public ?int $outcome = null;

    public ?string $sentiment = null;

    public ?\DateTimeImmutable $dateStart = null;

    public ?\DateTimeImmutable $dateLastMessage = null;

    public ?\DateTimeImmutable $closedAt = null;

    public ?int $durationSeconds = null;

    public ?string $recordingUrl = null;

    /**
     * users collection
     * @var UserOutputDto[]
     */
    public array $users = [];

    /**
     * owner reference
     * Can be: IRI string or nested UserOutput object
     */
    public string|UserOutputDto $owner;

    /**
     * assignedTo reference
     * Can be: IRI string or nested UserOutput object
     */
    public string|UserOutputDto|null $assignedTo = null;

    /**
     * agents collection
     * @var AgentOutputDto[]
     */
    public array $agents = [];

    /**
     * campaigns collection
     * @var CampaignOutputDto[]
     */
    public array $campaigns = [];

    /**
     * messages collection
     * @var TalkMessageOutputDto[]
     */
    public array $messages = [];

    public int $messageCount;

    public bool $archived;

    public bool $internal;

    public ?array $tags = null;

    public ?\DateTimeImmutable $createdAt = null;

    public ?\DateTimeImmutable $updatedAt = null;

    // Getters and Setters
    public function getId(): ?Uuid
    {
        return $this->id;
    }

    public function setId(?Uuid $id): self
    {
        $this->id = $id;
        return $this;
    }


    public function getOrganization(): string|OrganizationOutputDto    {
        return $this->organization;
    }

    public function setOrganization(string|OrganizationOutputDto $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getSubject(): string    {
        return $this->subject;
    }

    public function setSubject(string $subject): self
    {
        $this->subject = $subject;
        return $this;
    }

    public function getSummary(): ?string    {
        return $this->summary;
    }

    public function setSummary(?string $summary): self
    {
        $this->summary = $summary;
        return $this;
    }

    public function getCompany(): string|CompanyOutputDto|null    {
        return $this->company;
    }

    public function setCompany(string|CompanyOutputDto|null $company): self
    {
        $this->company = $company;
        return $this;
    }

    public function getContact(): string|ContactOutputDto|null    {
        return $this->contact;
    }

    public function setContact(string|ContactOutputDto|null $contact): self
    {
        $this->contact = $contact;
        return $this;
    }

    public function getDeal(): string|DealOutputDto|null    {
        return $this->deal;
    }

    public function setDeal(string|DealOutputDto|null $deal): self
    {
        $this->deal = $deal;
        return $this;
    }

    public function getTalkType(): string|TalkTypeOutputDto    {
        return $this->talkType;
    }

    public function setTalkType(string|TalkTypeOutputDto $talkType): self
    {
        $this->talkType = $talkType;
        return $this;
    }

    public function getChannel(): int    {
        return $this->channel;
    }

    public function setChannel(int $channel): self
    {
        $this->channel = $channel;
        return $this;
    }

    public function getStatus(): int    {
        return $this->status;
    }

    public function setStatus(int $status): self
    {
        $this->status = $status;
        return $this;
    }

    public function getPriority(): ?int    {
        return $this->priority;
    }

    public function setPriority(?int $priority): self
    {
        $this->priority = $priority;
        return $this;
    }

    public function getOutcome(): ?int    {
        return $this->outcome;
    }

    public function setOutcome(?int $outcome): self
    {
        $this->outcome = $outcome;
        return $this;
    }

    public function getSentiment(): ?string    {
        return $this->sentiment;
    }

    public function setSentiment(?string $sentiment): self
    {
        $this->sentiment = $sentiment;
        return $this;
    }

    public function getDateStart(): ?\DateTimeImmutable    {
        return $this->dateStart;
    }

    public function setDateStart(?\DateTimeImmutable $dateStart): self
    {
        $this->dateStart = $dateStart;
        return $this;
    }

    public function getDateLastMessage(): ?\DateTimeImmutable    {
        return $this->dateLastMessage;
    }

    public function setDateLastMessage(?\DateTimeImmutable $dateLastMessage): self
    {
        $this->dateLastMessage = $dateLastMessage;
        return $this;
    }

    public function getClosedAt(): ?\DateTimeImmutable    {
        return $this->closedAt;
    }

    public function setClosedAt(?\DateTimeImmutable $closedAt): self
    {
        $this->closedAt = $closedAt;
        return $this;
    }

    public function getDurationSeconds(): ?int    {
        return $this->durationSeconds;
    }

    public function setDurationSeconds(?int $durationSeconds): self
    {
        $this->durationSeconds = $durationSeconds;
        return $this;
    }

    public function getRecordingUrl(): ?string    {
        return $this->recordingUrl;
    }

    public function setRecordingUrl(?string $recordingUrl): self
    {
        $this->recordingUrl = $recordingUrl;
        return $this;
    }

    public function getUsers(): array    {
        return $this->users;
    }

    public function setUsers(array $users): self
    {
        $this->users = $users;
        return $this;
    }

    public function getOwner(): string|UserOutputDto    {
        return $this->owner;
    }

    public function setOwner(string|UserOutputDto $owner): self
    {
        $this->owner = $owner;
        return $this;
    }

    public function getAssignedTo(): string|UserOutputDto|null    {
        return $this->assignedTo;
    }

    public function setAssignedTo(string|UserOutputDto|null $assignedTo): self
    {
        $this->assignedTo = $assignedTo;
        return $this;
    }

    public function getAgents(): array    {
        return $this->agents;
    }

    public function setAgents(array $agents): self
    {
        $this->agents = $agents;
        return $this;
    }

    public function getCampaigns(): array    {
        return $this->campaigns;
    }

    public function setCampaigns(array $campaigns): self
    {
        $this->campaigns = $campaigns;
        return $this;
    }

    public function getMessages(): array    {
        return $this->messages;
    }

    public function setMessages(array $messages): self
    {
        $this->messages = $messages;
        return $this;
    }

    public function getMessageCount(): int    {
        return $this->messageCount;
    }

    public function setMessageCount(int $messageCount): self
    {
        $this->messageCount = $messageCount;
        return $this;
    }

    public function getArchived(): bool    {
        return $this->archived;
    }

    public function setArchived(bool $archived): self
    {
        $this->archived = $archived;
        return $this;
    }

    public function getInternal(): bool    {
        return $this->internal;
    }

    public function setInternal(bool $internal): self
    {
        $this->internal = $internal;
        return $this;
    }

    public function getTags(): ?array    {
        return $this->tags;
    }

    public function setTags(?array $tags): self
    {
        $this->tags = $tags;
        return $this;
    }

    public function getCreatedAt(): ?\DateTimeImmutable
    {
        return $this->createdAt;
    }

    public function setCreatedAt(?\DateTimeImmutable $createdAt): self
    {
        $this->createdAt = $createdAt;
        return $this;
    }

    public function getUpdatedAt(): ?\DateTimeImmutable
    {
        return $this->updatedAt;
    }

    public function setUpdatedAt(?\DateTimeImmutable $updatedAt): self
    {
        $this->updatedAt = $updatedAt;
        return $this;
    }
}
