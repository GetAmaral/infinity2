<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Uid\Uuid;
use App\Dto\OrganizationOutputDto;
use App\Dto\EventOutputDto;
use App\Dto\ProductOutputDto;
use App\Dto\TalkMessageOutputDto;

/**
 * Attachment Output DTO (Generated Base Class)
 *
 * File attachments for documents and media *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom computed properties to AttachmentOutputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class AttachmentOutputDtoGenerated
{
    public ?Uuid $id = null;

    /**
     * organization reference
     * Can be: IRI string or nested OrganizationOutput object
     */
    public string|OrganizationOutputDto $organization;

    /**
     * event reference
     * Can be: IRI string or nested EventOutput object
     */
    public string|EventOutputDto|null $event = null;

    public ?int $fileSize = null;

    public ?string $fileType = null;

    public string $filename;

    /**
     * product reference
     * Can be: IRI string or nested ProductOutput object
     */
    public string|ProductOutputDto|null $product = null;

    /**
     * talkMessage reference
     * Can be: IRI string or nested TalkMessageOutput object
     */
    public string|TalkMessageOutputDto|null $talkMessage = null;

    public ?string $url = null;

    public ?\DateTimeImmutable $createdAt = null;

    public ?\DateTimeImmutable $updatedAt = null;

    // Getters and Setters
    public function getId(): ?Uuid
    {
        return $this->id;
    }

    public function setId(?Uuid $id): self
    {
        $this->id = $id;
        return $this;
    }


    public function getOrganization(): string|OrganizationOutputDto    {
        return $this->organization;
    }

    public function setOrganization(string|OrganizationOutputDto $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getEvent(): string|EventOutputDto|null    {
        return $this->event;
    }

    public function setEvent(string|EventOutputDto|null $event): self
    {
        $this->event = $event;
        return $this;
    }

    public function getFileSize(): ?int    {
        return $this->fileSize;
    }

    public function setFileSize(?int $fileSize): self
    {
        $this->fileSize = $fileSize;
        return $this;
    }

    public function getFileType(): ?string    {
        return $this->fileType;
    }

    public function setFileType(?string $fileType): self
    {
        $this->fileType = $fileType;
        return $this;
    }

    public function getFilename(): string    {
        return $this->filename;
    }

    public function setFilename(string $filename): self
    {
        $this->filename = $filename;
        return $this;
    }

    public function getProduct(): string|ProductOutputDto|null    {
        return $this->product;
    }

    public function setProduct(string|ProductOutputDto|null $product): self
    {
        $this->product = $product;
        return $this;
    }

    public function getTalkMessage(): string|TalkMessageOutputDto|null    {
        return $this->talkMessage;
    }

    public function setTalkMessage(string|TalkMessageOutputDto|null $talkMessage): self
    {
        $this->talkMessage = $talkMessage;
        return $this;
    }

    public function getUrl(): ?string    {
        return $this->url;
    }

    public function setUrl(?string $url): self
    {
        $this->url = $url;
        return $this;
    }

    public function getCreatedAt(): ?\DateTimeImmutable
    {
        return $this->createdAt;
    }

    public function setCreatedAt(?\DateTimeImmutable $createdAt): self
    {
        $this->createdAt = $createdAt;
        return $this;
    }

    public function getUpdatedAt(): ?\DateTimeImmutable
    {
        return $this->updatedAt;
    }

    public function setUpdatedAt(?\DateTimeImmutable $updatedAt): self
    {
        $this->updatedAt = $updatedAt;
        return $this;
    }
}
