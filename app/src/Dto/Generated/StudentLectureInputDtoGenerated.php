<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use Symfony\Component\Serializer\Annotation\Groups;
use App\Dto\UserInputDto;
use App\Dto\CourseLectureInputDto;
use App\Dto\StudentCourseInputDto;

/**
 * StudentLecture Input DTO (Generated Base Class)
 *
 * Student lecture progress and completion tracking *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to StudentLectureInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class StudentLectureInputDtoGenerated
{
    /**
     * student reference
     * Must be: IRI string (e.g., "/api/users/uuid")
     */
    #[Assert\NotNull]
    #[Groups(['student_lecture:write'])]
    public ?string $student = null;

    /**
     * lecture reference
     * Must be: IRI string (e.g., "/api/courselectures/uuid")
     */
    #[Assert\NotNull]
    #[Groups(['student_lecture:write'])]
    public ?string $lecture = null;

    /**
     * studentCourse reference
     * Must be: IRI string (e.g., "/api/studentcourses/uuid")
     */
    #[Groups(['student_lecture:write'])]
    public ?string $studentCourse = null;

    #[Groups(['student_lecture:write'])]
    public int $watchedSeconds = 0;

    #[Groups(['student_lecture:write'])]
    public int $lastPositionSeconds = 0;

    #[Assert\Range(max: 100, min: 0)]
    #[Groups(['student_lecture:write'])]
    public string $completionPercentage = '0';

    #[Groups(['student_lecture:write'])]
    public bool $completed = false;

    #[Groups(['student_lecture:write'])]
    public ?\DateTimeImmutable $lastWatchedAt = null;

    #[Groups(['student_lecture:write'])]
    public ?\DateTimeImmutable $completedAt = null;


    // Getters and Setters

    public function getStudent(): ?string    {
        return $this->student;
    }

    public function setStudent(?string $student): self
    {
        $this->student = $student;
        return $this;
    }

    public function getLecture(): ?string    {
        return $this->lecture;
    }

    public function setLecture(?string $lecture): self
    {
        $this->lecture = $lecture;
        return $this;
    }

    public function getStudentcourse(): ?string    {
        return $this->studentCourse;
    }

    public function setStudentcourse(?string $studentCourse): self
    {
        $this->studentCourse = $studentCourse;
        return $this;
    }

    public function getWatchedseconds(): int    {
        return $this->watchedSeconds;
    }

    public function setWatchedseconds(int $watchedSeconds): self
    {
        $this->watchedSeconds = $watchedSeconds;
        return $this;
    }

    public function getLastpositionseconds(): int    {
        return $this->lastPositionSeconds;
    }

    public function setLastpositionseconds(int $lastPositionSeconds): self
    {
        $this->lastPositionSeconds = $lastPositionSeconds;
        return $this;
    }

    public function getCompletionpercentage(): string    {
        return $this->completionPercentage;
    }

    public function setCompletionpercentage(string $completionPercentage): self
    {
        $this->completionPercentage = $completionPercentage;
        return $this;
    }

    public function getCompleted(): bool    {
        return $this->completed;
    }

    public function setCompleted(bool $completed): self
    {
        $this->completed = $completed;
        return $this;
    }

    public function getLastwatchedat(): ?\DateTimeImmutable    {
        return $this->lastWatchedAt;
    }

    public function setLastwatchedat(?\DateTimeImmutable $lastWatchedAt): self
    {
        $this->lastWatchedAt = $lastWatchedAt;
        return $this;
    }

    public function getCompletedat(): ?\DateTimeImmutable    {
        return $this->completedAt;
    }

    public function setCompletedat(?\DateTimeImmutable $completedAt): self
    {
        $this->completedAt = $completedAt;
        return $this;
    }
}
