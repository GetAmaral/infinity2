<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use App\Dto\OrganizationInputDto;
use App\Dto\ContactInputDto;
use App\Dto\EventInputDto;
use App\Dto\UserInputDto;

/**
 * EventAttendee Input DTO (Generated Base Class)
 *
 * Comprehensive event attendee tracking with RSVP status, check-in management, and attendance confirmation *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to EventAttendeeInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class EventAttendeeInputDtoGenerated
{
    /**
     * organization reference
     * Can be: IRI string (e.g., "/api/organizations/uuid") or nested OrganizationInput object
     */
    #[Assert\NotNull]
    public string|OrganizationInputDto $organization;

    public string $name;

    public ?int $attendeeStatus = null;

    public ?string $comment = null;

    /**
     * contact reference
     * Can be: IRI string (e.g., "/api/contacts/uuid") or nested ContactInput object
     */
    public string|ContactInputDto|null $contact = null;

    public ?string $email = null;

    /**
     * event reference
     * Can be: IRI string (e.g., "/api/events/uuid") or nested EventInput object
     */
    #[Assert\NotNull]
    public string|EventInputDto $event;

    public bool $optional = false;

    public bool $organizer = false;

    public ?string $phone = null;

    /**
     * user reference
     * Can be: IRI string (e.g., "/api/users/uuid") or nested UserInput object
     */
    public string|UserInputDto|null $user = null;


    // Getters and Setters

    public function getOrganization(): string|OrganizationInputDto    {
        return $this->organization;
    }

    public function setOrganization(string|OrganizationInputDto $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getAttendeestatus(): ?int    {
        return $this->attendeeStatus;
    }

    public function setAttendeestatus(?int $attendeeStatus): self
    {
        $this->attendeeStatus = $attendeeStatus;
        return $this;
    }

    public function getComment(): ?string    {
        return $this->comment;
    }

    public function setComment(?string $comment): self
    {
        $this->comment = $comment;
        return $this;
    }

    public function getContact(): string|ContactInputDto|null    {
        return $this->contact;
    }

    public function setContact(string|ContactInputDto|null $contact): self
    {
        $this->contact = $contact;
        return $this;
    }

    public function getEmail(): ?string    {
        return $this->email;
    }

    public function setEmail(?string $email): self
    {
        $this->email = $email;
        return $this;
    }

    public function getEvent(): string|EventInputDto    {
        return $this->event;
    }

    public function setEvent(string|EventInputDto $event): self
    {
        $this->event = $event;
        return $this;
    }

    public function getNotifications(): ?string    {
        return $this->notifications;
    }

    public function setNotifications(?string $notifications): self
    {
        $this->notifications = $notifications;
        return $this;
    }

    public function getOptional(): bool    {
        return $this->optional;
    }

    public function setOptional(bool $optional): self
    {
        $this->optional = $optional;
        return $this;
    }

    public function getOrganizer(): bool    {
        return $this->organizer;
    }

    public function setOrganizer(bool $organizer): self
    {
        $this->organizer = $organizer;
        return $this;
    }

    public function getPhone(): ?string    {
        return $this->phone;
    }

    public function setPhone(?string $phone): self
    {
        $this->phone = $phone;
        return $this;
    }

    public function getUser(): string|UserInputDto|null    {
        return $this->user;
    }

    public function setUser(string|UserInputDto|null $user): self
    {
        $this->user = $user;
        return $this;
    }
}
