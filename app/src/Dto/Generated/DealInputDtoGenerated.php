<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use Symfony\Component\Serializer\Annotation\Groups;
use App\Dto\OrganizationInputDto;
use App\Dto\CompanyInputDto;
use App\Dto\PipelineStageInputDto;
use App\Dto\PipelineInputDto;
use App\Dto\DealTypeInputDto;
use App\Dto\DealCategoryInputDto;
use App\Dto\UserInputDto;
use App\Dto\ContactInputDto;
use App\Dto\LeadSourceInputDto;
use App\Dto\CampaignInputDto;
use App\Dto\LostReasonInputDto;
use App\Dto\WinReasonInputDto;

/**
 * Deal Input DTO (Generated Base Class)
 *
 * Sales opportunities and deals tracking *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to DealInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class DealInputDtoGenerated
{
    /**
     * organization reference
     * Must be: IRI string (e.g., "/api/organizatia/uuid")
     * Auto-assigned by system if not provided
     */
    #[Groups(['deal:write'])]
    public ?string $organization = null;

    #[Groups(['deal:write'])]
    public string $name;

    #[Groups(['deal:write'])]
    public ?string $description = null;

    /**
     * company reference
     * Must be: IRI string (e.g., "/api/nies/uuid")
     */
    #[Groups(['deal:write'])]
    public ?string $company = null;

    #[Groups(['deal:write'])]
    public string $dealStatus;

    /**
     * currentStage reference
     * Must be: IRI string (e.g., "/api/pipeline_stages/uuid")
     */
    #[Groups(['deal:write'])]
    public ?string $currentStage = null;

    #[Groups(['deal:write'])]
    public ?string $probability = null;

    /**
     * pipeline reference
     * Must be: IRI string (e.g., "/api/pipelines/uuid")
     */
    #[Groups(['deal:write'])]
    public ?string $pipeline = null;

    /**
     * dealType reference
     * Must be: IRI string (e.g., "/api/deal_types/uuid")
     */
    #[Groups(['deal:write'])]
    public ?string $dealType = null;

    #[Groups(['deal:write'])]
    public ?string $priority = null;

    /**
     * category reference
     * Must be: IRI string (e.g., "/api/deal_ries/uuid")
     */
    #[Groups(['deal:write'])]
    public ?string $category = null;

    #[Groups(['deal:write'])]
    public ?string $dealNumber = null;

    #[Groups(['deal:write'])]
    public ?string $expectedAmount = null;

    #[Groups(['deal:write'])]
    public ?string $weightedAmount = null;

    #[Groups(['deal:write'])]
    public ?string $closureAmount = null;

    #[Groups(['deal:write'])]
    public ?string $initialAmount = null;

    #[Groups(['deal:write'])]
    public ?string $currency = null;

    #[Groups(['deal:write'])]
    public ?float $exchangeRate = null;

    #[Assert\Range(max: 100, min: 0)]
    #[Groups(['deal:write'])]
    public ?string $discountPercentage = null;

    #[Groups(['deal:write'])]
    public ?string $discountAmount = null;

    #[Assert\Range(max: 100, min: 0)]
    #[Groups(['deal:write'])]
    public ?string $commissionRate = null;

    #[Groups(['deal:write'])]
    public ?string $commissionAmount = null;

    #[Groups(['deal:write'])]
    public ?\DateTimeImmutable $expectedClosureDate = null;

    #[Groups(['deal:write'])]
    public ?\DateTimeImmutable $closureDate = null;

    #[Groups(['deal:write'])]
    public ?\DateTimeImmutable $initialDate = null;

    #[Groups(['deal:write'])]
    public ?\DateTimeImmutable $lastActivityDate = null;

    #[Groups(['deal:write'])]
    public ?\DateTimeImmutable $nextFollowUp = null;

    #[Groups(['deal:write'])]
    public ?float $daysInCurrentStage = null;

    #[Groups(['deal:write'])]
    public ?int $forecastCategory = null;

    /**
     * manager reference
     * Must be: IRI string (e.g., "/api/users/uuid")
     */
    #[Groups(['deal:write'])]
    public ?string $manager = null;

    /**
     * owner reference
     * Must be: IRI string (e.g., "/api/users/uuid")
     * Auto-assigned by system if not provided
     */
    #[Groups(['deal:write'])]
    public ?string $owner = null;

    /**
     * primaryContact reference
     * Must be: IRI string (e.g., "/api/contacts/uuid")
     */
    #[Groups(['deal:write'])]
    public ?string $primaryContact = null;

    /**
     * leadSource reference
     * Must be: IRI string (e.g., "/api/lead_sources/uuid")
     */
    #[Groups(['deal:write'])]
    public ?string $leadSource = null;

    /**
     * campaign reference
     * Must be: IRI string (e.g., "/api/campaigns/uuid")
     */
    #[Groups(['deal:write'])]
    public ?string $campaign = null;

    #[Groups(['deal:write'])]
    public ?string $sourceDetails = null;

    #[Groups(['deal:write'])]
    public ?string $notes = null;

    #[Groups(['deal:write'])]
    public ?array $customFields = null;

    /**
     * lostReason reference
     * Must be: IRI string (e.g., "/api/lost_reasa/uuid")
     */
    #[Groups(['deal:write'])]
    public ?string $lostReason = null;

    /**
     * winReason reference
     * Must be: IRI string (e.g., "/api/win_reasa/uuid")
     */
    #[Groups(['deal:write'])]
    public ?string $winReason = null;

    #[Groups(['deal:write'])]
    public ?\DateTimeImmutable $actualClosureDate = null;


    // Getters and Setters

    public function getOrganization(): ?string    {
        return $this->organization;
    }

    public function setOrganization(?string $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getCompany(): ?string    {
        return $this->company;
    }

    public function setCompany(?string $company): self
    {
        $this->company = $company;
        return $this;
    }

    public function getDealStatus(): string    {
        return $this->dealStatus;
    }

    public function setDealStatus(string $dealStatus): self
    {
        $this->dealStatus = $dealStatus;
        return $this;
    }

    public function getCurrentStage(): ?string    {
        return $this->currentStage;
    }

    public function setCurrentStage(?string $currentStage): self
    {
        $this->currentStage = $currentStage;
        return $this;
    }

    public function getProbability(): ?string    {
        return $this->probability;
    }

    public function setProbability(?string $probability): self
    {
        $this->probability = $probability;
        return $this;
    }

    public function getPipeline(): ?string    {
        return $this->pipeline;
    }

    public function setPipeline(?string $pipeline): self
    {
        $this->pipeline = $pipeline;
        return $this;
    }

    public function getDealType(): ?string    {
        return $this->dealType;
    }

    public function setDealType(?string $dealType): self
    {
        $this->dealType = $dealType;
        return $this;
    }

    public function getPriority(): ?string    {
        return $this->priority;
    }

    public function setPriority(?string $priority): self
    {
        $this->priority = $priority;
        return $this;
    }

    public function getCategory(): ?string    {
        return $this->category;
    }

    public function setCategory(?string $category): self
    {
        $this->category = $category;
        return $this;
    }

    public function getDealNumber(): ?string    {
        return $this->dealNumber;
    }

    public function setDealNumber(?string $dealNumber): self
    {
        $this->dealNumber = $dealNumber;
        return $this;
    }

    public function getExpectedAmount(): ?string    {
        return $this->expectedAmount;
    }

    public function setExpectedAmount(?string $expectedAmount): self
    {
        $this->expectedAmount = $expectedAmount;
        return $this;
    }

    public function getWeightedAmount(): ?string    {
        return $this->weightedAmount;
    }

    public function setWeightedAmount(?string $weightedAmount): self
    {
        $this->weightedAmount = $weightedAmount;
        return $this;
    }

    public function getClosureAmount(): ?string    {
        return $this->closureAmount;
    }

    public function setClosureAmount(?string $closureAmount): self
    {
        $this->closureAmount = $closureAmount;
        return $this;
    }

    public function getInitialAmount(): ?string    {
        return $this->initialAmount;
    }

    public function setInitialAmount(?string $initialAmount): self
    {
        $this->initialAmount = $initialAmount;
        return $this;
    }

    public function getCurrency(): ?string    {
        return $this->currency;
    }

    public function setCurrency(?string $currency): self
    {
        $this->currency = $currency;
        return $this;
    }

    public function getExchangeRate(): ?float    {
        return $this->exchangeRate;
    }

    public function setExchangeRate(?float $exchangeRate): self
    {
        $this->exchangeRate = $exchangeRate;
        return $this;
    }

    public function getDiscountPercentage(): ?string    {
        return $this->discountPercentage;
    }

    public function setDiscountPercentage(?string $discountPercentage): self
    {
        $this->discountPercentage = $discountPercentage;
        return $this;
    }

    public function getDiscountAmount(): ?string    {
        return $this->discountAmount;
    }

    public function setDiscountAmount(?string $discountAmount): self
    {
        $this->discountAmount = $discountAmount;
        return $this;
    }

    public function getCommissionRate(): ?string    {
        return $this->commissionRate;
    }

    public function setCommissionRate(?string $commissionRate): self
    {
        $this->commissionRate = $commissionRate;
        return $this;
    }

    public function getCommissionAmount(): ?string    {
        return $this->commissionAmount;
    }

    public function setCommissionAmount(?string $commissionAmount): self
    {
        $this->commissionAmount = $commissionAmount;
        return $this;
    }

    public function getExpectedClosureDate(): ?\DateTimeImmutable    {
        return $this->expectedClosureDate;
    }

    public function setExpectedClosureDate(?\DateTimeImmutable $expectedClosureDate): self
    {
        $this->expectedClosureDate = $expectedClosureDate;
        return $this;
    }

    public function getClosureDate(): ?\DateTimeImmutable    {
        return $this->closureDate;
    }

    public function setClosureDate(?\DateTimeImmutable $closureDate): self
    {
        $this->closureDate = $closureDate;
        return $this;
    }

    public function getProducts(): ?string    {
        return $this->products;
    }

    public function setProducts(?string $products): self
    {
        $this->products = $products;
        return $this;
    }

    public function getInitialDate(): ?\DateTimeImmutable    {
        return $this->initialDate;
    }

    public function setInitialDate(?\DateTimeImmutable $initialDate): self
    {
        $this->initialDate = $initialDate;
        return $this;
    }

    public function getLastActivityDate(): ?\DateTimeImmutable    {
        return $this->lastActivityDate;
    }

    public function setLastActivityDate(?\DateTimeImmutable $lastActivityDate): self
    {
        $this->lastActivityDate = $lastActivityDate;
        return $this;
    }

    public function getNextFollowUp(): ?\DateTimeImmutable    {
        return $this->nextFollowUp;
    }

    public function setNextFollowUp(?\DateTimeImmutable $nextFollowUp): self
    {
        $this->nextFollowUp = $nextFollowUp;
        return $this;
    }

    public function getDaysInCurrentStage(): ?float    {
        return $this->daysInCurrentStage;
    }

    public function setDaysInCurrentStage(?float $daysInCurrentStage): self
    {
        $this->daysInCurrentStage = $daysInCurrentStage;
        return $this;
    }

    public function getForecastCategory(): ?int    {
        return $this->forecastCategory;
    }

    public function setForecastCategory(?int $forecastCategory): self
    {
        $this->forecastCategory = $forecastCategory;
        return $this;
    }

    public function getManager(): ?string    {
        return $this->manager;
    }

    public function setManager(?string $manager): self
    {
        $this->manager = $manager;
        return $this;
    }

    public function getTeam(): ?string    {
        return $this->team;
    }

    public function setTeam(?string $team): self
    {
        $this->team = $team;
        return $this;
    }

    public function getOwner(): ?string    {
        return $this->owner;
    }

    public function setOwner(?string $owner): self
    {
        $this->owner = $owner;
        return $this;
    }

    public function getPrimaryContact(): ?string    {
        return $this->primaryContact;
    }

    public function setPrimaryContact(?string $primaryContact): self
    {
        $this->primaryContact = $primaryContact;
        return $this;
    }

    public function getContacts(): ?string    {
        return $this->contacts;
    }

    public function setContacts(?string $contacts): self
    {
        $this->contacts = $contacts;
        return $this;
    }

    public function getLeadSource(): ?string    {
        return $this->leadSource;
    }

    public function setLeadSource(?string $leadSource): self
    {
        $this->leadSource = $leadSource;
        return $this;
    }

    public function getCampaign(): ?string    {
        return $this->campaign;
    }

    public function setCampaign(?string $campaign): self
    {
        $this->campaign = $campaign;
        return $this;
    }

    public function getSourceDetails(): ?string    {
        return $this->sourceDetails;
    }

    public function setSourceDetails(?string $sourceDetails): self
    {
        $this->sourceDetails = $sourceDetails;
        return $this;
    }

    public function getNotes(): ?string    {
        return $this->notes;
    }

    public function setNotes(?string $notes): self
    {
        $this->notes = $notes;
        return $this;
    }

    public function getDealStages(): ?string    {
        return $this->dealStages;
    }

    public function setDealStages(?string $dealStages): self
    {
        $this->dealStages = $dealStages;
        return $this;
    }

    public function getTalks(): ?string    {
        return $this->talks;
    }

    public function setTalks(?string $talks): self
    {
        $this->talks = $talks;
        return $this;
    }

    public function getTasks(): ?string    {
        return $this->tasks;
    }

    public function setTasks(?string $tasks): self
    {
        $this->tasks = $tasks;
        return $this;
    }

    public function getCompetitors(): ?string    {
        return $this->competitors;
    }

    public function setCompetitors(?string $competitors): self
    {
        $this->competitors = $competitors;
        return $this;
    }

    public function getTags(): ?string    {
        return $this->tags;
    }

    public function setTags(?string $tags): self
    {
        $this->tags = $tags;
        return $this;
    }

    public function getCustomFields(): ?array    {
        return $this->customFields;
    }

    public function setCustomFields(?array $customFields): self
    {
        $this->customFields = $customFields;
        return $this;
    }

    public function getLostReason(): ?string    {
        return $this->lostReason;
    }

    public function setLostReason(?string $lostReason): self
    {
        $this->lostReason = $lostReason;
        return $this;
    }

    public function getWinReason(): ?string    {
        return $this->winReason;
    }

    public function setWinReason(?string $winReason): self
    {
        $this->winReason = $winReason;
        return $this;
    }

    public function getActualClosureDate(): ?\DateTimeImmutable    {
        return $this->actualClosureDate;
    }

    public function setActualClosureDate(?\DateTimeImmutable $actualClosureDate): self
    {
        $this->actualClosureDate = $actualClosureDate;
        return $this;
    }
}
