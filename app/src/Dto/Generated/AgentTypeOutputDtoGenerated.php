<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Uid\Uuid;
use App\Dto\AgentOutputDto;

/**
 * AgentType Output DTO (Generated Base Class)
 *
 * Agent types for customer support and sales teams *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom computed properties to AgentTypeOutputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class AgentTypeOutputDtoGenerated
{
    public ?Uuid $id = null;

    public string $name;

    public ?string $description = null;

    /**
     * agents collection
     * @var AgentOutputDto[]
     */
    public array $agents = [];

    public ?bool $active = null;

    public ?string $code = null;

    public ?string $color = null;

    public ?bool $default = null;

    public ?string $defaultPrompt = null;

    public ?string $icon = null;

    public ?int $sortOrder = null;

    public ?\DateTimeImmutable $createdAt = null;

    public ?\DateTimeImmutable $updatedAt = null;

    // Getters and Setters
    public function getId(): ?Uuid
    {
        return $this->id;
    }

    public function setId(?Uuid $id): self
    {
        $this->id = $id;
        return $this;
    }


    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getAgents(): array    {
        return $this->agents;
    }

    public function setAgents(array $agents): self
    {
        $this->agents = $agents;
        return $this;
    }

    public function getActive(): ?bool    {
        return $this->active;
    }

    public function setActive(?bool $active): self
    {
        $this->active = $active;
        return $this;
    }

    public function getCode(): ?string    {
        return $this->code;
    }

    public function setCode(?string $code): self
    {
        $this->code = $code;
        return $this;
    }

    public function getColor(): ?string    {
        return $this->color;
    }

    public function setColor(?string $color): self
    {
        $this->color = $color;
        return $this;
    }

    public function getDefault(): ?bool    {
        return $this->default;
    }

    public function setDefault(?bool $default): self
    {
        $this->default = $default;
        return $this;
    }

    public function getDefaultPrompt(): ?string    {
        return $this->defaultPrompt;
    }

    public function setDefaultPrompt(?string $defaultPrompt): self
    {
        $this->defaultPrompt = $defaultPrompt;
        return $this;
    }

    public function getIcon(): ?string    {
        return $this->icon;
    }

    public function setIcon(?string $icon): self
    {
        $this->icon = $icon;
        return $this;
    }

    public function getSortOrder(): ?int    {
        return $this->sortOrder;
    }

    public function setSortOrder(?int $sortOrder): self
    {
        $this->sortOrder = $sortOrder;
        return $this;
    }

    public function getCreatedAt(): ?\DateTimeImmutable
    {
        return $this->createdAt;
    }

    public function setCreatedAt(?\DateTimeImmutable $createdAt): self
    {
        $this->createdAt = $createdAt;
        return $this;
    }

    public function getUpdatedAt(): ?\DateTimeImmutable
    {
        return $this->updatedAt;
    }

    public function setUpdatedAt(?\DateTimeImmutable $updatedAt): self
    {
        $this->updatedAt = $updatedAt;
        return $this;
    }
}
