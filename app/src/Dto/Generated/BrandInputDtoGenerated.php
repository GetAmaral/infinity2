<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use Symfony\Component\Serializer\Annotation\Groups;
use App\Dto\OrganizationInputDto;

/**
 * Brand Input DTO (Generated Base Class)
 *
 * Product brands for catalog organization *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to BrandInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class BrandInputDtoGenerated
{
    /**
     * organization reference
     * Must be: IRI string (e.g., "/api/organizations/uuid")
     * Auto-assigned by system if not provided
     */
    #[Groups(['brand:write'])]
    public ?string $organization = null;

    #[Groups(['brand:write'])]
    public string $name;

    #[Groups(['brand:write'])]
    public ?string $description = null;

    #[Groups(['brand:write'])]
    public ?string $tagline = null;

    #[Groups(['brand:write'])]
    public ?string $logoUrl = null;

    #[Groups(['brand:write'])]
    public ?string $primaryColor = null;

    #[Groups(['brand:write'])]
    public ?string $industry = null;

    #[Groups(['brand:write'])]
    public ?string $positioning = null;

    #[Groups(['brand:write'])]
    public ?string $targetMarket = null;

    #[Groups(['brand:write'])]
    public ?string $marketShare = null;

    #[Groups(['brand:write'])]
    public ?string $brandValue = null;

    #[Groups(['brand:write'])]
    public ?string $countryOfOrigin = null;

    #[Groups(['brand:write'])]
    public ?int $foundedYear = null;

    #[Groups(['brand:write'])]
    public ?string $website = null;

    #[Groups(['brand:write'])]
    public bool $active = true;


    // Getters and Setters

    public function getOrganization(): ?string    {
        return $this->organization;
    }

    public function setOrganization(?string $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getTagline(): ?string    {
        return $this->tagline;
    }

    public function setTagline(?string $tagline): self
    {
        $this->tagline = $tagline;
        return $this;
    }

    public function getLogourl(): ?string    {
        return $this->logoUrl;
    }

    public function setLogourl(?string $logoUrl): self
    {
        $this->logoUrl = $logoUrl;
        return $this;
    }

    public function getPrimarycolor(): ?string    {
        return $this->primaryColor;
    }

    public function setPrimarycolor(?string $primaryColor): self
    {
        $this->primaryColor = $primaryColor;
        return $this;
    }

    public function getIndustry(): ?string    {
        return $this->industry;
    }

    public function setIndustry(?string $industry): self
    {
        $this->industry = $industry;
        return $this;
    }

    public function getPositioning(): ?string    {
        return $this->positioning;
    }

    public function setPositioning(?string $positioning): self
    {
        $this->positioning = $positioning;
        return $this;
    }

    public function getTargetmarket(): ?string    {
        return $this->targetMarket;
    }

    public function setTargetmarket(?string $targetMarket): self
    {
        $this->targetMarket = $targetMarket;
        return $this;
    }

    public function getMarketshare(): ?string    {
        return $this->marketShare;
    }

    public function setMarketshare(?string $marketShare): self
    {
        $this->marketShare = $marketShare;
        return $this;
    }

    public function getBrandvalue(): ?string    {
        return $this->brandValue;
    }

    public function setBrandvalue(?string $brandValue): self
    {
        $this->brandValue = $brandValue;
        return $this;
    }

    public function getCountryoforigin(): ?string    {
        return $this->countryOfOrigin;
    }

    public function setCountryoforigin(?string $countryOfOrigin): self
    {
        $this->countryOfOrigin = $countryOfOrigin;
        return $this;
    }

    public function getFoundedyear(): ?int    {
        return $this->foundedYear;
    }

    public function setFoundedyear(?int $foundedYear): self
    {
        $this->foundedYear = $foundedYear;
        return $this;
    }

    public function getWebsite(): ?string    {
        return $this->website;
    }

    public function setWebsite(?string $website): self
    {
        $this->website = $website;
        return $this;
    }

    public function getActive(): bool    {
        return $this->active;
    }

    public function setActive(bool $active): self
    {
        $this->active = $active;
        return $this;
    }

    public function getProducts(): ?string    {
        return $this->products;
    }

    public function setProducts(?string $products): self
    {
        $this->products = $products;
        return $this;
    }

    public function getManufacturers(): ?string    {
        return $this->manufacturers;
    }

    public function setManufacturers(?string $manufacturers): self
    {
        $this->manufacturers = $manufacturers;
        return $this;
    }

    public function getSuppliers(): ?string    {
        return $this->suppliers;
    }

    public function setSuppliers(?string $suppliers): self
    {
        $this->suppliers = $suppliers;
        return $this;
    }
}
