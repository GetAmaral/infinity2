<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use Symfony\Component\Serializer\Annotation\Groups;
use App\Dto\OrganizationInputDto;
use App\Dto\PipelineStageTemplateInputDto;
use App\Dto\TaskTypeInputDto;

/**
 * TaskTemplate Input DTO (Generated Base Class)
 *
 * Task templates for recurring task creation *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to TaskTemplateInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class TaskTemplateInputDtoGenerated
{
    /**
     * organization reference
     * Must be: IRI string (e.g., "/api/organizations/uuid")
     * Auto-assigned by system if not provided
     */
    #[Groups(['tasktemplate:write'])]
    public ?string $organization = null;

    #[Groups(['tasktemplate:write'])]
    public string $name;

    #[Groups(['tasktemplate:write'])]
    public ?string $description = null;

    #[Groups(['tasktemplate:write'])]
    public ?string $command = null;

    #[Groups(['tasktemplate:write'])]
    public ?bool $active = null;

    #[Groups(['tasktemplate:write'])]
    public ?int $durationMinutes = null;

    #[Groups(['tasktemplate:write'])]
    public ?string $location = null;

    #[Groups(['tasktemplate:write'])]
    public ?float $periodicityInterval = null;

    #[Groups(['tasktemplate:write'])]
    public ?int $periodicityTimeframe = null;

    /**
     * pipelineStageTemplate reference
     * Must be: IRI string (e.g., "/api/pipelinestagetemplates/uuid")
     */
    #[Groups(['tasktemplate:write'])]
    public ?string $pipelineStageTemplate = null;

    #[Assert\Range(max: 5, min: 1)]
    #[Groups(['tasktemplate:write'])]
    public ?int $priority = null;

    /**
     * type reference
     * Must be: IRI string (e.g., "/api/tasktypes/uuid")
     */
    #[Groups(['tasktemplate:write'])]
    public ?string $type = null;


    // Getters and Setters

    public function getOrganization(): ?string    {
        return $this->organization;
    }

    public function setOrganization(?string $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getCommand(): ?string    {
        return $this->command;
    }

    public function setCommand(?string $command): self
    {
        $this->command = $command;
        return $this;
    }

    public function getActive(): ?bool    {
        return $this->active;
    }

    public function setActive(?bool $active): self
    {
        $this->active = $active;
        return $this;
    }

    public function getDurationminutes(): ?int    {
        return $this->durationMinutes;
    }

    public function setDurationminutes(?int $durationMinutes): self
    {
        $this->durationMinutes = $durationMinutes;
        return $this;
    }

    public function getLocation(): ?string    {
        return $this->location;
    }

    public function setLocation(?string $location): self
    {
        $this->location = $location;
        return $this;
    }

    public function getPeriodicityinterval(): ?float    {
        return $this->periodicityInterval;
    }

    public function setPeriodicityinterval(?float $periodicityInterval): self
    {
        $this->periodicityInterval = $periodicityInterval;
        return $this;
    }

    public function getPeriodicitytimeframe(): ?int    {
        return $this->periodicityTimeframe;
    }

    public function setPeriodicitytimeframe(?int $periodicityTimeframe): self
    {
        $this->periodicityTimeframe = $periodicityTimeframe;
        return $this;
    }

    public function getPipelinestagetemplate(): ?string    {
        return $this->pipelineStageTemplate;
    }

    public function setPipelinestagetemplate(?string $pipelineStageTemplate): self
    {
        $this->pipelineStageTemplate = $pipelineStageTemplate;
        return $this;
    }

    public function getPriority(): ?int    {
        return $this->priority;
    }

    public function setPriority(?int $priority): self
    {
        $this->priority = $priority;
        return $this;
    }

    public function getType(): ?string    {
        return $this->type;
    }

    public function setType(?string $type): self
    {
        $this->type = $type;
        return $this;
    }
}
