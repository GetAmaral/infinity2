<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use Symfony\Component\Serializer\Annotation\Groups;
use App\Dto\OrganizationInputDto;

/**
 * EventResourceType Input DTO (Generated Base Class)
 *
 * Types of event resources (Meeting Room, Equipment, Vehicle, etc.) *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to EventResourceTypeInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class EventResourceTypeInputDtoGenerated
{
    #[Groups(['eventresourcetype:write'])]
    public string $name;

    #[Groups(['eventresourcetype:write'])]
    public ?string $description = null;

    /**
     * organization reference
     * Must be: IRI string (e.g., "/api/organizatia/uuid")
     * Auto-assigned by system if not provided
     */
    #[Groups(['eventresourcetype:write'])]
    public ?string $organization = null;


    // Getters and Setters

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getOrganization(): ?string    {
        return $this->organization;
    }

    public function setOrganization(?string $organization): self
    {
        $this->organization = $organization;
        return $this;
    }
}
