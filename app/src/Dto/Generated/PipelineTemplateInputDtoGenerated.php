<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use Symfony\Component\Serializer\Annotation\Groups;
use App\Dto\OrganizationInputDto;

/**
 * PipelineTemplate Input DTO (Generated Base Class)
 *
 * Pipeline templates for quick setup *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to PipelineTemplateInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class PipelineTemplateInputDtoGenerated
{
    /**
     * organization reference
     * Must be: IRI string (e.g., "/api/organizations/uuid")
     * Auto-assigned by system if not provided
     */
    #[Groups(['pipelinetemplate:write'])]
    public ?string $organization = null;

    #[Groups(['pipelinetemplate:write'])]
    public string $name;

    #[Groups(['pipelinetemplate:write'])]
    public bool $default = false;

    #[Groups(['pipelinetemplate:write'])]
    public ?string $description = null;

    #[Groups(['pipelinetemplate:write'])]
    public bool $public = false;

    #[Groups(['pipelinetemplate:write'])]
    public ?string $templateCategory = null;

    #[Groups(['pipelinetemplate:write'])]
    public ?int $estimatedDuration = null;

    #[Groups(['pipelinetemplate:write'])]
    public ?string $industry = null;

    #[Groups(['pipelinetemplate:write'])]
    public int $stageCount;

    #[Groups(['pipelinetemplate:write'])]
    public ?string $targetDealSize = null;

    #[Groups(['pipelinetemplate:write'])]
    public string $color = '#0dcaf0';

    #[Groups(['pipelinetemplate:write'])]
    public string $icon = 'bi-diagram-3-fill';

    #[Groups(['pipelinetemplate:write'])]
    public int $usageCount = 0;

    #[Groups(['pipelinetemplate:write'])]
    public ?array $tags = null;

    #[Groups(['pipelinetemplate:write'])]
    public ?bool $active = true;


    // Getters and Setters

    public function getOrganization(): ?string    {
        return $this->organization;
    }

    public function setOrganization(?string $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDefault(): bool    {
        return $this->default;
    }

    public function setDefault(bool $default): self
    {
        $this->default = $default;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getPublic(): bool    {
        return $this->public;
    }

    public function setPublic(bool $public): self
    {
        $this->public = $public;
        return $this;
    }

    public function getTemplatecategory(): ?string    {
        return $this->templateCategory;
    }

    public function setTemplatecategory(?string $templateCategory): self
    {
        $this->templateCategory = $templateCategory;
        return $this;
    }

    public function getEstimatedduration(): ?int    {
        return $this->estimatedDuration;
    }

    public function setEstimatedduration(?int $estimatedDuration): self
    {
        $this->estimatedDuration = $estimatedDuration;
        return $this;
    }

    public function getIndustry(): ?string    {
        return $this->industry;
    }

    public function setIndustry(?string $industry): self
    {
        $this->industry = $industry;
        return $this;
    }

    public function getStagecount(): int    {
        return $this->stageCount;
    }

    public function setStagecount(int $stageCount): self
    {
        $this->stageCount = $stageCount;
        return $this;
    }

    public function getTargetdealsize(): ?string    {
        return $this->targetDealSize;
    }

    public function setTargetdealsize(?string $targetDealSize): self
    {
        $this->targetDealSize = $targetDealSize;
        return $this;
    }

    public function getColor(): string    {
        return $this->color;
    }

    public function setColor(string $color): self
    {
        $this->color = $color;
        return $this;
    }

    public function getIcon(): string    {
        return $this->icon;
    }

    public function setIcon(string $icon): self
    {
        $this->icon = $icon;
        return $this;
    }

    public function getUsagecount(): int    {
        return $this->usageCount;
    }

    public function setUsagecount(int $usageCount): self
    {
        $this->usageCount = $usageCount;
        return $this;
    }

    public function getStages(): ?string    {
        return $this->stages;
    }

    public function setStages(?string $stages): self
    {
        $this->stages = $stages;
        return $this;
    }

    public function getTags(): ?array    {
        return $this->tags;
    }

    public function setTags(?array $tags): self
    {
        $this->tags = $tags;
        return $this;
    }

    public function getActive(): ?bool    {
        return $this->active;
    }

    public function setActive(?bool $active): self
    {
        $this->active = $active;
        return $this;
    }
}
