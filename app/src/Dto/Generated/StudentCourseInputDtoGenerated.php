<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use App\Dto\OrganizationInputDto;
use App\Dto\UserInputDto;
use App\Dto\CourseInputDto;
use App\Dto\CourseLectureInputDto;

/**
 * StudentCourse Input DTO (Generated Base Class)
 *
 * Student course enrollments and participation *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to StudentCourseInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class StudentCourseInputDtoGenerated
{
    /**
     * organization reference
     * Can be: IRI string (e.g., "/api/organizations/uuid") or nested OrganizationInput object
     */
    #[Assert\NotNull]
    public string|OrganizationInputDto $organization;

    public \DateTimeImmutable $enrolledAt;

    public ?\DateTimeImmutable $startDate = null;

    public ?\DateTimeImmutable $lastDate = null;

    public float $progressSeconds = 0;

    #[Assert\Range(max: 100, min: 0)]
    public string $progressPercentage = '0';

    public ?\DateTimeImmutable $completedAt = null;

    /**
     * student reference
     * Can be: IRI string (e.g., "/api/users/uuid") or nested UserInput object
     */
    #[Assert\NotNull]
    public string|UserInputDto $student;

    /**
     * course reference
     * Can be: IRI string (e.g., "/api/courses/uuid") or nested CourseInput object
     */
    #[Assert\NotNull]
    public string|CourseInputDto $course;

    /**
     * currentLecture reference
     * Can be: IRI string (e.g., "/api/courselectures/uuid") or nested CourseLectureInput object
     */
    public string|CourseLectureInputDto|null $currentLecture = null;

    public bool $active = true;


    // Getters and Setters

    public function getOrganization(): string|OrganizationInputDto    {
        return $this->organization;
    }

    public function setOrganization(string|OrganizationInputDto $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getEnrolledat(): \DateTimeImmutable    {
        return $this->enrolledAt;
    }

    public function setEnrolledat(\DateTimeImmutable $enrolledAt): self
    {
        $this->enrolledAt = $enrolledAt;
        return $this;
    }

    public function getStartdate(): ?\DateTimeImmutable    {
        return $this->startDate;
    }

    public function setStartdate(?\DateTimeImmutable $startDate): self
    {
        $this->startDate = $startDate;
        return $this;
    }

    public function getLastdate(): ?\DateTimeImmutable    {
        return $this->lastDate;
    }

    public function setLastdate(?\DateTimeImmutable $lastDate): self
    {
        $this->lastDate = $lastDate;
        return $this;
    }

    public function getProgressseconds(): float    {
        return $this->progressSeconds;
    }

    public function setProgressseconds(float $progressSeconds): self
    {
        $this->progressSeconds = $progressSeconds;
        return $this;
    }

    public function getProgresspercentage(): string    {
        return $this->progressPercentage;
    }

    public function setProgresspercentage(string $progressPercentage): self
    {
        $this->progressPercentage = $progressPercentage;
        return $this;
    }

    public function getCompletedat(): ?\DateTimeImmutable    {
        return $this->completedAt;
    }

    public function setCompletedat(?\DateTimeImmutable $completedAt): self
    {
        $this->completedAt = $completedAt;
        return $this;
    }

    public function getStudent(): string|UserInputDto    {
        return $this->student;
    }

    public function setStudent(string|UserInputDto $student): self
    {
        $this->student = $student;
        return $this;
    }

    public function getCourse(): string|CourseInputDto    {
        return $this->course;
    }

    public function setCourse(string|CourseInputDto $course): self
    {
        $this->course = $course;
        return $this;
    }

    public function getCurrentlecture(): string|CourseLectureInputDto|null    {
        return $this->currentLecture;
    }

    public function setCurrentlecture(string|CourseLectureInputDto|null $currentLecture): self
    {
        $this->currentLecture = $currentLecture;
        return $this;
    }

    public function getStudentlectures(): ?string    {
        return $this->studentLectures;
    }

    public function setStudentlectures(?string $studentLectures): self
    {
        $this->studentLectures = $studentLectures;
        return $this;
    }

    public function getActive(): bool    {
        return $this->active;
    }

    public function setActive(bool $active): self
    {
        $this->active = $active;
        return $this;
    }
}
