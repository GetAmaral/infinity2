<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use Symfony\Component\Serializer\Annotation\Groups;
use App\Dto\CityInputDto;
use App\Dto\CountryInputDto;

/**
 * HolidayTemplate Input DTO (Generated Base Class)
 *
 * Templates for holidays (National, Regional, Company, etc.) *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to HolidayTemplateInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class HolidayTemplateInputDtoGenerated
{
    #[Groups(['holidaytemplate:write'])]
    public string $name;

    #[Groups(['holidaytemplate:write'])]
    public ?bool $blocksScheduling = null;

    /**
     * city reference
     * Must be: IRI string (e.g., "/api/ties/uuid")
     */
    #[Groups(['holidaytemplate:write'])]
    public ?string $city = null;

    /**
     * country reference
     * Must be: IRI string (e.g., "/api/ries/uuid")
     */
    #[Groups(['holidaytemplate:write'])]
    public ?string $country = null;

    #[Groups(['holidaytemplate:write'])]
    public ?int $recurrenceFrequency = null;

    #[Groups(['holidaytemplate:write'])]
    public ?int $recurrenceInterval = null;

    #[Groups(['holidaytemplate:write'])]
    public ?\DateTimeImmutable $sentAt = null;


    // Getters and Setters

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getBlocksScheduling(): ?bool    {
        return $this->blocksScheduling;
    }

    public function setBlocksScheduling(?bool $blocksScheduling): self
    {
        $this->blocksScheduling = $blocksScheduling;
        return $this;
    }

    public function getCity(): ?string    {
        return $this->city;
    }

    public function setCity(?string $city): self
    {
        $this->city = $city;
        return $this;
    }

    public function getCountry(): ?string    {
        return $this->country;
    }

    public function setCountry(?string $country): self
    {
        $this->country = $country;
        return $this;
    }

    public function getRecurrenceFrequency(): ?int    {
        return $this->recurrenceFrequency;
    }

    public function setRecurrenceFrequency(?int $recurrenceFrequency): self
    {
        $this->recurrenceFrequency = $recurrenceFrequency;
        return $this;
    }

    public function getRecurrenceInterval(): ?int    {
        return $this->recurrenceInterval;
    }

    public function setRecurrenceInterval(?int $recurrenceInterval): self
    {
        $this->recurrenceInterval = $recurrenceInterval;
        return $this;
    }

    public function getSentAt(): ?\DateTimeImmutable    {
        return $this->sentAt;
    }

    public function setSentAt(?\DateTimeImmutable $sentAt): self
    {
        $this->sentAt = $sentAt;
        return $this;
    }
}
