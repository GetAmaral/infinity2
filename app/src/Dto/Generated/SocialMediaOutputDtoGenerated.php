<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Uid\Uuid;
use App\Dto\OrganizationOutputDto;
use App\Dto\CampaignOutputDto;
use App\Dto\CompanyOutputDto;
use App\Dto\ContactOutputDto;
use App\Dto\SocialMediaTypeOutputDto;
use App\Dto\UserOutputDto;

/**
 * SocialMedia Output DTO (Generated Base Class)
 *
 * Social media accounts linked to contacts and companies *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom computed properties to SocialMediaOutputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class SocialMediaOutputDtoGenerated
{
    public ?Uuid $id = null;

    /**
     * organization reference
     * Can be: IRI string or nested OrganizationOutput object
     */
    public string|OrganizationOutputDto $organization;

    public string $name;

    public ?string $apiKey = null;

    /**
     * campaigns collection
     * @var CampaignOutputDto[]
     */
    public array $campaigns = [];

    /**
     * company reference
     * Can be: IRI string or nested CompanyOutput object
     */
    public string|CompanyOutputDto|null $company = null;

    /**
     * contact reference
     * Can be: IRI string or nested ContactOutput object
     */
    public string|ContactOutputDto|null $contact = null;

    /**
     * socialMediaType reference
     * Can be: IRI string or nested SocialMediaTypeOutput object
     */
    public string|SocialMediaTypeOutputDto|null $socialMediaType = null;

    public ?string $url = null;

    /**
     * user reference
     * Can be: IRI string or nested UserOutput object
     */
    public string|UserOutputDto|null $user = null;

    public ?\DateTimeImmutable $createdAt = null;

    public ?\DateTimeImmutable $updatedAt = null;

    // Getters and Setters
    public function getId(): ?Uuid
    {
        return $this->id;
    }

    public function setId(?Uuid $id): self
    {
        $this->id = $id;
        return $this;
    }


    public function getOrganization(): string|OrganizationOutputDto    {
        return $this->organization;
    }

    public function setOrganization(string|OrganizationOutputDto $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getApiKey(): ?string    {
        return $this->apiKey;
    }

    public function setApiKey(?string $apiKey): self
    {
        $this->apiKey = $apiKey;
        return $this;
    }

    public function getCampaigns(): array    {
        return $this->campaigns;
    }

    public function setCampaigns(array $campaigns): self
    {
        $this->campaigns = $campaigns;
        return $this;
    }

    public function getCompany(): string|CompanyOutputDto|null    {
        return $this->company;
    }

    public function setCompany(string|CompanyOutputDto|null $company): self
    {
        $this->company = $company;
        return $this;
    }

    public function getContact(): string|ContactOutputDto|null    {
        return $this->contact;
    }

    public function setContact(string|ContactOutputDto|null $contact): self
    {
        $this->contact = $contact;
        return $this;
    }

    public function getSocialMediaType(): string|SocialMediaTypeOutputDto|null    {
        return $this->socialMediaType;
    }

    public function setSocialMediaType(string|SocialMediaTypeOutputDto|null $socialMediaType): self
    {
        $this->socialMediaType = $socialMediaType;
        return $this;
    }

    public function getUrl(): ?string    {
        return $this->url;
    }

    public function setUrl(?string $url): self
    {
        $this->url = $url;
        return $this;
    }

    public function getUser(): string|UserOutputDto|null    {
        return $this->user;
    }

    public function setUser(string|UserOutputDto|null $user): self
    {
        $this->user = $user;
        return $this;
    }

    public function getCreatedAt(): ?\DateTimeImmutable
    {
        return $this->createdAt;
    }

    public function setCreatedAt(?\DateTimeImmutable $createdAt): self
    {
        $this->createdAt = $createdAt;
        return $this;
    }

    public function getUpdatedAt(): ?\DateTimeImmutable
    {
        return $this->updatedAt;
    }

    public function setUpdatedAt(?\DateTimeImmutable $updatedAt): self
    {
        $this->updatedAt = $updatedAt;
        return $this;
    }
}
