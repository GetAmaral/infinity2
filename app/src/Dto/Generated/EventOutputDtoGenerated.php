<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Uid\Uuid;
use App\Dto\OrganizationOutputDto;
use App\Dto\CalendarOutputDto;
use App\Dto\UserOutputDto;
use App\Dto\EventAttendeeOutputDto;
use App\Dto\EventCategoryOutputDto;
use App\Dto\AttachmentOutputDto;
use App\Dto\ReminderOutputDto;
use App\Dto\EventResourceBookingOutputDto;
use App\Dto\EventOutputDto;
use App\Dto\WorkingHourOutputDto;
use App\Dto\NotificationOutputDto;
use App\Dto\MeetingDataOutputDto;
use App\Dto\HolidayOutputDto;
use App\Dto\ContactOutputDto;
use App\Dto\CompanyOutputDto;
use App\Dto\DealOutputDto;

/**
 * Event Output DTO (Generated Base Class)
 *
 * Calendar events, meetings, and appointments *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom computed properties to EventOutputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class EventOutputDtoGenerated
{
    public ?Uuid $id = null;

    /**
     * organization reference
     * Can be: IRI string or nested OrganizationOutput object
     */
    public string|OrganizationOutputDto $organization;

    public string $name;

    public \DateTimeImmutable $startTime;

    public ?string $description = null;

    public \DateTimeImmutable $endTime;

    public bool $allDay;

    public ?string $location = null;

    public ?string $meetingUrl = null;

    /**
     * calendar reference
     * Can be: IRI string or nested CalendarOutput object
     */
    public string|CalendarOutputDto|null $calendar = null;

    /**
     * organizer reference
     * Can be: IRI string or nested UserOutput object
     */
    public string|UserOutputDto|null $organizer = null;

    /**
     * attendees collection
     * @var EventAttendeeOutputDto[]
     */
    public array $attendees = [];

    /**
     * categories collection
     * @var EventCategoryOutputDto[]
     */
    public array $categories = [];

    /**
     * attachments collection
     * @var AttachmentOutputDto[]
     */
    public array $attachments = [];

    /**
     * reminders collection
     * @var ReminderOutputDto[]
     */
    public array $reminders = [];

    /**
     * resourceBookings collection
     * @var EventResourceBookingOutputDto[]
     */
    public array $resourceBookings = [];

    /**
     * parentEvent reference
     * Can be: IRI string or nested EventOutput object
     */
    public string|EventOutputDto|null $parentEvent = null;

    /**
     * childrenEvents collection
     * @var EventOutputDto[]
     */
    public array $childrenEvents = [];

    public ?\DateTimeImmutable $originalStartTime = null;

    public ?int $sequence = null;

    public ?array $conferenceData = null;

    public ?array $extendedProperties = null;

    public ?array $source = null;

    /**
     * workingHours collection
     * @var WorkingHourOutputDto[]
     */
    public array $workingHours = [];

    public ?string $subject = null;

    /**
     * notifications collection
     * @var NotificationOutputDto[]
     */
    public array $notifications = [];

    /**
     * meetingDatas collection
     * @var MeetingDataOutputDto[]
     */
    public array $meetingDatas = [];

    /**
     * holidays collection
     * @var HolidayOutputDto[]
     */
    public array $holidays = [];

    public string $status;

    public string $showAs;

    public ?string $eventType = null;

    public string $importance;

    public string $sensitivity;

    public ?string $timezone = null;

    public ?string $startTimezone = null;

    public ?string $endTimezone = null;

    public ?int $duration = null;

    public ?string $locationDisplayName = null;

    public ?string $locationUrl = null;

    public ?array $locationCoordinates = null;

    public bool $onlineMeeting;

    public ?string $onlineMeetingProvider = null;

    public ?string $meetingId = null;

    public ?string $meetingPassword = null;

    public bool $recurring;

    public ?string $recurrenceRule = null;

    public ?array $recurrenceExceptions = null;

    public bool $cancelled;

    public bool $draft;

    public ?string $responseStatus = null;

    public bool $responseRequested;

    public bool $allowNewTimeProposals;

    public bool $hideAttendees;

    public bool $guestsCanModify;

    public bool $guestsCanInviteOthers;

    public bool $guestsCanSeeOtherGuests;

    public string $transparency;

    public ?int $reminderMinutes = null;

    public ?string $externalCalendarId = null;

    public ?string $externalCalendarProvider = null;

    public ?string $icalUid = null;

    public ?string $webLink = null;

    public ?string $htmlLink = null;

    public ?string $colorId = null;

    public bool $locked;

    /**
     * assignedTo reference
     * Can be: IRI string or nested UserOutput object
     */
    public string|UserOutputDto|null $assignedTo = null;

    /**
     * contact reference
     * Can be: IRI string or nested ContactOutput object
     */
    public string|ContactOutputDto|null $contact = null;

    /**
     * company reference
     * Can be: IRI string or nested CompanyOutput object
     */
    public string|CompanyOutputDto|null $company = null;

    /**
     * deal reference
     * Can be: IRI string or nested DealOutput object
     */
    public string|DealOutputDto|null $deal = null;

    public ?\DateTimeImmutable $createdAt = null;

    public ?\DateTimeImmutable $updatedAt = null;

    // Getters and Setters
    public function getId(): ?Uuid
    {
        return $this->id;
    }

    public function setId(?Uuid $id): self
    {
        $this->id = $id;
        return $this;
    }


    public function getOrganization(): string|OrganizationOutputDto    {
        return $this->organization;
    }

    public function setOrganization(string|OrganizationOutputDto $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getStarttime(): \DateTimeImmutable    {
        return $this->startTime;
    }

    public function setStarttime(\DateTimeImmutable $startTime): self
    {
        $this->startTime = $startTime;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getEndtime(): \DateTimeImmutable    {
        return $this->endTime;
    }

    public function setEndtime(\DateTimeImmutable $endTime): self
    {
        $this->endTime = $endTime;
        return $this;
    }

    public function getAllday(): bool    {
        return $this->allDay;
    }

    public function setAllday(bool $allDay): self
    {
        $this->allDay = $allDay;
        return $this;
    }

    public function getLocation(): ?string    {
        return $this->location;
    }

    public function setLocation(?string $location): self
    {
        $this->location = $location;
        return $this;
    }

    public function getMeetingurl(): ?string    {
        return $this->meetingUrl;
    }

    public function setMeetingurl(?string $meetingUrl): self
    {
        $this->meetingUrl = $meetingUrl;
        return $this;
    }

    public function getCalendar(): string|CalendarOutputDto|null    {
        return $this->calendar;
    }

    public function setCalendar(string|CalendarOutputDto|null $calendar): self
    {
        $this->calendar = $calendar;
        return $this;
    }

    public function getOrganizer(): string|UserOutputDto|null    {
        return $this->organizer;
    }

    public function setOrganizer(string|UserOutputDto|null $organizer): self
    {
        $this->organizer = $organizer;
        return $this;
    }

    public function getAttendees(): array    {
        return $this->attendees;
    }

    public function setAttendees(array $attendees): self
    {
        $this->attendees = $attendees;
        return $this;
    }

    public function getCategories(): array    {
        return $this->categories;
    }

    public function setCategories(array $categories): self
    {
        $this->categories = $categories;
        return $this;
    }

    public function getAttachments(): array    {
        return $this->attachments;
    }

    public function setAttachments(array $attachments): self
    {
        $this->attachments = $attachments;
        return $this;
    }

    public function getReminders(): array    {
        return $this->reminders;
    }

    public function setReminders(array $reminders): self
    {
        $this->reminders = $reminders;
        return $this;
    }

    public function getResourcebookings(): array    {
        return $this->resourceBookings;
    }

    public function setResourcebookings(array $resourceBookings): self
    {
        $this->resourceBookings = $resourceBookings;
        return $this;
    }

    public function getParentevent(): string|EventOutputDto|null    {
        return $this->parentEvent;
    }

    public function setParentevent(string|EventOutputDto|null $parentEvent): self
    {
        $this->parentEvent = $parentEvent;
        return $this;
    }

    public function getChildrenevents(): array    {
        return $this->childrenEvents;
    }

    public function setChildrenevents(array $childrenEvents): self
    {
        $this->childrenEvents = $childrenEvents;
        return $this;
    }

    public function getOriginalstarttime(): ?\DateTimeImmutable    {
        return $this->originalStartTime;
    }

    public function setOriginalstarttime(?\DateTimeImmutable $originalStartTime): self
    {
        $this->originalStartTime = $originalStartTime;
        return $this;
    }

    public function getSequence(): ?int    {
        return $this->sequence;
    }

    public function setSequence(?int $sequence): self
    {
        $this->sequence = $sequence;
        return $this;
    }

    public function getConferencedata(): ?array    {
        return $this->conferenceData;
    }

    public function setConferencedata(?array $conferenceData): self
    {
        $this->conferenceData = $conferenceData;
        return $this;
    }

    public function getExtendedproperties(): ?array    {
        return $this->extendedProperties;
    }

    public function setExtendedproperties(?array $extendedProperties): self
    {
        $this->extendedProperties = $extendedProperties;
        return $this;
    }

    public function getSource(): ?array    {
        return $this->source;
    }

    public function setSource(?array $source): self
    {
        $this->source = $source;
        return $this;
    }

    public function getWorkinghours(): array    {
        return $this->workingHours;
    }

    public function setWorkinghours(array $workingHours): self
    {
        $this->workingHours = $workingHours;
        return $this;
    }

    public function getSubject(): ?string    {
        return $this->subject;
    }

    public function setSubject(?string $subject): self
    {
        $this->subject = $subject;
        return $this;
    }

    public function getNotifications(): array    {
        return $this->notifications;
    }

    public function setNotifications(array $notifications): self
    {
        $this->notifications = $notifications;
        return $this;
    }

    public function getMeetingdatas(): array    {
        return $this->meetingDatas;
    }

    public function setMeetingdatas(array $meetingDatas): self
    {
        $this->meetingDatas = $meetingDatas;
        return $this;
    }

    public function getHolidays(): array    {
        return $this->holidays;
    }

    public function setHolidays(array $holidays): self
    {
        $this->holidays = $holidays;
        return $this;
    }

    public function getStatus(): string    {
        return $this->status;
    }

    public function setStatus(string $status): self
    {
        $this->status = $status;
        return $this;
    }

    public function getShowas(): string    {
        return $this->showAs;
    }

    public function setShowas(string $showAs): self
    {
        $this->showAs = $showAs;
        return $this;
    }

    public function getEventtype(): ?string    {
        return $this->eventType;
    }

    public function setEventtype(?string $eventType): self
    {
        $this->eventType = $eventType;
        return $this;
    }

    public function getImportance(): string    {
        return $this->importance;
    }

    public function setImportance(string $importance): self
    {
        $this->importance = $importance;
        return $this;
    }

    public function getSensitivity(): string    {
        return $this->sensitivity;
    }

    public function setSensitivity(string $sensitivity): self
    {
        $this->sensitivity = $sensitivity;
        return $this;
    }

    public function getTimezone(): ?string    {
        return $this->timezone;
    }

    public function setTimezone(?string $timezone): self
    {
        $this->timezone = $timezone;
        return $this;
    }

    public function getStarttimezone(): ?string    {
        return $this->startTimezone;
    }

    public function setStarttimezone(?string $startTimezone): self
    {
        $this->startTimezone = $startTimezone;
        return $this;
    }

    public function getEndtimezone(): ?string    {
        return $this->endTimezone;
    }

    public function setEndtimezone(?string $endTimezone): self
    {
        $this->endTimezone = $endTimezone;
        return $this;
    }

    public function getDuration(): ?int    {
        return $this->duration;
    }

    public function setDuration(?int $duration): self
    {
        $this->duration = $duration;
        return $this;
    }

    public function getLocationdisplayname(): ?string    {
        return $this->locationDisplayName;
    }

    public function setLocationdisplayname(?string $locationDisplayName): self
    {
        $this->locationDisplayName = $locationDisplayName;
        return $this;
    }

    public function getLocationurl(): ?string    {
        return $this->locationUrl;
    }

    public function setLocationurl(?string $locationUrl): self
    {
        $this->locationUrl = $locationUrl;
        return $this;
    }

    public function getLocationcoordinates(): ?array    {
        return $this->locationCoordinates;
    }

    public function setLocationcoordinates(?array $locationCoordinates): self
    {
        $this->locationCoordinates = $locationCoordinates;
        return $this;
    }

    public function getOnlinemeeting(): bool    {
        return $this->onlineMeeting;
    }

    public function setOnlinemeeting(bool $onlineMeeting): self
    {
        $this->onlineMeeting = $onlineMeeting;
        return $this;
    }

    public function getOnlinemeetingprovider(): ?string    {
        return $this->onlineMeetingProvider;
    }

    public function setOnlinemeetingprovider(?string $onlineMeetingProvider): self
    {
        $this->onlineMeetingProvider = $onlineMeetingProvider;
        return $this;
    }

    public function getMeetingid(): ?string    {
        return $this->meetingId;
    }

    public function setMeetingid(?string $meetingId): self
    {
        $this->meetingId = $meetingId;
        return $this;
    }

    public function getMeetingpassword(): ?string    {
        return $this->meetingPassword;
    }

    public function setMeetingpassword(?string $meetingPassword): self
    {
        $this->meetingPassword = $meetingPassword;
        return $this;
    }

    public function getRecurring(): bool    {
        return $this->recurring;
    }

    public function setRecurring(bool $recurring): self
    {
        $this->recurring = $recurring;
        return $this;
    }

    public function getRecurrencerule(): ?string    {
        return $this->recurrenceRule;
    }

    public function setRecurrencerule(?string $recurrenceRule): self
    {
        $this->recurrenceRule = $recurrenceRule;
        return $this;
    }

    public function getRecurrenceexceptions(): ?array    {
        return $this->recurrenceExceptions;
    }

    public function setRecurrenceexceptions(?array $recurrenceExceptions): self
    {
        $this->recurrenceExceptions = $recurrenceExceptions;
        return $this;
    }

    public function getCancelled(): bool    {
        return $this->cancelled;
    }

    public function setCancelled(bool $cancelled): self
    {
        $this->cancelled = $cancelled;
        return $this;
    }

    public function getDraft(): bool    {
        return $this->draft;
    }

    public function setDraft(bool $draft): self
    {
        $this->draft = $draft;
        return $this;
    }

    public function getResponsestatus(): ?string    {
        return $this->responseStatus;
    }

    public function setResponsestatus(?string $responseStatus): self
    {
        $this->responseStatus = $responseStatus;
        return $this;
    }

    public function getResponserequested(): bool    {
        return $this->responseRequested;
    }

    public function setResponserequested(bool $responseRequested): self
    {
        $this->responseRequested = $responseRequested;
        return $this;
    }

    public function getAllownewtimeproposals(): bool    {
        return $this->allowNewTimeProposals;
    }

    public function setAllownewtimeproposals(bool $allowNewTimeProposals): self
    {
        $this->allowNewTimeProposals = $allowNewTimeProposals;
        return $this;
    }

    public function getHideattendees(): bool    {
        return $this->hideAttendees;
    }

    public function setHideattendees(bool $hideAttendees): self
    {
        $this->hideAttendees = $hideAttendees;
        return $this;
    }

    public function getGuestscanmodify(): bool    {
        return $this->guestsCanModify;
    }

    public function setGuestscanmodify(bool $guestsCanModify): self
    {
        $this->guestsCanModify = $guestsCanModify;
        return $this;
    }

    public function getGuestscaninviteothers(): bool    {
        return $this->guestsCanInviteOthers;
    }

    public function setGuestscaninviteothers(bool $guestsCanInviteOthers): self
    {
        $this->guestsCanInviteOthers = $guestsCanInviteOthers;
        return $this;
    }

    public function getGuestscanseeotherguests(): bool    {
        return $this->guestsCanSeeOtherGuests;
    }

    public function setGuestscanseeotherguests(bool $guestsCanSeeOtherGuests): self
    {
        $this->guestsCanSeeOtherGuests = $guestsCanSeeOtherGuests;
        return $this;
    }

    public function getTransparency(): string    {
        return $this->transparency;
    }

    public function setTransparency(string $transparency): self
    {
        $this->transparency = $transparency;
        return $this;
    }

    public function getReminderminutes(): ?int    {
        return $this->reminderMinutes;
    }

    public function setReminderminutes(?int $reminderMinutes): self
    {
        $this->reminderMinutes = $reminderMinutes;
        return $this;
    }

    public function getExternalcalendarid(): ?string    {
        return $this->externalCalendarId;
    }

    public function setExternalcalendarid(?string $externalCalendarId): self
    {
        $this->externalCalendarId = $externalCalendarId;
        return $this;
    }

    public function getExternalcalendarprovider(): ?string    {
        return $this->externalCalendarProvider;
    }

    public function setExternalcalendarprovider(?string $externalCalendarProvider): self
    {
        $this->externalCalendarProvider = $externalCalendarProvider;
        return $this;
    }

    public function getIcaluid(): ?string    {
        return $this->icalUid;
    }

    public function setIcaluid(?string $icalUid): self
    {
        $this->icalUid = $icalUid;
        return $this;
    }

    public function getWeblink(): ?string    {
        return $this->webLink;
    }

    public function setWeblink(?string $webLink): self
    {
        $this->webLink = $webLink;
        return $this;
    }

    public function getHtmllink(): ?string    {
        return $this->htmlLink;
    }

    public function setHtmllink(?string $htmlLink): self
    {
        $this->htmlLink = $htmlLink;
        return $this;
    }

    public function getColorid(): ?string    {
        return $this->colorId;
    }

    public function setColorid(?string $colorId): self
    {
        $this->colorId = $colorId;
        return $this;
    }

    public function getLocked(): bool    {
        return $this->locked;
    }

    public function setLocked(bool $locked): self
    {
        $this->locked = $locked;
        return $this;
    }

    public function getAssignedto(): string|UserOutputDto|null    {
        return $this->assignedTo;
    }

    public function setAssignedto(string|UserOutputDto|null $assignedTo): self
    {
        $this->assignedTo = $assignedTo;
        return $this;
    }

    public function getContact(): string|ContactOutputDto|null    {
        return $this->contact;
    }

    public function setContact(string|ContactOutputDto|null $contact): self
    {
        $this->contact = $contact;
        return $this;
    }

    public function getCompany(): string|CompanyOutputDto|null    {
        return $this->company;
    }

    public function setCompany(string|CompanyOutputDto|null $company): self
    {
        $this->company = $company;
        return $this;
    }

    public function getDeal(): string|DealOutputDto|null    {
        return $this->deal;
    }

    public function setDeal(string|DealOutputDto|null $deal): self
    {
        $this->deal = $deal;
        return $this;
    }

    public function getCreatedAt(): ?\DateTimeImmutable
    {
        return $this->createdAt;
    }

    public function setCreatedAt(?\DateTimeImmutable $createdAt): self
    {
        $this->createdAt = $createdAt;
        return $this;
    }

    public function getUpdatedAt(): ?\DateTimeImmutable
    {
        return $this->updatedAt;
    }

    public function setUpdatedAt(?\DateTimeImmutable $updatedAt): self
    {
        $this->updatedAt = $updatedAt;
        return $this;
    }
}
