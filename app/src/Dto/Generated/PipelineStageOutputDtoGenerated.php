<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Uid\Uuid;
use App\Dto\OrganizationOutputDto;
use App\Dto\DealStageOutputDto;
use App\Dto\DealOutputDto;
use App\Dto\PipelineStageOutputDto;
use App\Dto\PipelineOutputDto;
use App\Dto\TaskOutputDto;

/**
 * PipelineStage Output DTO (Generated Base Class)
 *
 * Pipeline stage configurations *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom computed properties to PipelineStageOutputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class PipelineStageOutputDtoGenerated
{
    public ?Uuid $id = null;

    /**
     * organization reference
     * Can be: IRI string or nested OrganizationOutput object
     */
    public string|OrganizationOutputDto $organization;

    public ?string $description = null;

    /**
     * dealStages collection
     * @var DealStageOutputDto[]
     */
    public array $dealStages = [];

    public int $probability;

    public bool $final;

    public bool $won;

    public bool $active;

    public bool $lost;

    public string $color;

    /**
     * deals collection
     * @var DealOutputDto[]
     */
    public array $deals = [];

    public ?int $displayOrder = null;

    public ?string $migrationCriteria = null;

    /**
     * next reference
     * Can be: IRI string or nested PipelineStageOutput object
     */
    public string|PipelineStageOutputDto|null $next = null;

    /**
     * pipeline reference
     * Can be: IRI string or nested PipelineOutput object
     */
    public string|PipelineOutputDto|null $pipeline = null;

    /**
     * previous reference
     * Can be: IRI string or nested PipelineStageOutput object
     */
    public string|PipelineStageOutputDto|null $previous = null;

    public string $stageName;

    /**
     * tasks collection
     * @var TaskOutputDto[]
     */
    public array $tasks = [];

    public ?\DateTimeImmutable $createdAt = null;

    public ?\DateTimeImmutable $updatedAt = null;

    // Getters and Setters
    public function getId(): ?Uuid
    {
        return $this->id;
    }

    public function setId(?Uuid $id): self
    {
        $this->id = $id;
        return $this;
    }


    public function getOrganization(): string|OrganizationOutputDto    {
        return $this->organization;
    }

    public function setOrganization(string|OrganizationOutputDto $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getDealstages(): array    {
        return $this->dealStages;
    }

    public function setDealstages(array $dealStages): self
    {
        $this->dealStages = $dealStages;
        return $this;
    }

    public function getProbability(): int    {
        return $this->probability;
    }

    public function setProbability(int $probability): self
    {
        $this->probability = $probability;
        return $this;
    }

    public function getFinal(): bool    {
        return $this->final;
    }

    public function setFinal(bool $final): self
    {
        $this->final = $final;
        return $this;
    }

    public function getWon(): bool    {
        return $this->won;
    }

    public function setWon(bool $won): self
    {
        $this->won = $won;
        return $this;
    }

    public function getActive(): bool    {
        return $this->active;
    }

    public function setActive(bool $active): self
    {
        $this->active = $active;
        return $this;
    }

    public function getLost(): bool    {
        return $this->lost;
    }

    public function setLost(bool $lost): self
    {
        $this->lost = $lost;
        return $this;
    }

    public function getColor(): string    {
        return $this->color;
    }

    public function setColor(string $color): self
    {
        $this->color = $color;
        return $this;
    }

    public function getDeals(): array    {
        return $this->deals;
    }

    public function setDeals(array $deals): self
    {
        $this->deals = $deals;
        return $this;
    }

    public function getDisplayorder(): ?int    {
        return $this->displayOrder;
    }

    public function setDisplayorder(?int $displayOrder): self
    {
        $this->displayOrder = $displayOrder;
        return $this;
    }

    public function getMigrationcriteria(): ?string    {
        return $this->migrationCriteria;
    }

    public function setMigrationcriteria(?string $migrationCriteria): self
    {
        $this->migrationCriteria = $migrationCriteria;
        return $this;
    }

    public function getNext(): string|PipelineStageOutputDto|null    {
        return $this->next;
    }

    public function setNext(string|PipelineStageOutputDto|null $next): self
    {
        $this->next = $next;
        return $this;
    }

    public function getPipeline(): string|PipelineOutputDto|null    {
        return $this->pipeline;
    }

    public function setPipeline(string|PipelineOutputDto|null $pipeline): self
    {
        $this->pipeline = $pipeline;
        return $this;
    }

    public function getPrevious(): string|PipelineStageOutputDto|null    {
        return $this->previous;
    }

    public function setPrevious(string|PipelineStageOutputDto|null $previous): self
    {
        $this->previous = $previous;
        return $this;
    }

    public function getStagename(): string    {
        return $this->stageName;
    }

    public function setStagename(string $stageName): self
    {
        $this->stageName = $stageName;
        return $this;
    }

    public function getTasks(): array    {
        return $this->tasks;
    }

    public function setTasks(array $tasks): self
    {
        $this->tasks = $tasks;
        return $this;
    }

    public function getCreatedAt(): ?\DateTimeImmutable
    {
        return $this->createdAt;
    }

    public function setCreatedAt(?\DateTimeImmutable $createdAt): self
    {
        $this->createdAt = $createdAt;
        return $this;
    }

    public function getUpdatedAt(): ?\DateTimeImmutable
    {
        return $this->updatedAt;
    }

    public function setUpdatedAt(?\DateTimeImmutable $updatedAt): self
    {
        $this->updatedAt = $updatedAt;
        return $this;
    }
}
