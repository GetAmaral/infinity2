<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Uid\Uuid;
use App\Dto\OrganizationOutputDto;
use App\Dto\PipelineTemplateOutputDto;
use App\Dto\TaskTemplateOutputDto;

/**
 * PipelineStageTemplate Output DTO (Generated Base Class)
 *
 * Templates for pipeline stages *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom computed properties to PipelineStageTemplateOutputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class PipelineStageTemplateOutputDtoGenerated
{
    public ?Uuid $id = null;

    /**
     * organization reference
     * Can be: IRI string or nested OrganizationOutput object
     */
    public string|OrganizationOutputDto $organization;

    public string $name;

    public ?string $description = null;

    public string $probability;

    public int $order;

    public bool $active;

    public ?string $color = null;

    public ?int $rottingDays = null;

    /**
     * pipelineTemplate reference
     * Can be: IRI string or nested PipelineTemplateOutput object
     */
    public string|PipelineTemplateOutputDto $pipelineTemplate;

    /**
     * tasks collection
     * @var TaskTemplateOutputDto[]
     */
    public array $tasks = [];

    public bool $final;

    public string $stageType;

    public ?array $automationRules = null;

    public ?array $requiredFields = null;

    public ?string $icon = null;

    public ?\DateTimeImmutable $createdAt = null;

    public ?\DateTimeImmutable $updatedAt = null;

    // Getters and Setters
    public function getId(): ?Uuid
    {
        return $this->id;
    }

    public function setId(?Uuid $id): self
    {
        $this->id = $id;
        return $this;
    }


    public function getOrganization(): string|OrganizationOutputDto    {
        return $this->organization;
    }

    public function setOrganization(string|OrganizationOutputDto $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getProbability(): string    {
        return $this->probability;
    }

    public function setProbability(string $probability): self
    {
        $this->probability = $probability;
        return $this;
    }

    public function getOrder(): int    {
        return $this->order;
    }

    public function setOrder(int $order): self
    {
        $this->order = $order;
        return $this;
    }

    public function getActive(): bool    {
        return $this->active;
    }

    public function setActive(bool $active): self
    {
        $this->active = $active;
        return $this;
    }

    public function getColor(): ?string    {
        return $this->color;
    }

    public function setColor(?string $color): self
    {
        $this->color = $color;
        return $this;
    }

    public function getRottingdays(): ?int    {
        return $this->rottingDays;
    }

    public function setRottingdays(?int $rottingDays): self
    {
        $this->rottingDays = $rottingDays;
        return $this;
    }

    public function getPipelinetemplate(): string|PipelineTemplateOutputDto    {
        return $this->pipelineTemplate;
    }

    public function setPipelinetemplate(string|PipelineTemplateOutputDto $pipelineTemplate): self
    {
        $this->pipelineTemplate = $pipelineTemplate;
        return $this;
    }

    public function getTasks(): array    {
        return $this->tasks;
    }

    public function setTasks(array $tasks): self
    {
        $this->tasks = $tasks;
        return $this;
    }

    public function getFinal(): bool    {
        return $this->final;
    }

    public function setFinal(bool $final): self
    {
        $this->final = $final;
        return $this;
    }

    public function getStagetype(): string    {
        return $this->stageType;
    }

    public function setStagetype(string $stageType): self
    {
        $this->stageType = $stageType;
        return $this;
    }

    public function getAutomationrules(): ?array    {
        return $this->automationRules;
    }

    public function setAutomationrules(?array $automationRules): self
    {
        $this->automationRules = $automationRules;
        return $this;
    }

    public function getRequiredfields(): ?array    {
        return $this->requiredFields;
    }

    public function setRequiredfields(?array $requiredFields): self
    {
        $this->requiredFields = $requiredFields;
        return $this;
    }

    public function getIcon(): ?string    {
        return $this->icon;
    }

    public function setIcon(?string $icon): self
    {
        $this->icon = $icon;
        return $this;
    }

    public function getCreatedAt(): ?\DateTimeImmutable
    {
        return $this->createdAt;
    }

    public function setCreatedAt(?\DateTimeImmutable $createdAt): self
    {
        $this->createdAt = $createdAt;
        return $this;
    }

    public function getUpdatedAt(): ?\DateTimeImmutable
    {
        return $this->updatedAt;
    }

    public function setUpdatedAt(?\DateTimeImmutable $updatedAt): self
    {
        $this->updatedAt = $updatedAt;
        return $this;
    }
}
