<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use App\Dto\OrganizationInputDto;
use App\Dto\UserInputDto;
use App\Dto\CalendarTypeInputDto;
use App\Dto\CalendarExternalLinkInputDto;

/**
 * Calendar Input DTO (Generated Base Class)
 *
 * Calendars for organizing events and meetings *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to CalendarInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class CalendarInputDtoGenerated
{
    /**
     * organization reference
     * Can be: IRI string (e.g., "/api/organizations/uuid") or nested OrganizationInput object
     */
    #[Assert\NotNull]
    public string|OrganizationInputDto $organization;

    #[Assert\Length(max: 255)]
    public string $name;

    public ?string $description = null;

    /**
     * user reference
     * Can be: IRI string (e.g., "/api/users/uuid") or nested UserInput object
     */
    public string|UserInputDto|null $user = null;

    public string $timeZone = 'UTC';

    #[Assert\Length(max: 7)]
    public ?string $color = '#0dcaf0';

    public ?bool $primary = false;

    public ?bool $visible = true;

    public ?string $accessRole = null;

    /**
     * calendarType reference
     * Can be: IRI string (e.g., "/api/calendartypes/uuid") or nested CalendarTypeInput object
     */
    public string|CalendarTypeInputDto|null $calendarType = null;

    /**
     * externalLink reference
     * Can be: IRI string (e.g., "/api/calendarexternallinks/uuid") or nested CalendarExternalLinkInput object
     */
    public string|CalendarExternalLinkInputDto|null $externalLink = null;

    public ?string $externalApiKey = null;

    public bool $default = false;

    public bool $active = true;

    public bool $public = false;

    #[Assert\Length(max: 100)]
    public ?string $icon = null;

    public ?int $sortOrder = null;

    #[Assert\Length(max: 255)]
    public ?string $externalId = null;

    public ?\DateTimeImmutable $lastSyncedAt = null;

    public ?array $permissions = null;

    public ?array $settings = null;


    // Getters and Setters

    public function getOrganization(): string|OrganizationInputDto    {
        return $this->organization;
    }

    public function setOrganization(string|OrganizationInputDto $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getUser(): string|UserInputDto|null    {
        return $this->user;
    }

    public function setUser(string|UserInputDto|null $user): self
    {
        $this->user = $user;
        return $this;
    }

    public function getTimezone(): string    {
        return $this->timeZone;
    }

    public function setTimezone(string $timeZone): self
    {
        $this->timeZone = $timeZone;
        return $this;
    }

    public function getColor(): ?string    {
        return $this->color;
    }

    public function setColor(?string $color): self
    {
        $this->color = $color;
        return $this;
    }

    public function getPrimary(): ?bool    {
        return $this->primary;
    }

    public function setPrimary(?bool $primary): self
    {
        $this->primary = $primary;
        return $this;
    }

    public function getVisible(): ?bool    {
        return $this->visible;
    }

    public function setVisible(?bool $visible): self
    {
        $this->visible = $visible;
        return $this;
    }

    public function getAccessrole(): ?string    {
        return $this->accessRole;
    }

    public function setAccessrole(?string $accessRole): self
    {
        $this->accessRole = $accessRole;
        return $this;
    }

    public function getCalendartype(): string|CalendarTypeInputDto|null    {
        return $this->calendarType;
    }

    public function setCalendartype(string|CalendarTypeInputDto|null $calendarType): self
    {
        $this->calendarType = $calendarType;
        return $this;
    }

    public function getEvents(): ?string    {
        return $this->events;
    }

    public function setEvents(?string $events): self
    {
        $this->events = $events;
        return $this;
    }

    public function getExternallink(): string|CalendarExternalLinkInputDto|null    {
        return $this->externalLink;
    }

    public function setExternallink(string|CalendarExternalLinkInputDto|null $externalLink): self
    {
        $this->externalLink = $externalLink;
        return $this;
    }

    public function getExternalapikey(): ?string    {
        return $this->externalApiKey;
    }

    public function setExternalapikey(?string $externalApiKey): self
    {
        $this->externalApiKey = $externalApiKey;
        return $this;
    }

    public function getWorkinghours(): ?string    {
        return $this->workingHours;
    }

    public function setWorkinghours(?string $workingHours): self
    {
        $this->workingHours = $workingHours;
        return $this;
    }

    public function getHolidays(): ?string    {
        return $this->holidays;
    }

    public function setHolidays(?string $holidays): self
    {
        $this->holidays = $holidays;
        return $this;
    }

    public function getDefault(): bool    {
        return $this->default;
    }

    public function setDefault(bool $default): self
    {
        $this->default = $default;
        return $this;
    }

    public function getActive(): bool    {
        return $this->active;
    }

    public function setActive(bool $active): self
    {
        $this->active = $active;
        return $this;
    }

    public function getPublic(): bool    {
        return $this->public;
    }

    public function setPublic(bool $public): self
    {
        $this->public = $public;
        return $this;
    }

    public function getIcon(): ?string    {
        return $this->icon;
    }

    public function setIcon(?string $icon): self
    {
        $this->icon = $icon;
        return $this;
    }

    public function getSortorder(): ?int    {
        return $this->sortOrder;
    }

    public function setSortorder(?int $sortOrder): self
    {
        $this->sortOrder = $sortOrder;
        return $this;
    }

    public function getExternalid(): ?string    {
        return $this->externalId;
    }

    public function setExternalid(?string $externalId): self
    {
        $this->externalId = $externalId;
        return $this;
    }

    public function getLastsyncedat(): ?\DateTimeImmutable    {
        return $this->lastSyncedAt;
    }

    public function setLastsyncedat(?\DateTimeImmutable $lastSyncedAt): self
    {
        $this->lastSyncedAt = $lastSyncedAt;
        return $this;
    }

    public function getPermissions(): ?array    {
        return $this->permissions;
    }

    public function setPermissions(?array $permissions): self
    {
        $this->permissions = $permissions;
        return $this;
    }

    public function getSettings(): ?array    {
        return $this->settings;
    }

    public function setSettings(?array $settings): self
    {
        $this->settings = $settings;
        return $this;
    }
}
