<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use Symfony\Component\Serializer\Annotation\Groups;
use App\Dto\OrganizationInputDto;

/**
 * DealType Input DTO (Generated Base Class)
 *
 * Deal types for categorizing opportunities *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to DealTypeInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class DealTypeInputDtoGenerated
{
    /**
     * organization reference
     * Must be: IRI string (e.g., "/api/organizatia/uuid")
     * Auto-assigned by system if not provided
     */
    #[Groups(['dealtype:write'])]
    public ?string $organization = null;

    #[Groups(['dealtype:write'])]
    public string $name;

    #[Groups(['dealtype:write'])]
    public ?string $description = null;

    #[Groups(['dealtype:write'])]
    public ?string $category = null;

    #[Groups(['dealtype:write'])]
    public string $color = '#0dcaf0';

    #[Groups(['dealtype:write'])]
    public string $icon = 'bi-briefcase';

    #[Groups(['dealtype:write'])]
    public bool $default = false;

    #[Groups(['dealtype:write'])]
    public int $sortOrder = 0;

    #[Groups(['dealtype:write'])]
    public bool $active = true;

    #[Groups(['dealtype:write'])]
    public ?int $expectedDuration = null;

    #[Groups(['dealtype:write'])]
    public ?string $winProbability = null;


    // Getters and Setters

    public function getOrganization(): ?string    {
        return $this->organization;
    }

    public function setOrganization(?string $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getCategory(): ?string    {
        return $this->category;
    }

    public function setCategory(?string $category): self
    {
        $this->category = $category;
        return $this;
    }

    public function getDeals(): ?string    {
        return $this->deals;
    }

    public function setDeals(?string $deals): self
    {
        $this->deals = $deals;
        return $this;
    }

    public function getColor(): string    {
        return $this->color;
    }

    public function setColor(string $color): self
    {
        $this->color = $color;
        return $this;
    }

    public function getIcon(): string    {
        return $this->icon;
    }

    public function setIcon(string $icon): self
    {
        $this->icon = $icon;
        return $this;
    }

    public function getDefault(): bool    {
        return $this->default;
    }

    public function setDefault(bool $default): self
    {
        $this->default = $default;
        return $this;
    }

    public function getSortOrder(): int    {
        return $this->sortOrder;
    }

    public function setSortOrder(int $sortOrder): self
    {
        $this->sortOrder = $sortOrder;
        return $this;
    }

    public function getActive(): bool    {
        return $this->active;
    }

    public function setActive(bool $active): self
    {
        $this->active = $active;
        return $this;
    }

    public function getExpectedDuration(): ?int    {
        return $this->expectedDuration;
    }

    public function setExpectedDuration(?int $expectedDuration): self
    {
        $this->expectedDuration = $expectedDuration;
        return $this;
    }

    public function getWinProbability(): ?string    {
        return $this->winProbability;
    }

    public function setWinProbability(?string $winProbability): self
    {
        $this->winProbability = $winProbability;
        return $this;
    }
}
