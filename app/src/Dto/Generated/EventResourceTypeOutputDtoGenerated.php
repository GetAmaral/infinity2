<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Uid\Uuid;
use App\Dto\OrganizationOutputDto;

/**
 * EventResourceType Output DTO (Generated Base Class)
 *
 * Types of event resources (Meeting Room, Equipment, Vehicle, etc.) *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom computed properties to EventResourceTypeOutputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class EventResourceTypeOutputDtoGenerated
{
    public ?Uuid $id = null;

    public string $name;

    public ?string $description = null;

    /**
     * organization reference
     * Can be: IRI string or nested OrganizationOutput object
     */
    public string|OrganizationOutputDto|null $organization = null;

    public ?\DateTimeImmutable $createdAt = null;

    public ?\DateTimeImmutable $updatedAt = null;

    // Getters and Setters
    public function getId(): ?Uuid
    {
        return $this->id;
    }

    public function setId(?Uuid $id): self
    {
        $this->id = $id;
        return $this;
    }


    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getOrganization(): string|OrganizationOutputDto|null    {
        return $this->organization;
    }

    public function setOrganization(string|OrganizationOutputDto|null $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getCreatedAt(): ?\DateTimeImmutable
    {
        return $this->createdAt;
    }

    public function setCreatedAt(?\DateTimeImmutable $createdAt): self
    {
        $this->createdAt = $createdAt;
        return $this;
    }

    public function getUpdatedAt(): ?\DateTimeImmutable
    {
        return $this->updatedAt;
    }

    public function setUpdatedAt(?\DateTimeImmutable $updatedAt): self
    {
        $this->updatedAt = $updatedAt;
        return $this;
    }
}
