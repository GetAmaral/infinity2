<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Uid\Uuid;
use App\Dto\OrganizationOutputDto;
use App\Dto\CompanyOutputDto;
use App\Dto\ContactOutputDto;
use App\Dto\DealOutputDto;
use App\Dto\UserOutputDto;
use App\Dto\CampaignOutputDto;
use App\Dto\SocialMediaOutputDto;
use App\Dto\TalkOutputDto;

/**
 * Campaign Output DTO (Generated Base Class)
 *
 * Marketing campaigns for lead generation and customer engagement *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom computed properties to CampaignOutputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class CampaignOutputDtoGenerated
{
    public ?Uuid $id = null;

    /**
     * organization reference
     * Can be: IRI string or nested OrganizationOutput object
     */
    public string|OrganizationOutputDto $organization;

    public string $name;

    public ?string $description = null;

    public ?string $actualBudget = null;

    public bool $active;

    public ?string $actualCost = null;

    public ?string $actualReturn = null;

    public ?string $actualRevenue = null;

    public bool $archived;

    public ?string $budgetedCost = null;

    public ?int $campaignStatus = null;

    public string $campaignType;

    public ?string $codeName = null;

    /**
     * companies collection
     * @var CompanyOutputDto[]
     */
    public array $companies = [];

    /**
     * contacts collection
     * @var ContactOutputDto[]
     */
    public array $contacts = [];

    /**
     * deals collection
     * @var DealOutputDto[]
     */
    public array $deals = [];

    public bool $draft;

    public ?int $duration = null;

    public ?string $emailAddress = null;

    public ?\DateTimeImmutable $endDate = null;

    public ?int $expectedResponse = null;

    public ?string $expectedRevenue = null;

    /**
     * manager reference
     * Can be: IRI string or nested UserOutput object
     */
    public string|UserOutputDto|null $manager = null;

    public ?string $message = null;

    /**
     * childCampaigns collection
     * @var CampaignOutputDto[]
     */
    public array $childCampaigns = [];

    public ?int $numberOfContacts = null;

    public ?int $numberOfConverted = null;

    public ?int $numberOfLeads = null;

    public ?int $numberOfResponses = null;

    public ?string $objective = null;

    public ?string $otherCost = null;

    /**
     * owner reference
     * Can be: IRI string or nested UserOutput object
     */
    public string|UserOutputDto $owner;

    /**
     * parentCampaign reference
     * Can be: IRI string or nested CampaignOutput object
     */
    public string|CampaignOutputDto|null $parentCampaign = null;

    public ?string $plannedBudget = null;

    public ?int $plannedDuration = null;

    public ?\DateTimeImmutable $plannedEndDate = null;

    public ?string $plannedReturn = null;

    public ?\DateTimeImmutable $plannedStartDate = null;

    public ?string $roi = null;

    /**
     * socialMedias collection
     * @var SocialMediaOutputDto[]
     */
    public array $socialMedias = [];

    public ?\DateTimeImmutable $startDate = null;

    public string $status;

    /**
     * talks collection
     * @var TalkOutputDto[]
     */
    public array $talks = [];

    public ?string $targetAudience = null;

    /**
     * team collection
     * @var UserOutputDto[]
     */
    public array $team = [];

    public bool $template;

    public ?\DateTimeImmutable $createdAt = null;

    public ?\DateTimeImmutable $updatedAt = null;

    // Getters and Setters
    public function getId(): ?Uuid
    {
        return $this->id;
    }

    public function setId(?Uuid $id): self
    {
        $this->id = $id;
        return $this;
    }


    public function getOrganization(): string|OrganizationOutputDto    {
        return $this->organization;
    }

    public function setOrganization(string|OrganizationOutputDto $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getActualBudget(): ?string    {
        return $this->actualBudget;
    }

    public function setActualBudget(?string $actualBudget): self
    {
        $this->actualBudget = $actualBudget;
        return $this;
    }

    public function getActive(): bool    {
        return $this->active;
    }

    public function setActive(bool $active): self
    {
        $this->active = $active;
        return $this;
    }

    public function getActualCost(): ?string    {
        return $this->actualCost;
    }

    public function setActualCost(?string $actualCost): self
    {
        $this->actualCost = $actualCost;
        return $this;
    }

    public function getActualReturn(): ?string    {
        return $this->actualReturn;
    }

    public function setActualReturn(?string $actualReturn): self
    {
        $this->actualReturn = $actualReturn;
        return $this;
    }

    public function getActualRevenue(): ?string    {
        return $this->actualRevenue;
    }

    public function setActualRevenue(?string $actualRevenue): self
    {
        $this->actualRevenue = $actualRevenue;
        return $this;
    }

    public function getArchived(): bool    {
        return $this->archived;
    }

    public function setArchived(bool $archived): self
    {
        $this->archived = $archived;
        return $this;
    }

    public function getBudgetedCost(): ?string    {
        return $this->budgetedCost;
    }

    public function setBudgetedCost(?string $budgetedCost): self
    {
        $this->budgetedCost = $budgetedCost;
        return $this;
    }

    public function getCampaignStatus(): ?int    {
        return $this->campaignStatus;
    }

    public function setCampaignStatus(?int $campaignStatus): self
    {
        $this->campaignStatus = $campaignStatus;
        return $this;
    }

    public function getCampaignType(): string    {
        return $this->campaignType;
    }

    public function setCampaignType(string $campaignType): self
    {
        $this->campaignType = $campaignType;
        return $this;
    }

    public function getCodeName(): ?string    {
        return $this->codeName;
    }

    public function setCodeName(?string $codeName): self
    {
        $this->codeName = $codeName;
        return $this;
    }

    public function getCompanies(): array    {
        return $this->companies;
    }

    public function setCompanies(array $companies): self
    {
        $this->companies = $companies;
        return $this;
    }

    public function getContacts(): array    {
        return $this->contacts;
    }

    public function setContacts(array $contacts): self
    {
        $this->contacts = $contacts;
        return $this;
    }

    public function getDeals(): array    {
        return $this->deals;
    }

    public function setDeals(array $deals): self
    {
        $this->deals = $deals;
        return $this;
    }

    public function getDraft(): bool    {
        return $this->draft;
    }

    public function setDraft(bool $draft): self
    {
        $this->draft = $draft;
        return $this;
    }

    public function getDuration(): ?int    {
        return $this->duration;
    }

    public function setDuration(?int $duration): self
    {
        $this->duration = $duration;
        return $this;
    }

    public function getEmailAddress(): ?string    {
        return $this->emailAddress;
    }

    public function setEmailAddress(?string $emailAddress): self
    {
        $this->emailAddress = $emailAddress;
        return $this;
    }

    public function getEndDate(): ?\DateTimeImmutable    {
        return $this->endDate;
    }

    public function setEndDate(?\DateTimeImmutable $endDate): self
    {
        $this->endDate = $endDate;
        return $this;
    }

    public function getExpectedResponse(): ?int    {
        return $this->expectedResponse;
    }

    public function setExpectedResponse(?int $expectedResponse): self
    {
        $this->expectedResponse = $expectedResponse;
        return $this;
    }

    public function getExpectedRevenue(): ?string    {
        return $this->expectedRevenue;
    }

    public function setExpectedRevenue(?string $expectedRevenue): self
    {
        $this->expectedRevenue = $expectedRevenue;
        return $this;
    }

    public function getManager(): string|UserOutputDto|null    {
        return $this->manager;
    }

    public function setManager(string|UserOutputDto|null $manager): self
    {
        $this->manager = $manager;
        return $this;
    }

    public function getMessage(): ?string    {
        return $this->message;
    }

    public function setMessage(?string $message): self
    {
        $this->message = $message;
        return $this;
    }

    public function getChildCampaigns(): array    {
        return $this->childCampaigns;
    }

    public function setChildCampaigns(array $childCampaigns): self
    {
        $this->childCampaigns = $childCampaigns;
        return $this;
    }

    public function getNumberOfContacts(): ?int    {
        return $this->numberOfContacts;
    }

    public function setNumberOfContacts(?int $numberOfContacts): self
    {
        $this->numberOfContacts = $numberOfContacts;
        return $this;
    }

    public function getNumberOfConverted(): ?int    {
        return $this->numberOfConverted;
    }

    public function setNumberOfConverted(?int $numberOfConverted): self
    {
        $this->numberOfConverted = $numberOfConverted;
        return $this;
    }

    public function getNumberOfLeads(): ?int    {
        return $this->numberOfLeads;
    }

    public function setNumberOfLeads(?int $numberOfLeads): self
    {
        $this->numberOfLeads = $numberOfLeads;
        return $this;
    }

    public function getNumberOfResponses(): ?int    {
        return $this->numberOfResponses;
    }

    public function setNumberOfResponses(?int $numberOfResponses): self
    {
        $this->numberOfResponses = $numberOfResponses;
        return $this;
    }

    public function getObjective(): ?string    {
        return $this->objective;
    }

    public function setObjective(?string $objective): self
    {
        $this->objective = $objective;
        return $this;
    }

    public function getOtherCost(): ?string    {
        return $this->otherCost;
    }

    public function setOtherCost(?string $otherCost): self
    {
        $this->otherCost = $otherCost;
        return $this;
    }

    public function getOwner(): string|UserOutputDto    {
        return $this->owner;
    }

    public function setOwner(string|UserOutputDto $owner): self
    {
        $this->owner = $owner;
        return $this;
    }

    public function getParentCampaign(): string|CampaignOutputDto|null    {
        return $this->parentCampaign;
    }

    public function setParentCampaign(string|CampaignOutputDto|null $parentCampaign): self
    {
        $this->parentCampaign = $parentCampaign;
        return $this;
    }

    public function getPlannedBudget(): ?string    {
        return $this->plannedBudget;
    }

    public function setPlannedBudget(?string $plannedBudget): self
    {
        $this->plannedBudget = $plannedBudget;
        return $this;
    }

    public function getPlannedDuration(): ?int    {
        return $this->plannedDuration;
    }

    public function setPlannedDuration(?int $plannedDuration): self
    {
        $this->plannedDuration = $plannedDuration;
        return $this;
    }

    public function getPlannedEndDate(): ?\DateTimeImmutable    {
        return $this->plannedEndDate;
    }

    public function setPlannedEndDate(?\DateTimeImmutable $plannedEndDate): self
    {
        $this->plannedEndDate = $plannedEndDate;
        return $this;
    }

    public function getPlannedReturn(): ?string    {
        return $this->plannedReturn;
    }

    public function setPlannedReturn(?string $plannedReturn): self
    {
        $this->plannedReturn = $plannedReturn;
        return $this;
    }

    public function getPlannedStartDate(): ?\DateTimeImmutable    {
        return $this->plannedStartDate;
    }

    public function setPlannedStartDate(?\DateTimeImmutable $plannedStartDate): self
    {
        $this->plannedStartDate = $plannedStartDate;
        return $this;
    }

    public function getRoi(): ?string    {
        return $this->roi;
    }

    public function setRoi(?string $roi): self
    {
        $this->roi = $roi;
        return $this;
    }

    public function getSocialMedias(): array    {
        return $this->socialMedias;
    }

    public function setSocialMedias(array $socialMedias): self
    {
        $this->socialMedias = $socialMedias;
        return $this;
    }

    public function getStartDate(): ?\DateTimeImmutable    {
        return $this->startDate;
    }

    public function setStartDate(?\DateTimeImmutable $startDate): self
    {
        $this->startDate = $startDate;
        return $this;
    }

    public function getStatus(): string    {
        return $this->status;
    }

    public function setStatus(string $status): self
    {
        $this->status = $status;
        return $this;
    }

    public function getTalks(): array    {
        return $this->talks;
    }

    public function setTalks(array $talks): self
    {
        $this->talks = $talks;
        return $this;
    }

    public function getTargetAudience(): ?string    {
        return $this->targetAudience;
    }

    public function setTargetAudience(?string $targetAudience): self
    {
        $this->targetAudience = $targetAudience;
        return $this;
    }

    public function getTeam(): array    {
        return $this->team;
    }

    public function setTeam(array $team): self
    {
        $this->team = $team;
        return $this;
    }

    public function getTemplate(): bool    {
        return $this->template;
    }

    public function setTemplate(bool $template): self
    {
        $this->template = $template;
        return $this;
    }

    public function getCreatedAt(): ?\DateTimeImmutable
    {
        return $this->createdAt;
    }

    public function setCreatedAt(?\DateTimeImmutable $createdAt): self
    {
        $this->createdAt = $createdAt;
        return $this;
    }

    public function getUpdatedAt(): ?\DateTimeImmutable
    {
        return $this->updatedAt;
    }

    public function setUpdatedAt(?\DateTimeImmutable $updatedAt): self
    {
        $this->updatedAt = $updatedAt;
        return $this;
    }
}
