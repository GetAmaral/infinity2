<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use App\Dto\OrganizationInputDto;
use App\Dto\CompanyInputDto;
use App\Dto\ContactInputDto;
use App\Dto\SocialMediaTypeInputDto;
use App\Dto\UserInputDto;

/**
 * SocialMedia Input DTO (Generated Base Class)
 *
 * Social media accounts linked to contacts and companies *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to SocialMediaInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class SocialMediaInputDtoGenerated
{
    /**
     * organization reference
     * Can be: IRI string (e.g., "/api/organizations/uuid") or nested OrganizationInput object
     */
    #[Assert\NotNull]
    public string|OrganizationInputDto $organization;

    public string $name;

    public ?string $apiKey = null;

    /**
     * company reference
     * Can be: IRI string (e.g., "/api/companys/uuid") or nested CompanyInput object
     */
    public string|CompanyInputDto|null $company = null;

    /**
     * contact reference
     * Can be: IRI string (e.g., "/api/contacts/uuid") or nested ContactInput object
     */
    public string|ContactInputDto|null $contact = null;

    /**
     * socialMediaType reference
     * Can be: IRI string (e.g., "/api/socialmediatypes/uuid") or nested SocialMediaTypeInput object
     */
    public string|SocialMediaTypeInputDto|null $socialMediaType = null;

    public ?string $url = null;

    /**
     * user reference
     * Can be: IRI string (e.g., "/api/users/uuid") or nested UserInput object
     */
    public string|UserInputDto|null $user = null;


    // Getters and Setters

    public function getOrganization(): string|OrganizationInputDto    {
        return $this->organization;
    }

    public function setOrganization(string|OrganizationInputDto $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getApikey(): ?string    {
        return $this->apiKey;
    }

    public function setApikey(?string $apiKey): self
    {
        $this->apiKey = $apiKey;
        return $this;
    }

    public function getCampaigns(): ?string    {
        return $this->campaigns;
    }

    public function setCampaigns(?string $campaigns): self
    {
        $this->campaigns = $campaigns;
        return $this;
    }

    public function getCompany(): string|CompanyInputDto|null    {
        return $this->company;
    }

    public function setCompany(string|CompanyInputDto|null $company): self
    {
        $this->company = $company;
        return $this;
    }

    public function getContact(): string|ContactInputDto|null    {
        return $this->contact;
    }

    public function setContact(string|ContactInputDto|null $contact): self
    {
        $this->contact = $contact;
        return $this;
    }

    public function getSocialmediatype(): string|SocialMediaTypeInputDto|null    {
        return $this->socialMediaType;
    }

    public function setSocialmediatype(string|SocialMediaTypeInputDto|null $socialMediaType): self
    {
        $this->socialMediaType = $socialMediaType;
        return $this;
    }

    public function getUrl(): ?string    {
        return $this->url;
    }

    public function setUrl(?string $url): self
    {
        $this->url = $url;
        return $this;
    }

    public function getUser(): string|UserInputDto|null    {
        return $this->user;
    }

    public function setUser(string|UserInputDto|null $user): self
    {
        $this->user = $user;
        return $this;
    }
}
