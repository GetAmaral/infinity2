<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use Symfony\Component\Serializer\Annotation\Groups;
use App\Dto\OrganizationInputDto;

/**
 * Profile Input DTO (Generated Base Class)
 *
 * User profiles with permissions and preferences *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to ProfileInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class ProfileInputDtoGenerated
{
    /**
     * organization reference
     * Must be: IRI string (e.g., "/api/organizations/uuid")
     * Auto-assigned by system if not provided
     */
    #[Groups(['profile:write'])]
    public ?string $organization = null;

    #[Groups(['profile:write'])]
    public string $name;

    #[Groups(['profile:write'])]
    public string $description;


    // Getters and Setters

    public function getOrganization(): ?string    {
        return $this->organization;
    }

    public function setOrganization(?string $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDescription(): string    {
        return $this->description;
    }

    public function setDescription(string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getGrantedroles(): ?string    {
        return $this->grantedRoles;
    }

    public function setGrantedroles(?string $grantedRoles): self
    {
        $this->grantedRoles = $grantedRoles;
        return $this;
    }

    public function getUsers(): ?string    {
        return $this->users;
    }

    public function setUsers(?string $users): self
    {
        $this->users = $users;
        return $this;
    }
}
