<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use Symfony\Component\Serializer\Annotation\Groups;
use App\Dto\OrganizationInputDto;
use App\Dto\EventInputDto;
use App\Dto\ProductInputDto;
use App\Dto\TalkMessageInputDto;

/**
 * Attachment Input DTO (Generated Base Class)
 *
 * File attachments for documents and media *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to AttachmentInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class AttachmentInputDtoGenerated
{
    /**
     * organization reference
     * Must be: IRI string (e.g., "/api/organizations/uuid")
     * Auto-assigned by system if not provided
     */
    #[Groups(['attachment:write'])]
    public ?string $organization = null;

    /**
     * event reference
     * Must be: IRI string (e.g., "/api/events/uuid")
     */
    #[Groups(['attachment:write'])]
    public ?string $event = null;

    #[Groups(['attachment:write'])]
    public ?int $fileSize = null;

    #[Groups(['attachment:write'])]
    public ?string $fileType = null;

    #[Groups(['attachment:write'])]
    public string $filename;

    /**
     * product reference
     * Must be: IRI string (e.g., "/api/products/uuid")
     */
    #[Groups(['attachment:write'])]
    public ?string $product = null;

    /**
     * talkMessage reference
     * Must be: IRI string (e.g., "/api/talkmessages/uuid")
     */
    #[Groups(['attachment:write'])]
    public ?string $talkMessage = null;

    #[Groups(['attachment:write'])]
    public ?string $url = null;


    // Getters and Setters

    public function getOrganization(): ?string    {
        return $this->organization;
    }

    public function setOrganization(?string $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getEvent(): ?string    {
        return $this->event;
    }

    public function setEvent(?string $event): self
    {
        $this->event = $event;
        return $this;
    }

    public function getFilesize(): ?int    {
        return $this->fileSize;
    }

    public function setFilesize(?int $fileSize): self
    {
        $this->fileSize = $fileSize;
        return $this;
    }

    public function getFiletype(): ?string    {
        return $this->fileType;
    }

    public function setFiletype(?string $fileType): self
    {
        $this->fileType = $fileType;
        return $this;
    }

    public function getFilename(): string    {
        return $this->filename;
    }

    public function setFilename(string $filename): self
    {
        $this->filename = $filename;
        return $this;
    }

    public function getProduct(): ?string    {
        return $this->product;
    }

    public function setProduct(?string $product): self
    {
        $this->product = $product;
        return $this;
    }

    public function getTalkmessage(): ?string    {
        return $this->talkMessage;
    }

    public function setTalkmessage(?string $talkMessage): self
    {
        $this->talkMessage = $talkMessage;
        return $this;
    }

    public function getUrl(): ?string    {
        return $this->url;
    }

    public function setUrl(?string $url): self
    {
        $this->url = $url;
        return $this;
    }
}
