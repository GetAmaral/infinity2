<?php

declare(strict_types=1);

namespace App\Dto\Generated;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use Symfony\Component\Serializer\Annotation\Groups;
use App\Dto\OrganizationInputDto;
use App\Dto\PipelineStageInputDto;
use App\Dto\PipelineInputDto;

/**
 * PipelineStage Input DTO (Generated Base Class)
 *
 * Pipeline stage configurations *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom validation logic to PipelineStageInputDto.php instead.
 *
 * @generated by Genmax Code Generator
 */
abstract class PipelineStageInputDtoGenerated
{
    /**
     * organization reference
     * Must be: IRI string (e.g., "/api/organizations/uuid")
     * Auto-assigned by system if not provided
     */
    #[Groups(['pipelinestage:write'])]
    public ?string $organization = null;

    #[Groups(['pipelinestage:write'])]
    public ?string $description = null;

    #[Groups(['pipelinestage:write'])]
    public int $probability;

    #[Groups(['pipelinestage:write'])]
    public bool $final = false;

    #[Groups(['pipelinestage:write'])]
    public bool $won = false;

    #[Groups(['pipelinestage:write'])]
    public bool $active = true;

    #[Groups(['pipelinestage:write'])]
    public bool $lost = false;

    #[Groups(['pipelinestage:write'])]
    public string $color = '#0dcaf0';

    #[Groups(['pipelinestage:write'])]
    public ?int $displayOrder = null;

    #[Groups(['pipelinestage:write'])]
    public ?string $migrationCriteria = null;

    /**
     * next reference
     * Must be: IRI string (e.g., "/api/pipelinestages/uuid")
     */
    #[Groups(['pipelinestage:write'])]
    public ?string $next = null;

    /**
     * pipeline reference
     * Must be: IRI string (e.g., "/api/pipelines/uuid")
     */
    #[Groups(['pipelinestage:write'])]
    public ?string $pipeline = null;

    /**
     * previous reference
     * Must be: IRI string (e.g., "/api/pipelinestages/uuid")
     */
    #[Groups(['pipelinestage:write'])]
    public ?string $previous = null;

    #[Groups(['pipelinestage:write'])]
    public string $stageName;


    // Getters and Setters

    public function getOrganization(): ?string    {
        return $this->organization;
    }

    public function setOrganization(?string $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getDealstages(): ?string    {
        return $this->dealStages;
    }

    public function setDealstages(?string $dealStages): self
    {
        $this->dealStages = $dealStages;
        return $this;
    }

    public function getProbability(): int    {
        return $this->probability;
    }

    public function setProbability(int $probability): self
    {
        $this->probability = $probability;
        return $this;
    }

    public function getFinal(): bool    {
        return $this->final;
    }

    public function setFinal(bool $final): self
    {
        $this->final = $final;
        return $this;
    }

    public function getWon(): bool    {
        return $this->won;
    }

    public function setWon(bool $won): self
    {
        $this->won = $won;
        return $this;
    }

    public function getActive(): bool    {
        return $this->active;
    }

    public function setActive(bool $active): self
    {
        $this->active = $active;
        return $this;
    }

    public function getLost(): bool    {
        return $this->lost;
    }

    public function setLost(bool $lost): self
    {
        $this->lost = $lost;
        return $this;
    }

    public function getColor(): string    {
        return $this->color;
    }

    public function setColor(string $color): self
    {
        $this->color = $color;
        return $this;
    }

    public function getDeals(): ?string    {
        return $this->deals;
    }

    public function setDeals(?string $deals): self
    {
        $this->deals = $deals;
        return $this;
    }

    public function getDisplayorder(): ?int    {
        return $this->displayOrder;
    }

    public function setDisplayorder(?int $displayOrder): self
    {
        $this->displayOrder = $displayOrder;
        return $this;
    }

    public function getMigrationcriteria(): ?string    {
        return $this->migrationCriteria;
    }

    public function setMigrationcriteria(?string $migrationCriteria): self
    {
        $this->migrationCriteria = $migrationCriteria;
        return $this;
    }

    public function getNext(): ?string    {
        return $this->next;
    }

    public function setNext(?string $next): self
    {
        $this->next = $next;
        return $this;
    }

    public function getPipeline(): ?string    {
        return $this->pipeline;
    }

    public function setPipeline(?string $pipeline): self
    {
        $this->pipeline = $pipeline;
        return $this;
    }

    public function getPrevious(): ?string    {
        return $this->previous;
    }

    public function setPrevious(?string $previous): self
    {
        $this->previous = $previous;
        return $this;
    }

    public function getStagename(): string    {
        return $this->stageName;
    }

    public function setStagename(string $stageName): self
    {
        $this->stageName = $stageName;
        return $this;
    }

    public function getTasks(): ?string    {
        return $this->tasks;
    }

    public function setTasks(?string $tasks): self
    {
        $this->tasks = $tasks;
        return $this;
    }
}
