<?php

declare(strict_types=1);

namespace App\Security\Voter\Generated;

use App\Entity\WorkingHour;
use App\Entity\User;
use Symfony\Component\Security\Core\Authentication\Token\TokenInterface;
use Symfony\Component\Security\Core\Authorization\Voter\Voter;

/**
 * WorkingHour Voter (Generated Base Class)
 *
 * This class is ALWAYS regenerated from CSV. DO NOT edit this file.
 * Add custom authorization logic to WorkingHourVoter.php instead.
 *
 * @generated by Luminai Code Generator
 */
abstract class WorkingHourVoterGenerated extends Voter
{
    public const VIEW = 'VIEW';
    public const EDIT = 'EDIT';
    public const DELETE = 'DELETE';

    protected function supports(string $attribute, mixed $subject): bool
    {
        // Only vote on WorkingHour objects with supported attributes
        if (!in_array($attribute, ['VIEW', 'EDIT', 'DELETE'], true)) {
            return false;
        }

        if (!$subject instanceof WorkingHour) {
            return false;
        }

        return true;
    }

    protected function voteOnAttribute(string $attribute, mixed $subject, TokenInterface $token): bool
    {
        $user = $token->getUser();

        // User must be logged in
        if (!$user instanceof User) {
            return false;
        }

        /** @var WorkingHour $workinghour */
        $workinghour = $subject;

        return match ($attribute) {
            self::VIEW => $this->canView($workinghour, $user),
            self::EDIT => $this->canEdit($workinghour, $user),
            self::DELETE => $this->canDelete($workinghour, $user),
            default => false,
        };
    }

    /**
     * Check if user can view the WorkingHour
     */
    protected function canView(WorkingHour $workinghour, User $user): bool
    {
        // Check if user belongs to the same organization
        if ($workinghour->getOrganization()->getId() !== $user->getOrganization()->getId()) {
            return false;
        }

        // Admins and super admins can do anything
        if (in_array('ROLE_ADMIN', $user->getRoles(), true) || in_array('ROLE_SUPER_ADMIN', $user->getRoles(), true)) {
            return true;
        }

        // All authenticated users can view
        return true;
    }

    /**
     * Check if user can edit the WorkingHour
     */
    protected function canEdit(WorkingHour $workinghour, User $user): bool
    {
        // Check if user belongs to the same organization
        if ($workinghour->getOrganization()->getId() !== $user->getOrganization()->getId()) {
            return false;
        }

        // Admins and super admins can do anything
        if (in_array('ROLE_ADMIN', $user->getRoles(), true) || in_array('ROLE_SUPER_ADMIN', $user->getRoles(), true)) {
            return true;
        }

        // Users can edit their own organization's entities
        return true;
    }

    /**
     * Check if user can delete the WorkingHour
     */
    protected function canDelete(WorkingHour $workinghour, User $user): bool
    {
        // Check if user belongs to the same organization
        if ($workinghour->getOrganization()->getId() !== $user->getOrganization()->getId()) {
            return false;
        }

        // Admins and super admins can do anything
        if (in_array('ROLE_ADMIN', $user->getRoles(), true) || in_array('ROLE_SUPER_ADMIN', $user->getRoles(), true)) {
            return true;
        }

        // Only admins can delete
        return false;
    }

}
