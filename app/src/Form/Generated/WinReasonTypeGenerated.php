<?php

declare(strict_types=1);

namespace App\Form\Generated;

use App\Entity\WinReason;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\EnumType;
use Symfony\Component\Form\Extension\Core\Type\IntegerType;
use Symfony\Component\Form\Extension\Core\Type\NumberType;
use Symfony\Component\Form\Extension\Core\Type\CheckboxType;
use Symfony\Component\Form\Extension\Core\Type\ColorType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Contracts\Translation\TranslatorInterface;

/**
 * Generated Base Form for WinReason
 *
 * ⚠️ WARNING: This file is ALWAYS regenerated by Genmax
 * DO NOT EDIT THIS FILE - Edit WinReasonType instead
 *
 * @generated by Genmax
 * @codeCoverageIgnore
 */
abstract class WinReasonTypeGenerated extends AbstractType
{
    public function __construct(
        protected readonly TranslatorInterface $translator
    ) {}

    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $builder->add('name', TextType::class, [
            'label' => 'Reason Name',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter reason name',
            ],
        ]);

        $builder->add('description', TextType::class, [
            'label' => 'Description',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter description',
            ],
        ]);

        $builder->add('category', EnumType::class, [
            'label' => 'Category',
            'required' => true,
            'class' => App\Enum\WinReasonCategoryEnum::class,
            'choice_label' => 'getLabel',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('sortOrder', IntegerType::class, [
            'label' => 'Sort Order',
            'required' => true,
            'help' => 'Lower numbers appear first. Use increments of 10 to allow for insertions.',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('impactScore', NumberType::class, [
            'label' => 'Impact Score',
            'required' => false,
            'help' => 'Rate the impact of this win reason on deal success from 0 to 100',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('competitorRelated', CheckboxType::class, [
            'label' => 'Competitor Related',
            'required' => true,
            'help' => 'Check if this win reason involves outperforming a specific competitor',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('primaryCompetitor', TextType::class, [
            'label' => 'Primary Competitor',
            'required' => false,
            'help' => 'Name the main competitor if this win reason is competitor related',
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter primary competitor',
            ],
        ]);

        $builder->add('dealValueImpact', EnumType::class, [
            'label' => 'Deal Value Impact',
            'required' => false,
            'help' => 'Select how much this win reason typically influences deal size',
            'class' => App\Enum\DealValueImpactEnum::class,
            'choice_label' => 'getLabel',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('color', ColorType::class, [
            'label' => 'Color',
            'required' => true,
            'help' => 'Choose a color to represent this win reason in dashboards and reports',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('tags', TextType::class, [
            'label' => 'Tags',
            'required' => false,
            'help' => 'Enter tags as JSON array: [&quot;tag1&quot;, &quot;tag2&quot;, &quot;tag3&quot;]',
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter tags',
            ],
        ]);

        $builder->add('active', CheckboxType::class, [
            'label' => 'Active',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('notes', TextareaType::class, [
            'label' => 'Internal Notes',
            'required' => false,
            'help' => 'Add guidance for sales team on when this win reason applies',
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter internal notes',
            ],
        ]);

        $builder->add('requiresApproval', CheckboxType::class, [
            'label' => 'Requires Approval',
            'required' => true,
            'help' => 'Check if manager approval is needed when this win reason is selected',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

    }

    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setDefaults([
            'data_class' => WinReason::class,
        ]);
    }
}
