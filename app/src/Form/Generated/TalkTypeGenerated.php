<?php

declare(strict_types=1);

namespace App\Form\Generated;

use App\Entity\Talk;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\Form\Extension\Core\Type\IntegerType;
use Symfony\Component\Form\Extension\Core\Type\DateTimeType;
use Symfony\Component\Form\Extension\Core\Type\CheckboxType;
use Symfony\Contracts\Translation\TranslatorInterface;

/**
 * Generated Base Form for Talk
 *
 * ⚠️ WARNING: This file is ALWAYS regenerated by Genmax
 * DO NOT EDIT THIS FILE - Edit TalkType instead
 *
 * @generated by Genmax
 * @codeCoverageIgnore
 */
abstract class TalkTypeGenerated extends AbstractType
{
    public function __construct(
        protected readonly TranslatorInterface $translator
    ) {}

    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $builder->add('subject', TextType::class, [
            'label' => 'Subject',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter subject',
            ],
        ]);

        $builder->add('summary', TextareaType::class, [
            'label' => 'Summary',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter summary',
            ],
        ]);

        $builder->add('company', EntityType::class, [
            'label' => 'Company',
            'required' => false,
            'class' => Company::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('contact', EntityType::class, [
            'label' => 'Contact',
            'required' => false,
            'class' => Contact::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('deal', EntityType::class, [
            'label' => 'Deal',
            'required' => false,
            'class' => Deal::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('talkType', EntityType::class, [
            'label' => 'TalkType',
            'required' => true,
            'class' => TalkType::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('channel', IntegerType::class, [
            'label' => 'Channel',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('status', IntegerType::class, [
            'label' => 'Status',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('priority', IntegerType::class, [
            'label' => 'Priority',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('outcome', IntegerType::class, [
            'label' => 'Outcome',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('sentiment', TextType::class, [
            'label' => 'Sentiment',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter sentiment',
            ],
        ]);

        $builder->add('dateStart', DateTimeType::class, [
            'label' => 'DateStart',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('dateLastMessage', DateTimeType::class, [
            'label' => 'DateLastMessage',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('closedAt', DateTimeType::class, [
            'label' => 'Closed At',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('durationSeconds', IntegerType::class, [
            'label' => 'DurationSeconds',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('recordingUrl', IntegerType::class, [
            'label' => 'RecordingUrl',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('users', EntityType::class, [
            'label' => 'Users',
            'required' => false,
            'class' => User::class,
            'choice_label' => '__toString',
            'multiple' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('owner', EntityType::class, [
            'label' => 'Owner',
            'required' => true,
            'class' => User::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('assignedTo', EntityType::class, [
            'label' => 'Assigned To',
            'required' => false,
            'class' => User::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('agents', EntityType::class, [
            'label' => 'Agents',
            'required' => false,
            'class' => Agent::class,
            'choice_label' => '__toString',
            'multiple' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('campaigns', EntityType::class, [
            'label' => 'Campaigns',
            'required' => false,
            'class' => Campaign::class,
            'choice_label' => '__toString',
            'multiple' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('messages', EntityType::class, [
            'label' => 'Messages',
            'required' => false,
            'entry_type' => App\Form\TalkMessageType::class,
            'entry_options' => [
                'label' => false,
            ],
            'allow_add' => true,
            'allow_delete' => true,
            'by_reference' => false,
            'prototype' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
            'constraints' => [
                new \Symfony\Component\Validator\Constraints\Count(['min' => 1]),
            ],
        ]);

        $builder->add('archived', CheckboxType::class, [
            'label' => 'IsArchived',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('internal', CheckboxType::class, [
            'label' => 'Internal',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('tags', TextareaType::class, [
            'label' => 'Tags',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter tags',
            ],
        ]);

    }

    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setDefaults([
            'data_class' => Talk::class,
        ]);
    }
}
