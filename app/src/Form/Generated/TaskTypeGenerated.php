<?php

declare(strict_types=1);

namespace App\Form\Generated;

use App\Entity\Task;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Component\Form\Extension\Core\Type\DateTimeType;
use Symfony\Component\Form\Extension\Core\Type\IntegerType;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\Form\Extension\Core\Type\CheckboxType;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Contracts\Translation\TranslatorInterface;

/**
 * Generated Base Form for Task
 *
 * ⚠️ WARNING: This file is ALWAYS regenerated by Genmax
 * DO NOT EDIT THIS FILE - Edit TaskType instead
 *
 * @generated by Genmax
 * @codeCoverageIgnore
 */
abstract class TaskTypeGenerated extends AbstractType
{
    public function __construct(
        protected readonly TranslatorInterface $translator
    ) {}

    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $builder->add('name', TextType::class, [
            'label' => 'Subject',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter subject',
            ],
        ]);

        $builder->add('description', TextareaType::class, [
            'label' => 'Description',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter description',
            ],
        ]);

        $builder->add('startDate', DateTimeType::class, [
            'label' => 'Start Date',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
            'widget' => 'single_text',
        ]);

        $builder->add('completionPercentage', IntegerType::class, [
            'label' => 'Completion %',
            'required' => false,
            'attr' => [
                'min' => '0',
                'max' => '100',
            ],
        ]);

        $builder->add('category', ChoiceType::class, [
            'label' => 'Category',
            'required' => false,
            'class' => App\Enum\CategoryEnum::class,
            'choice_label' => 'getLabel',
            'attr' => [
                'class' => 'form-input-modern',
            ],
            'choices' => [
                'Call' => 'call',
                'Email' => 'email',
                'Meeting' => 'meeting',
                'Follow-up' => 'follow_up',
                'Review' => 'review',
                'Other' => 'other',
            ],
            'placeholder' => 'Select category',
        ]);

        $builder->add('archived', CheckboxType::class, [
            'label' => 'Archived',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('command', TextareaType::class, [
            'label' => 'Command',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter command',
            ],
        ]);

        $builder->add('completedDate', DateTimeType::class, [
            'label' => 'Completed Date',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('contact', EntityType::class, [
            'label' => 'Contact',
            'required' => false,
            'class' => Contact::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('deal', EntityType::class, [
            'label' => 'Deal',
            'required' => false,
            'class' => Deal::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('durationMinutes', IntegerType::class, [
            'label' => 'Duration Minutes',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('location', TextType::class, [
            'label' => 'Location',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter location',
            ],
        ]);

        $builder->add('pipelineStage', EntityType::class, [
            'label' => 'Pipeline Stage',
            'required' => false,
            'class' => PipelineStage::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('priority', ChoiceType::class, [
            'label' => 'Priority',
            'required' => false,
            'class' => App\Enum\PriorityEnum::class,
            'choice_label' => 'getLabel',
            'attr' => [
                'class' => 'form-input-modern',
            ],
            'choices' => [
                'Low' => '1',
                'Normal' => '2',
                'High' => '3',
                'Urgent' => '4',
                'Critical' => '5',
            ],
            'placeholder' => 'Select priority',
        ]);

        $builder->add('scheduledDate', DateTimeType::class, [
            'label' => 'Due Date',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('completed', CheckboxType::class, [
            'label' => 'Completed',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('company', EntityType::class, [
            'label' => 'Company',
            'required' => false,
            'class' => App\Entity\Company::class,
            'choice_label' => 'name',
            'attr' => [
                'class' => 'form-input-modern',
            ],
            'placeholder' => 'Select company',
        ]);

        $builder->add('reminderDate', DateTimeType::class, [
            'label' => 'Reminder Date',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
            'widget' => 'single_text',
        ]);

        $builder->add('reminder', CheckboxType::class, [
            'label' => 'Reminder',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('recurring', CheckboxType::class, [
            'label' => 'Recurring',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('recurrenceRule', TextType::class, [
            'label' => 'Recurrence Rule',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter recurrence rule',
            ],
        ]);

        $builder->add('overdue', CheckboxType::class, [
            'label' => 'Overdue',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('queue', TextType::class, [
            'label' => 'Queue',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter queue',
            ],
        ]);

        $builder->add('emailSubject', TextType::class, [
            'label' => 'Email Subject',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter email subject',
            ],
        ]);

        $builder->add('taskStatus', ChoiceType::class, [
            'label' => 'Status',
            'required' => true,
            'class' => App\Enum\TaskstatusEnum::class,
            'choice_label' => 'getLabel',
            'attr' => [
                'class' => 'form-input-modern',
            ],
            'choices' => [
                'Pending' => 'pending',
                'In Progress' => 'in_progress',
                'Completed' => 'completed',
                'Cancelled' => 'cancelled',
                'Deferred' => 'deferred',
            ],
            'placeholder' => 'Select status',
        ]);

        $builder->add('phoneNumber', TextType::class, [
            'label' => 'Phone Number',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter phone number',
            ],
        ]);

        $builder->add('meetingUrl', TextType::class, [
            'label' => 'Meeting URL',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter meeting url',
            ],
        ]);

        $builder->add('outcome', TextType::class, [
            'label' => 'Outcome',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter outcome',
            ],
        ]);

        $builder->add('notes', TextareaType::class, [
            'label' => 'Notes',
            'required' => false,
            'attr' => [
                'rows' => '4',
            ],
        ]);

        $builder->add('type', EntityType::class, [
            'label' => 'Task Type',
            'required' => false,
            'class' => TaskType::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('user', EntityType::class, [
            'label' => 'Assigned To',
            'required' => false,
            'class' => User::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

    }

    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setDefaults([
            'data_class' => Task::class,
        ]);
    }
}
