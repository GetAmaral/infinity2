<?php

declare(strict_types=1);

namespace App\Form\Generated;

use App\Entity\DealStage;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Form\Extension\Core\Type\NumberType;
use Symfony\Component\Form\Extension\Core\Type\IntegerType;
use Symfony\Component\Form\Extension\Core\Type\DateType;
use Symfony\Component\Form\Extension\Core\Type\MoneyType;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\CheckboxType;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\Form\Extension\Core\Type\DateTimeType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Contracts\Translation\TranslatorInterface;

/**
 * Generated Base Form for DealStage
 *
 * ⚠️ WARNING: This file is ALWAYS regenerated by Genmax
 * DO NOT EDIT THIS FILE - Edit DealStageType instead
 *
 * @generated by Genmax
 * @codeCoverageIgnore
 */
abstract class DealStageTypeGenerated extends AbstractType
{
    public function __construct(
        protected readonly TranslatorInterface $translator
    ) {}

    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $builder->add('probability', NumberType::class, [
            'label' => 'Win Probability (%)',
            'required' => false,
            'help' => 'Percentage likelihood (0-100) that the deal will close at this stage',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('rottenDays', IntegerType::class, [
            'label' => 'Rotten Days Threshold',
            'required' => false,
            'help' => 'Number of days before this stage is considered stale/rotten (0 = no limit)',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('expectedCloseDate', DateType::class, [
            'label' => 'Expected Close Date',
            'required' => false,
            'help' => 'Expected date for deal closure when in this stage',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('stageValue', MoneyType::class, [
            'label' => 'Stage Value',
            'required' => false,
            'help' => 'Deal value when it entered this stage (for historical tracking)',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('daysInStage', TextType::class, [
            'label' => 'Days in Stage',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter days in stage',
            ],
        ]);

        $builder->add('active', CheckboxType::class, [
            'label' => 'Active',
            'required' => true,
            'help' => 'Whether this stage record is currently active',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('deal', EntityType::class, [
            'label' => 'Deal',
            'required' => false,
            'class' => Deal::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('endedAt', DateTimeType::class, [
            'label' => 'Ended At',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('lastUpdatedAt', DateTimeType::class, [
            'label' => 'Last Updated At',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('notes', TextareaType::class, [
            'label' => 'Notes',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter notes',
            ],
        ]);

        $builder->add('pipelineStage', EntityType::class, [
            'label' => 'Pipeline Stage',
            'required' => false,
            'class' => PipelineStage::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('startedAt', DateTimeType::class, [
            'label' => 'Started At',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

    }

    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setDefaults([
            'data_class' => DealStage::class,
        ]);
    }
}
