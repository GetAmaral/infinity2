<?php

declare(strict_types=1);

namespace App\Form\Generated;

use App\Entity\Deal;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\Form\Extension\Core\Type\NumberType;
use Symfony\Component\Form\Extension\Core\Type\DateTimeType;
use Symfony\Component\Form\Extension\Core\Type\IntegerType;
use Symfony\Contracts\Translation\TranslatorInterface;

/**
 * Generated Base Form for Deal
 *
 * ⚠️ WARNING: This file is ALWAYS regenerated by Genmax
 * DO NOT EDIT THIS FILE - Edit DealType instead
 *
 * @generated by Genmax
 * @codeCoverageIgnore
 */
abstract class DealTypeGenerated extends AbstractType
{
    public function __construct(
        protected readonly TranslatorInterface $translator
    ) {}

    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $builder->add('name', TextType::class, [
            'label' => 'Name',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter name',
            ],
        ]);

        $builder->add('description', TextareaType::class, [
            'label' => 'Description',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter description',
            ],
        ]);

        $builder->add('company', EntityType::class, [
            'label' => 'Company',
            'required' => true,
            'class' => Company::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('dealStatus', ChoiceType::class, [
            'label' => 'DealStatus',
            'required' => true,
            'class' => App\Enum\DealstatusEnum::class,
            'choice_label' => 'getLabel',
            'attr' => [
                'class' => 'form-input-modern',
            ],
            'choices' => [
                'Open' => 'open',
                'In Progress' => 'in_progress',
                'Won' => 'won',
                'Lost' => 'lost',
                'Abandoned' => 'abandoned',
            ],
        ]);

        $builder->add('currentStage', EntityType::class, [
            'label' => 'CurrentStage',
            'required' => true,
            'class' => PipelineStage::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('probability', NumberType::class, [
            'label' => 'Probability',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('pipeline', EntityType::class, [
            'label' => 'Pipeline',
            'required' => false,
            'help' => 'Sales pipeline this deal belongs to',
            'class' => Pipeline::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('dealType', EntityType::class, [
            'label' => 'DealType',
            'required' => false,
            'class' => DealType::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('priority', ChoiceType::class, [
            'label' => 'Priority',
            'required' => false,
            'class' => App\Enum\PriorityEnum::class,
            'choice_label' => 'getLabel',
            'attr' => [
                'class' => 'form-input-modern',
            ],
            'choices' => [
                'Low' => 'low',
                'Medium' => 'medium',
                'High' => 'high',
                'Urgent' => 'urgent',
            ],
        ]);

        $builder->add('category', EntityType::class, [
            'label' => 'Category',
            'required' => false,
            'class' => DealCategory::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('dealNumber', TextType::class, [
            'label' => 'DealNumber',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter dealnumber',
            ],
        ]);

        $builder->add('expectedAmount', TextType::class, [
            'label' => 'ExpectedAmount',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter expectedamount',
            ],
        ]);

        $builder->add('weightedAmount', TextType::class, [
            'label' => 'WeightedAmount',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter weightedamount',
            ],
        ]);

        $builder->add('closureAmount', TextType::class, [
            'label' => 'ClosureAmount',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter closureamount',
            ],
        ]);

        $builder->add('initialAmount', TextType::class, [
            'label' => 'InitialAmount',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter initialamount',
            ],
        ]);

        $builder->add('currency', TextType::class, [
            'label' => 'Currency',
            'required' => false,
            'help' => 'ISO 4217 currency code (e.g., USD, EUR, GBP)',
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter currency',
            ],
        ]);

        $builder->add('exchangeRate', TextType::class, [
            'label' => 'ExchangeRate',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter exchangerate',
            ],
        ]);

        $builder->add('discountPercentage', TextType::class, [
            'label' => 'DiscountPercentage',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter discountpercentage',
            ],
        ]);

        $builder->add('discountAmount', TextType::class, [
            'label' => 'DiscountAmount',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter discountamount',
            ],
        ]);

        $builder->add('commissionRate', TextType::class, [
            'label' => 'CommissionRate',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter commissionrate',
            ],
        ]);

        $builder->add('commissionAmount', TextType::class, [
            'label' => 'CommissionAmount',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter commissionamount',
            ],
        ]);

        $builder->add('expectedClosureDate', DateTimeType::class, [
            'label' => 'ExpectedClosureDate',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('closureDate', DateTimeType::class, [
            'label' => 'ClosureDate',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('products', EntityType::class, [
            'label' => 'Products',
            'required' => false,
            'class' => Product::class,
            'choice_label' => '__toString',
            'multiple' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('initialDate', DateTimeType::class, [
            'label' => 'InitialDate',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('lastActivityDate', DateTimeType::class, [
            'label' => 'LastActivityDate',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('nextFollowUp', DateTimeType::class, [
            'label' => 'NextFollowUp',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('daysInCurrentStage', TextType::class, [
            'label' => 'DaysInCurrentStage',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter daysincurrentstage',
            ],
        ]);

        $builder->add('forecastCategory', IntegerType::class, [
            'label' => 'ForecastCategory',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('manager', EntityType::class, [
            'label' => 'Manager',
            'required' => true,
            'class' => User::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('team', EntityType::class, [
            'label' => 'Team',
            'required' => false,
            'class' => User::class,
            'choice_label' => '__toString',
            'multiple' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('owner', EntityType::class, [
            'label' => 'Deal Owner',
            'required' => true,
            'help' => 'Person who owns this deal',
            'class' => User::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('primaryContact', EntityType::class, [
            'label' => 'PrimaryContact',
            'required' => false,
            'class' => Contact::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('contacts', EntityType::class, [
            'label' => 'Contacts',
            'required' => false,
            'class' => Contact::class,
            'choice_label' => '__toString',
            'multiple' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('leadSource', EntityType::class, [
            'label' => 'LeadSource',
            'required' => false,
            'class' => LeadSource::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('campaign', EntityType::class, [
            'label' => 'Campaign',
            'required' => false,
            'class' => Campaign::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('sourceDetails', TextType::class, [
            'label' => 'SourceDetails',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter sourcedetails',
            ],
        ]);

        $builder->add('notes', TextareaType::class, [
            'label' => 'Notes',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter notes',
            ],
        ]);

        $builder->add('dealStages', EntityType::class, [
            'label' => 'DealStages',
            'required' => false,
            'entry_type' => App\Form\DealStageType::class,
            'entry_options' => [
                'label' => false,
            ],
            'allow_add' => true,
            'allow_delete' => true,
            'by_reference' => false,
            'prototype' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
            'constraints' => [
                new \Symfony\Component\Validator\Constraints\Count(['min' => 1]),
            ],
        ]);

        $builder->add('talks', EntityType::class, [
            'label' => 'Talks',
            'required' => false,
            'entry_type' => App\Form\TalkType::class,
            'entry_options' => [
                'label' => false,
            ],
            'allow_add' => true,
            'allow_delete' => true,
            'by_reference' => false,
            'prototype' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
            'constraints' => [
                new \Symfony\Component\Validator\Constraints\Count(['min' => 1]),
            ],
        ]);

        $builder->add('tasks', EntityType::class, [
            'label' => 'Tasks',
            'required' => false,
            'entry_type' => App\Form\TaskType::class,
            'entry_options' => [
                'label' => false,
            ],
            'allow_add' => true,
            'allow_delete' => true,
            'by_reference' => false,
            'prototype' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
            'constraints' => [
                new \Symfony\Component\Validator\Constraints\Count(['min' => 1]),
            ],
        ]);

        $builder->add('competitors', EntityType::class, [
            'label' => 'Competitors',
            'required' => false,
            'class' => Competitor::class,
            'choice_label' => '__toString',
            'multiple' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('tags', EntityType::class, [
            'label' => 'Tags',
            'required' => false,
            'class' => Tag::class,
            'choice_label' => '__toString',
            'multiple' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('customFields', TextareaType::class, [
            'label' => 'CustomFields',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter customfields',
            ],
        ]);

        $builder->add('lostReason', EntityType::class, [
            'label' => 'LostReason',
            'required' => false,
            'class' => LostReason::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('winReason', EntityType::class, [
            'label' => 'WinReason',
            'required' => false,
            'class' => WinReason::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('actualClosureDate', DateTimeType::class, [
            'label' => 'Actual Closure Date',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

    }

    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setDefaults([
            'data_class' => Deal::class,
        ]);
    }
}
