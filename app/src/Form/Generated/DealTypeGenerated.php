<?php

declare(strict_types=1);

namespace App\Form\Generated;

use App\Entity\Deal;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\IntegerType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Component\Form\Extension\Core\Type\DateTimeType;

/**
 * Deal Form Type (Generated Base Class)
 *
 * This class is ALWAYS regenerated from CSV. DO NOT edit this file.
 * Add custom form logic to DealType.php instead.
 *
 * @generated by Luminai Code Generator
 */
abstract class DealTypeGenerated extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $builder->add('dealNumber', TextType::class, [
            'label' => 'DealNumber',
            'required' => false,
        ]);
        $builder->add('name', TextType::class, [
            'label' => 'Name',
            'required' => true,
        ]);
        $builder->add('dealStatus', IntegerType::class, [
            'label' => 'DealStatus',
            'required' => false,
        ]);
        $builder->add('daysInCurrentStage', TextType::class, [
            'label' => 'DaysInCurrentStage',
            'required' => false,
        ]);
        $builder->add('sourceDetails', TextType::class, [
            'label' => 'SourceDetails',
            'required' => false,
        ]);
        $builder->add('description', TextareaType::class, [
            'label' => 'Description',
            'required' => false,
        ]);
        $builder->add('priority', TextType::class, [
            'label' => 'Priority',
            'required' => false,
        ]);
        $builder->add('forecastCategory', IntegerType::class, [
            'label' => 'ForecastCategory',
            'required' => false,
        ]);
        $builder->add('initialDate', DateTimeType::class, [
            'label' => 'InitialDate',
            'required' => false,
        ]);
        $builder->add('lastActivityDate', DateTimeType::class, [
            'label' => 'LastActivityDate',
            'required' => false,
        ]);
        $builder->add('expectedClosureDate', DateTimeType::class, [
            'label' => 'ExpectedClosureDate',
            'required' => false,
        ]);
        $builder->add('closureDate', DateTimeType::class, [
            'label' => 'ClosureDate',
            'required' => false,
        ]);
        $builder->add('nextFollowUp', DateTimeType::class, [
            'label' => 'NextFollowUp',
            'required' => false,
        ]);
        $builder->add('initialAmount', TextType::class, [
            'label' => 'InitialAmount',
            'required' => false,
        ]);
        $builder->add('expectedAmount', TextType::class, [
            'label' => 'ExpectedAmount',
            'required' => false,
        ]);
        $builder->add('closureAmount', TextType::class, [
            'label' => 'ClosureAmount',
            'required' => false,
        ]);
        $builder->add('weightedAmount', TextType::class, [
            'label' => 'WeightedAmount',
            'required' => false,
        ]);
        $builder->add('discountAmount', TextType::class, [
            'label' => 'DiscountAmount',
            'required' => false,
        ]);
        $builder->add('discountPercentage', TextType::class, [
            'label' => 'DiscountPercentage',
            'required' => false,
        ]);
        $builder->add('commissionRate', TextType::class, [
            'label' => 'CommissionRate',
            'required' => false,
        ]);
        $builder->add('commissionAmount', TextType::class, [
            'label' => 'CommissionAmount',
            'required' => false,
        ]);
        $builder->add('currency', TextType::class, [
            'label' => 'Currency',
            'required' => false,
        ]);
        $builder->add('exchangeRate', TextType::class, [
            'label' => 'ExchangeRate',
            'required' => false,
        ]);
        $builder->add('customFields', TextareaType::class, [
            'label' => 'CustomFields',
            'required' => false,
        ]);
        $builder->add('notes', TextareaType::class, [
            'label' => 'Notes',
            'required' => false,
        ]);
    }

    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setDefaults([
            'data_class' => Deal::class,
        ]);
    }
}
