<?php

declare(strict_types=1);

namespace App\Form\Generated;

use App\Entity\Country;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\CheckboxType;
use Symfony\Component\Form\Extension\Core\Type\NumberType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Component\Form\Extension\Core\Type\IntegerType;
use Symfony\Contracts\Translation\TranslatorInterface;

/**
 * Generated Base Form for Country
 *
 * ⚠️ WARNING: This file is ALWAYS regenerated by Genmax
 * DO NOT EDIT THIS FILE - Edit CountryType instead
 *
 * @generated by Genmax
 * @codeCoverageIgnore
 */
abstract class CountryTypeGenerated extends AbstractType
{
    public function __construct(
        protected readonly TranslatorInterface $translator
    ) {}

    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $builder->add('iso2', TextType::class, [
            'label' => 'ISO 3166-1 Alpha-2',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter iso 3166-1 alpha-2',
            ],
        ]);

        $builder->add('name', TextType::class, [
            'label' => 'Name',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter name',
            ],
        ]);

        $builder->add('iso3', TextType::class, [
            'label' => 'ISO 3166-1 Alpha-3',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter iso 3166-1 alpha-3',
            ],
        ]);

        $builder->add('numericCode', TextType::class, [
            'label' => 'ISO Numeric Code',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter iso numeric code',
            ],
        ]);

        $builder->add('currencyCode', TextType::class, [
            'label' => 'Currency Code',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter currency code',
            ],
        ]);

        $builder->add('phoneCode', TextType::class, [
            'label' => 'Phone Code',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter phone code',
            ],
        ]);

        $builder->add('continent', TextType::class, [
            'label' => 'Continent',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter continent',
            ],
        ]);

        $builder->add('capital', TextType::class, [
            'label' => 'Capital City',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter capital city',
            ],
        ]);

        $builder->add('currencySymbol', TextType::class, [
            'label' => 'Currency Symbol',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter currency symbol',
            ],
        ]);

        $builder->add('euMember', CheckboxType::class, [
            'label' => 'EU Member',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('region', TextType::class, [
            'label' => 'Region',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter region',
            ],
        ]);

        $builder->add('nativeName', TextType::class, [
            'label' => 'Native Name',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter native name',
            ],
        ]);

        $builder->add('officialName', TextType::class, [
            'label' => 'Official Name',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter official name',
            ],
        ]);

        $builder->add('active', CheckboxType::class, [
            'label' => 'Active',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('subregion', TextType::class, [
            'label' => 'Subregion',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter subregion',
            ],
        ]);

        $builder->add('latitude', NumberType::class, [
            'label' => 'Latitude',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('longitude', NumberType::class, [
            'label' => 'Longitude',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('timezones', TextareaType::class, [
            'label' => 'Timezones',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter timezones',
            ],
        ]);

        $builder->add('languages', TextareaType::class, [
            'label' => 'Languages',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter languages',
            ],
        ]);

        $builder->add('tld', TextType::class, [
            'label' => 'TLD',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter tld',
            ],
        ]);

        $builder->add('nationalityName', TextType::class, [
            'label' => 'Nationality',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter nationality',
            ],
        ]);

        $builder->add('availableForShipping', CheckboxType::class, [
            'label' => 'Available for Shipping',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('availableForBilling', CheckboxType::class, [
            'label' => 'Available for Billing',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('schengenMember', CheckboxType::class, [
            'label' => 'Schengen Member',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('oecdMember', CheckboxType::class, [
            'label' => 'OECD Member',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('dataResidencyRequired', CheckboxType::class, [
            'label' => 'Data Residency Required',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('postalCodeFormat', TextType::class, [
            'label' => 'Postal Code Format',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter postal code format',
            ],
        ]);

        $builder->add('postalCodeRequired', CheckboxType::class, [
            'label' => 'Postal Code Required',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('addressFormat', TextareaType::class, [
            'label' => 'Address Format',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter address format',
            ],
        ]);

        $builder->add('taxIdRequired', CheckboxType::class, [
            'label' => 'Tax ID Required',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('population', IntegerType::class, [
            'label' => 'Population',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('area', NumberType::class, [
            'label' => 'Area (km²)',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('unMemberSince', IntegerType::class, [
            'label' => 'UN Member Since',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('flagEmoji', TextType::class, [
            'label' => 'Flag Emoji',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter flag emoji',
            ],
        ]);

        $builder->add('flagSvgUrl', TextType::class, [
            'label' => 'Flag SVG URL',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter flag svg url',
            ],
        ]);

    }

    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setDefaults([
            'data_class' => Country::class,
        ]);
    }
}
