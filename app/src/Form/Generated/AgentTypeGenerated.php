<?php

declare(strict_types=1);

namespace App\Form\Generated;

use App\Entity\Agent;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\CheckboxType;
use Symfony\Component\Form\Extension\Core\Type\NumberType;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\Form\Extension\Core\Type\DateType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Component\Form\Extension\Core\Type\IntegerType;
use Symfony\Contracts\Translation\TranslatorInterface;

/**
 * Generated Base Form for Agent
 *
 * ⚠️ WARNING: This file is ALWAYS regenerated by Genmax
 * DO NOT EDIT THIS FILE - Edit AgentType instead
 *
 * @generated by Genmax
 * @codeCoverageIgnore
 */
abstract class AgentTypeGenerated extends AbstractType
{
    public function __construct(
        protected readonly TranslatorInterface $translator
    ) {}

    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $builder->add('name', TextType::class, [
            'label' => 'Name',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter name',
            ],
        ]);

        $builder->add('phone', TextType::class, [
            'label' => 'Phone',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter phone',
            ],
        ]);

        $builder->add('title', TextType::class, [
            'label' => 'Job Title',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter job title',
            ],
        ]);

        $builder->add('active', CheckboxType::class, [
            'label' => 'Active',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('available', CheckboxType::class, [
            'label' => 'Available',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('territory', TextType::class, [
            'label' => 'Territory',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter territory',
            ],
        ]);

        $builder->add('quota', NumberType::class, [
            'label' => 'Sales Quota',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('user', EntityType::class, [
            'label' => 'User',
            'required' => false,
            'class' => User::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('agentType', EntityType::class, [
            'label' => 'AgentType',
            'required' => false,
            'class' => AgentType::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('commissionRate', NumberType::class, [
            'label' => 'Commission Rate',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('startDate', DateType::class, [
            'label' => 'Start Date',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('endDate', DateType::class, [
            'label' => 'End Date',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('specialization', TextType::class, [
            'label' => 'Specialization',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter specialization',
            ],
        ]);

        $builder->add('languages', TextareaType::class, [
            'label' => 'Languages',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter languages',
            ],
        ]);

        $builder->add('certifications', TextareaType::class, [
            'label' => 'Certifications',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter certifications',
            ],
        ]);

        $builder->add('totalSales', NumberType::class, [
            'label' => 'Total Sales',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('currentMonthSales', NumberType::class, [
            'label' => 'Current Month Sales',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('conversionRate', NumberType::class, [
            'label' => 'Conversion Rate',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('customerSatisfactionScore', NumberType::class, [
            'label' => 'CSAT Score',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('maxConcurrentCustomers', IntegerType::class, [
            'label' => 'Max Concurrent Customers',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('currentCustomerCount', IntegerType::class, [
            'label' => 'Current Customer Count',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('averageResponseTime', IntegerType::class, [
            'label' => 'Avg Response Time',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('skills', TextareaType::class, [
            'label' => 'Skills',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter skills',
            ],
        ]);

        $builder->add('prompt', TextareaType::class, [
            'label' => 'AI Prompt',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter ai prompt',
            ],
        ]);

        $builder->add('talks', EntityType::class, [
            'label' => 'Talks',
            'required' => false,
            'class' => Talk::class,
            'choice_label' => '__toString',
            'multiple' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

    }

    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setDefaults([
            'data_class' => Agent::class,
        ]);
    }
}
