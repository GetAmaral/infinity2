<?php

declare(strict_types=1);

namespace App\Form\Generated;

use App\Entity\TalkMessage;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\Form\Extension\Core\Type\DateTimeType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\Form\Extension\Core\Type\CheckboxType;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Contracts\Translation\TranslatorInterface;

/**
 * Generated Base Form for TalkMessage
 *
 * ⚠️ WARNING: This file is ALWAYS regenerated by Genmax
 * DO NOT EDIT THIS FILE - Edit TalkMessageType instead
 *
 * @generated by Genmax
 * @codeCoverageIgnore
 */
abstract class TalkMessageTypeGenerated extends AbstractType
{
    public function __construct(
        protected readonly TranslatorInterface $translator
    ) {}

    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $builder->add('talk', EntityType::class, [
            'label' => 'Talk',
            'required' => true,
            'class' => Talk::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('fromContact', EntityType::class, [
            'label' => 'FromContact',
            'required' => false,
            'class' => Contact::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('fromUser', EntityType::class, [
            'label' => 'FromUser',
            'required' => false,
            'class' => User::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('fromAgent', EntityType::class, [
            'label' => 'FromAgent',
            'required' => false,
            'class' => Agent::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('sentAt', DateTimeType::class, [
            'label' => 'Sent At',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('body', TextareaType::class, [
            'label' => 'Message Body',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter message body',
            ],
        ]);

        $builder->add('messageType', ChoiceType::class, [
            'label' => 'Message Type',
            'required' => true,
            'class' => App\Enum\MessagetypeEnum::class,
            'choice_label' => 'getLabel',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('attachments', EntityType::class, [
            'label' => 'Attachments',
            'required' => false,
            'entry_type' => App\Form\AttachmentType::class,
            'entry_options' => [
                'label' => false,
            ],
            'allow_add' => true,
            'allow_delete' => true,
            'by_reference' => false,
            'prototype' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
            'constraints' => [
                new \Symfony\Component\Validator\Constraints\Count(['min' => 1]),
            ],
        ]);

        $builder->add('read', CheckboxType::class, [
            'label' => 'Is Read',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('readAt', DateTimeType::class, [
            'label' => 'ReadAt',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('sentiment', ChoiceType::class, [
            'label' => 'Sentiment',
            'required' => false,
            'class' => App\Enum\SentimentEnum::class,
            'choice_label' => 'getLabel',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('parentMessage', EntityType::class, [
            'label' => 'ParentMessage',
            'required' => false,
            'class' => TalkMessage::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('edited', CheckboxType::class, [
            'label' => 'Edited',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('notification', EntityType::class, [
            'label' => 'Notification',
            'required' => false,
            'class' => Notification::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('direction', ChoiceType::class, [
            'label' => 'Direction',
            'required' => true,
            'class' => App\Enum\DirectionEnum::class,
            'choice_label' => 'getLabel',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('deliveredAt', DateTimeType::class, [
            'label' => 'Delivered At',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('internal', CheckboxType::class, [
            'label' => 'Internal Note',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('channel', ChoiceType::class, [
            'label' => 'Communication Channel',
            'required' => false,
            'class' => App\Enum\ChannelEnum::class,
            'choice_label' => 'getLabel',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('subject', TextType::class, [
            'label' => 'Subject',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter subject',
            ],
        ]);

    }

    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setDefaults([
            'data_class' => TalkMessage::class,
        ]);
    }
}
