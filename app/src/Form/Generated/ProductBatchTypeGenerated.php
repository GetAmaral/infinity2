<?php

declare(strict_types=1);

namespace App\Form\Generated;

use App\Entity\ProductBatch;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\IntegerType;
use Symfony\Component\Form\Extension\Core\Type\DateType;

/**
 * ProductBatch Form Type (Generated Base Class)
 *
 * This class is ALWAYS regenerated from CSV. DO NOT edit this file.
 * Add custom form logic to ProductBatchType.php instead.
 *
 * @generated by Luminai Code Generator
 */
abstract class ProductBatchTypeGenerated extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $builder->add('name', TextType::class, [
            'label' => 'Name',
            'required' => true,
        ]);
        $builder->add('listPrice', TextType::class, [
            'label' => 'ListPrice',
            'required' => false,
        ]);
        $builder->add('costPrice', TextType::class, [
            'label' => 'CostPrice',
            'required' => false,
        ]);
        $builder->add('minimumPrice', TextType::class, [
            'label' => 'MinimumPrice',
            'required' => false,
        ]);
        $builder->add('maximumDiscount', TextType::class, [
            'label' => 'MaximumDiscount',
            'required' => false,
        ]);
        $builder->add('discountAmount', TextType::class, [
            'label' => 'DiscountAmount',
            'required' => false,
        ]);
        $builder->add('discountPercentage', TextType::class, [
            'label' => 'DiscountPercentage',
            'required' => false,
        ]);
        $builder->add('commissionRate', TextType::class, [
            'label' => 'CommissionRate',
            'required' => false,
        ]);
        $builder->add('commissionAmount', TextType::class, [
            'label' => 'CommissionAmount',
            'required' => false,
        ]);
        $builder->add('currency', TextType::class, [
            'label' => 'Currency',
            'required' => false,
        ]);
        $builder->add('exchangeRate', TextType::class, [
            'label' => 'ExchangeRate',
            'required' => false,
        ]);
        $builder->add('marginPercentage', TextType::class, [
            'label' => 'MarginPercentage',
            'required' => false,
        ]);
        $builder->add('stockQuantity', IntegerType::class, [
            'label' => 'StockQuantity',
            'required' => false,
        ]);
        $builder->add('reservedQuantity', IntegerType::class, [
            'label' => 'ReservedQuantity',
            'required' => false,
        ]);
        $builder->add('availableQuantity', IntegerType::class, [
            'label' => 'AvailableQuantity',
            'required' => false,
        ]);
        $builder->add('expirationDate', DateType::class, [
            'label' => 'ExpirationDate',
            'required' => false,
        ]);
    }

    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setDefaults([
            'data_class' => ProductBatch::class,
        ]);
    }
}
