<?php

declare(strict_types=1);

namespace App\Form\Generated;

use App\Entity\Pipeline;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Component\Form\Extension\Core\Type\CheckboxType;
use Symfony\Component\Form\Extension\Core\Type\EnumType;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\Form\Extension\Core\Type\IntegerType;
use Symfony\Component\Form\Extension\Core\Type\ColorType;
use Symfony\Component\Form\Extension\Core\Type\NumberType;
use Symfony\Component\Form\Extension\Core\Type\CollectionType;
use Symfony\Component\Validator\Constraints\Count;
use Symfony\Component\Form\Extension\Core\Type\DateTimeType;
use Symfony\Contracts\Translation\TranslatorInterface;

/**
 * Generated Base Form for Pipeline
 *
 * ⚠️ WARNING: This file is ALWAYS regenerated by Genmax
 * DO NOT EDIT THIS FILE - Edit PipelineType instead
 *
 * @generated by Genmax
 * @codeCoverageIgnore
 */
abstract class PipelineTypeGenerated extends AbstractType
{
    public function __construct(
        protected readonly TranslatorInterface $translator
    ) {}

    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $builder->add('name', TextType::class, [
            'label' => 'Name',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter name',
            ],
        ]);

        $builder->add('description', TextareaType::class, [
            'label' => 'Description',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter description',
            ],
        ]);

        $builder->add('active', CheckboxType::class, [
            'label' => 'Is Active',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('pipelineType', EnumType::class, [
            'label' => 'Pipeline Type',
            'required' => true,
            'class' => App\Enum\PipelinetypeEnum::class,
            'choice_label' => 'getLabel',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('default', CheckboxType::class, [
            'label' => 'Is Default',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('owner', EntityType::class, [
            'label' => 'Owner',
            'required' => false,
            'class' => User::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('stages', EntityType::class, [
            'label' => 'Stages',
            'required' => false,
            'entry_type' => App\Form\PipelineStageType::class,
            'entry_options' => [
                'label' => false,
            ],
            'allow_add' => true,
            'allow_delete' => true,
            'by_reference' => false,
            'prototype' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
            'constraints' => [
                new \Symfony\Component\Validator\Constraints\Count(['min' => 1]),
            ],
        ]);

        $builder->add('displayOrder', IntegerType::class, [
            'label' => 'Display Order',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('color', ColorType::class, [
            'label' => 'Color',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('icon', TextType::class, [
            'label' => 'Icon',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter icon',
            ],
        ]);

        $builder->add('forecastEnabled', CheckboxType::class, [
            'label' => 'Forecast Enabled',
            'required' => true,
            'help' => 'Enable revenue forecasting for this pipeline',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('autoAdvanceStages', CheckboxType::class, [
            'label' => 'Auto Advance Stages',
            'required' => true,
            'help' => 'Automatically advance deals based on criteria',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('rottenDealThreshold', IntegerType::class, [
            'label' => 'Rotten Deal Threshold',
            'required' => true,
            'help' => 'Number of days before a deal is considered stale',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('currency', EnumType::class, [
            'label' => 'Currency',
            'required' => true,
            'class' => App\Enum\CurrencyEnum::class,
            'choice_label' => 'getLabel',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('avgDealSize', NumberType::class, [
            'label' => 'Average Deal Size',
            'required' => false,
            'disabled' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('avgCycleTime', IntegerType::class, [
            'label' => 'Average Cycle Time',
            'required' => false,
            'help' => 'Average sales cycle time in days',
            'disabled' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('winRate', NumberType::class, [
            'label' => 'Win Rate',
            'required' => false,
            'help' => 'Percentage of deals won',
            'disabled' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('conversionRate', NumberType::class, [
            'label' => 'Conversion Rate',
            'required' => false,
            'help' => 'Average conversion rate between stages',
            'disabled' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('totalDealsCount', IntegerType::class, [
            'label' => 'Total Deals Count',
            'required' => true,
            'disabled' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('activeDealsCount', IntegerType::class, [
            'label' => 'Active Deals Count',
            'required' => true,
            'disabled' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('totalPipelineValue', NumberType::class, [
            'label' => 'Total Pipeline Value',
            'required' => true,
            'disabled' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('deals', CollectionType::class, [
            'label' => 'Deals',
            'required' => false,
            'entry_type' => App\Form\DealType::class,
            'entry_options' => [
                'label' => false,
            ],
            'allow_add' => true,
            'allow_delete' => true,
            'by_reference' => false,
            'prototype' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
            'constraints' => [
                new \Symfony\Component\Validator\Constraints\Count(['min' => 1]),
            ],
        ]);

        $builder->add('archivedAt', DateTimeType::class, [
            'label' => 'Archived At',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

    }

    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setDefaults([
            'data_class' => Pipeline::class,
        ]);
    }
}
