<?php

declare(strict_types=1);

namespace App\Form\Generated;

use App\Entity\Product;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Component\Form\Extension\Core\Type\CheckboxType;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\Form\Extension\Core\Type\IntegerType;
use Symfony\Component\Form\Extension\Core\Type\DateType;
use Symfony\Contracts\Translation\TranslatorInterface;

/**
 * Generated Base Form for Product
 *
 * ⚠️ WARNING: This file is ALWAYS regenerated by Genmax
 * DO NOT EDIT THIS FILE - Edit ProductType instead
 *
 * @generated by Genmax
 * @codeCoverageIgnore
 */
abstract class ProductTypeGenerated extends AbstractType
{
    public function __construct(
        protected readonly TranslatorInterface $translator
    ) {}

    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $builder->add('sku', TextType::class, [
            'label' => 'SKU',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter sku',
            ],
        ]);

        $builder->add('name', TextType::class, [
            'label' => 'Name',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter name',
            ],
        ]);

        $builder->add('description', TextareaType::class, [
            'label' => 'Description',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter description',
            ],
        ]);

        $builder->add('gtin', TextType::class, [
            'label' => 'GTIN',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter gtin',
            ],
        ]);

        $builder->add('upc', TextType::class, [
            'label' => 'UPC',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter upc',
            ],
        ]);

        $builder->add('ean', TextType::class, [
            'label' => 'EAN',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter ean',
            ],
        ]);

        $builder->add('mpn', TextType::class, [
            'label' => 'MPN',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter mpn',
            ],
        ]);

        $builder->add('barcode', TextType::class, [
            'label' => 'Barcode',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter barcode',
            ],
        ]);

        $builder->add('available', CheckboxType::class, [
            'label' => 'Available',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('price', TextType::class, [
            'label' => 'Price',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter price',
            ],
        ]);

        $builder->add('compareAtPrice', TextType::class, [
            'label' => 'Compare At Price',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter compare at price',
            ],
        ]);

        $builder->add('status', ChoiceType::class, [
            'label' => 'Status',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('attachments', EntityType::class, [
            'label' => 'Attachments',
            'required' => false,
            'entry_type' => App\Form\AttachmentType::class,
            'entry_options' => [
                'label' => false,
            ],
            'allow_add' => true,
            'allow_delete' => true,
            'by_reference' => false,
            'prototype' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
            'constraints' => [
                new \Symfony\Component\Validator\Constraints\Count(['min' => 1]),
            ],
        ]);

        $builder->add('reorderLevel', IntegerType::class, [
            'label' => 'Reorder Level',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('reorderQuantity', IntegerType::class, [
            'label' => 'Reorder Quantity',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('leadTime', IntegerType::class, [
            'label' => 'Lead Time (days)',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('active', CheckboxType::class, [
            'label' => 'Active',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('minOrderQuantity', IntegerType::class, [
            'label' => 'Min Order Quantity',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('maxOrderQuantity', IntegerType::class, [
            'label' => 'Max Order Quantity',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('availableQuantity', IntegerType::class, [
            'label' => 'AvailableQuantity',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('batches', EntityType::class, [
            'label' => 'Batches',
            'required' => false,
            'entry_type' => App\Form\ProductBatchType::class,
            'entry_options' => [
                'label' => false,
            ],
            'allow_add' => true,
            'allow_delete' => true,
            'by_reference' => false,
            'prototype' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
            'constraints' => [
                new \Symfony\Component\Validator\Constraints\Count(['min' => 1]),
            ],
        ]);

        $builder->add('billingFrequency', EntityType::class, [
            'label' => 'BillingFrequency',
            'required' => false,
            'class' => BillingFrequency::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('brand', EntityType::class, [
            'label' => 'Brand',
            'required' => false,
            'class' => Brand::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('cancellationFee', TextType::class, [
            'label' => 'CancellationFee',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter cancellationfee',
            ],
        ]);

        $builder->add('category', EntityType::class, [
            'label' => 'Category',
            'required' => false,
            'class' => ProductCategory::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('commissionAmount', TextType::class, [
            'label' => 'CommissionAmount',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter commissionamount',
            ],
        ]);

        $builder->add('commissionRate', TextType::class, [
            'label' => 'CommissionRate',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter commissionrate',
            ],
        ]);

        $builder->add('costPrice', TextType::class, [
            'label' => 'CostPrice',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter costprice',
            ],
        ]);

        $builder->add('currency', TextType::class, [
            'label' => 'Currency',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter currency',
            ],
        ]);

        $builder->add('customFields', TextareaType::class, [
            'label' => 'CustomFields',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter customfields',
            ],
        ]);

        $builder->add('deals', EntityType::class, [
            'label' => 'Deals',
            'required' => false,
            'class' => Deal::class,
            'choice_label' => '__toString',
            'multiple' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('dimensions', TextType::class, [
            'label' => 'Dimensions',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter dimensions',
            ],
        ]);

        $builder->add('discountAmount', TextType::class, [
            'label' => 'DiscountAmount',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter discountamount',
            ],
        ]);

        $builder->add('discountPercentage', TextType::class, [
            'label' => 'DiscountPercentage',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter discountpercentage',
            ],
        ]);

        $builder->add('endOfLifeDate', DateType::class, [
            'label' => 'EndOfLifeDate',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('exchangeRate', TextType::class, [
            'label' => 'ExchangeRate',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter exchangerate',
            ],
        ]);

        $builder->add('features', TextareaType::class, [
            'label' => 'Features',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter features',
            ],
        ]);

        $builder->add('launchDate', DateType::class, [
            'label' => 'LaunchDate',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('lifecycleStage', TextType::class, [
            'label' => 'LifecycleStage',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter lifecyclestage',
            ],
        ]);

        $builder->add('listPrice', TextType::class, [
            'label' => 'ListPrice',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter listprice',
            ],
        ]);

        $builder->add('manufacturer', EntityType::class, [
            'label' => 'Manufacturer',
            'required' => false,
            'class' => Company::class,
            'choice_label' => '__toString',
            'multiple' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('marginPercentage', TextType::class, [
            'label' => 'MarginPercentage',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter marginpercentage',
            ],
        ]);

        $builder->add('maximumDiscount', TextType::class, [
            'label' => 'MaximumDiscount',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter maximumdiscount',
            ],
        ]);

        $builder->add('minimumPrice', TextType::class, [
            'label' => 'MinimumPrice',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter minimumprice',
            ],
        ]);

        $builder->add('productCode', TextType::class, [
            'label' => 'ProductCode',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter productcode',
            ],
        ]);

        $builder->add('productLine', EntityType::class, [
            'label' => 'ProductLine',
            'required' => false,
            'class' => ProductLine::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('productType', IntegerType::class, [
            'label' => 'ProductType',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('purchasable', CheckboxType::class, [
            'label' => 'Purchasable',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('recurringFee', TextType::class, [
            'label' => 'RecurringFee',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter recurringfee',
            ],
        ]);

        $builder->add('relatedFrom', EntityType::class, [
            'label' => 'RelatedFrom',
            'required' => false,
            'class' => Product::class,
            'choice_label' => '__toString',
            'multiple' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('relatedTo', EntityType::class, [
            'label' => 'RelatedTo',
            'required' => false,
            'class' => Product::class,
            'choice_label' => '__toString',
            'multiple' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('requiresApproval', CheckboxType::class, [
            'label' => 'RequiresApproval',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('reservedQuantity', IntegerType::class, [
            'label' => 'ReservedQuantity',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('sellable', CheckboxType::class, [
            'label' => 'Sellable',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('setupFee', TextType::class, [
            'label' => 'SetupFee',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter setupfee',
            ],
        ]);

        $builder->add('shortDescription', TextareaType::class, [
            'label' => 'ShortDescription',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter shortdescription',
            ],
        ]);

        $builder->add('specifications', TextareaType::class, [
            'label' => 'Specifications',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter specifications',
            ],
        ]);

        $builder->add('stockQuantity', IntegerType::class, [
            'label' => 'StockQuantity',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('subscription', CheckboxType::class, [
            'label' => 'Subscription',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('subscriptionPeriod', TextType::class, [
            'label' => 'SubscriptionPeriod',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter subscriptionperiod',
            ],
        ]);

        $builder->add('substituteFrom', EntityType::class, [
            'label' => 'SubstituteFrom',
            'required' => false,
            'class' => Product::class,
            'choice_label' => '__toString',
            'multiple' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('substituteTo', EntityType::class, [
            'label' => 'SubstituteTo',
            'required' => false,
            'class' => Product::class,
            'choice_label' => '__toString',
            'multiple' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('supplier', EntityType::class, [
            'label' => 'Supplier',
            'required' => false,
            'class' => Company::class,
            'choice_label' => '__toString',
            'multiple' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('supportPeriod', IntegerType::class, [
            'label' => 'SupportPeriod',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('tags', EntityType::class, [
            'label' => 'Tags',
            'required' => false,
            'class' => Tag::class,
            'choice_label' => '__toString',
            'multiple' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('taxCategory', EntityType::class, [
            'label' => 'TaxCategory',
            'required' => false,
            'class' => TaxCategory::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('unitOfMeasure', TextType::class, [
            'label' => 'UnitOfMeasure',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter unitofmeasure',
            ],
        ]);

        $builder->add('warrantyPeriod', IntegerType::class, [
            'label' => 'WarrantyPeriod',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('weight', TextType::class, [
            'label' => 'Weight',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter weight',
            ],
        ]);

    }

    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setDefaults([
            'data_class' => Product::class,
        ]);
    }
}
