<?php

declare(strict_types=1);

namespace App\Form\Generated;

use App\Entity\CalendarExternalLink;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\Form\Extension\Core\Type\EnumType;
use Symfony\Component\Form\Extension\Core\Type\CheckboxType;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\Form\Extension\Core\Type\IntegerType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Contracts\Translation\TranslatorInterface;

/**
 * Generated Base Form for CalendarExternalLink
 *
 * ⚠️ WARNING: This file is ALWAYS regenerated by Genmax
 * DO NOT EDIT THIS FILE - Edit CalendarExternalLinkType instead
 *
 * @generated by Genmax
 * @codeCoverageIgnore
 */
abstract class CalendarExternalLinkTypeGenerated extends AbstractType
{
    public function __construct(
        protected readonly TranslatorInterface $translator
    ) {}

    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $builder->add('name', TextType::class, [
            'label' => 'Connection Name',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter connection name',
            ],
        ]);

        $builder->add('calendars', EntityType::class, [
            'label' => 'Calendars',
            'required' => false,
            'entry_type' => App\Form\CalendarType::class,
            'entry_options' => [
                'label' => false,
            ],
            'allow_add' => true,
            'allow_delete' => true,
            'by_reference' => false,
            'prototype' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
            'constraints' => [
                new \Symfony\Component\Validator\Constraints\Count(['min' => 1]),
            ],
        ]);

        $builder->add('externalProvider', EnumType::class, [
            'label' => 'External Provider',
            'required' => true,
            'class' => App\Enum\CalendarProviderEnum::class,
            'choice_label' => 'getLabel',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('active', CheckboxType::class, [
            'label' => 'Active',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('url', TextType::class, [
            'label' => 'Calendar URL',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter calendar url',
            ],
        ]);

        $builder->add('syncDirection', ChoiceType::class, [
            'label' => 'Sync Direction',
            'required' => true,
            'class' => App\Enum\SyncdirectionEnum::class,
            'choice_label' => 'getLabel',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('syncIntervalMinutes', IntegerType::class, [
            'label' => 'Sync Interval (Minutes)',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('scopes', TextareaType::class, [
            'label' => 'OAuth Scopes',
            'required' => false,
            'attr' => [
                'rows' => '3',
                'class' => 'font-monospace',
            ],
        ]);

        $builder->add('metadata', TextareaType::class, [
            'label' => 'Provider Metadata',
            'required' => false,
            'attr' => [
                'rows' => '5',
                'class' => 'font-monospace',
            ],
        ]);

        $builder->add('user', EntityType::class, [
            'label' => 'User',
            'required' => true,
            'class' => User::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

    }

    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setDefaults([
            'data_class' => CalendarExternalLink::class,
        ]);
    }
}
