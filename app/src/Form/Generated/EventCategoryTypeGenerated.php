<?php

declare(strict_types=1);

namespace App\Form\Generated;

use App\Entity\EventCategory;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\ColorType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Component\Form\Extension\Core\Type\CheckboxType;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\Form\Extension\Core\Type\IntegerType;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Contracts\Translation\TranslatorInterface;

/**
 * Generated Base Form for EventCategory
 *
 * ⚠️ WARNING: This file is ALWAYS regenerated by Genmax
 * DO NOT EDIT THIS FILE - Edit EventCategoryType instead
 *
 * @generated by Genmax
 * @codeCoverageIgnore
 */
abstract class EventCategoryTypeGenerated extends AbstractType
{
    public function __construct(
        protected readonly TranslatorInterface $translator
    ) {}

    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $builder->add('name', TextType::class, [
            'label' => 'Name',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter name',
            ],
        ]);

        $builder->add('color', ColorType::class, [
            'label' => 'Color',
            'required' => true,
            'help' => 'Choose a color to represent this category in calendar views',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('description', TextareaType::class, [
            'label' => 'Description',
            'required' => false,
            'help' => 'Describe the purpose and use of this category',
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter description',
            ],
        ]);

        $builder->add('icon', TextType::class, [
            'label' => 'Icon',
            'required' => true,
            'help' => 'Bootstrap icon class to display with this category',
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter icon',
            ],
        ]);

        $builder->add('default', CheckboxType::class, [
            'label' => 'Default Category',
            'required' => true,
            'help' => 'Default category is auto-selected when creating new events',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('eventType', ChoiceType::class, [
            'label' => 'Event Type',
            'required' => false,
            'help' => 'Categorize by event type for better organization',
            'attr' => [
                'class' => 'form-input-modern',
            ],
            'choices' => [
                'call' => 'Call',
                'task' => 'Task',
                'other' => 'Other',
                'meeting' => 'Meeting',
                'deadline' => 'Deadline',
                'follow_up' => 'Follow Up',
                'appointment' => 'Appointment',
            ],
        ]);

        $builder->add('sortOrder', IntegerType::class, [
            'label' => 'Sort Order',
            'required' => true,
            'help' => 'Lower numbers appear first in lists',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('allowMultiple', CheckboxType::class, [
            'label' => 'Allow Multiple',
            'required' => true,
            'help' => 'Allow events to be assigned to multiple categories of this type',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('active', CheckboxType::class, [
            'label' => 'Active',
            'required' => true,
            'help' => 'Inactive categories are hidden from selection',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('events', EntityType::class, [
            'label' => 'Events',
            'required' => false,
            'class' => Event::class,
            'choice_label' => '__toString',
            'multiple' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

    }

    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setDefaults([
            'data_class' => EventCategory::class,
        ]);
    }
}
