<?php

declare(strict_types=1);

namespace App\Form\Generated;

use App\Entity\EventResourceBooking;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Form\Extension\Core\Type\DateTimeType;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\Form\Extension\Core\Type\CheckboxType;
use Symfony\Component\Form\Extension\Core\Type\MoneyType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Component\Form\Extension\Core\Type\IntegerType;
use Symfony\Contracts\Translation\TranslatorInterface;

/**
 * Generated Base Form for EventResourceBooking
 *
 * ⚠️ WARNING: This file is ALWAYS regenerated by Genmax
 * DO NOT EDIT THIS FILE - Edit EventResourceBookingType instead
 *
 * @generated by Genmax
 * @codeCoverageIgnore
 */
abstract class EventResourceBookingTypeGenerated extends AbstractType
{
    public function __construct(
        protected readonly TranslatorInterface $translator
    ) {}

    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $builder->add('startTime', DateTimeType::class, [
            'label' => 'Start Time',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('bookedBy', EntityType::class, [
            'label' => 'Booked By',
            'required' => false,
            'class' => User::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('endTime', DateTimeType::class, [
            'label' => 'End Time',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('confirmed', CheckboxType::class, [
            'label' => 'Confirmed',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('cancelled', CheckboxType::class, [
            'label' => 'Cancelled',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('paid', CheckboxType::class, [
            'label' => 'Paid',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('depositAmount', MoneyType::class, [
            'label' => 'Deposit Amount',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('totalAmount', MoneyType::class, [
            'label' => 'Total Amount',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('cancellationReason', TextareaType::class, [
            'label' => 'Cancellation Reason',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter cancellation reason',
            ],
        ]);

        $builder->add('event', EntityType::class, [
            'label' => 'Event',
            'required' => false,
            'class' => Event::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('notes', TextareaType::class, [
            'label' => 'Notes',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter notes',
            ],
        ]);

        $builder->add('quantity', IntegerType::class, [
            'label' => 'Quantity',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('resource', EntityType::class, [
            'label' => 'Resource',
            'required' => false,
            'class' => EventResource::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('status', IntegerType::class, [
            'label' => 'Status',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

    }

    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setDefaults([
            'data_class' => EventResourceBooking::class,
        ]);
    }
}
