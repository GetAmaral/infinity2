<?php

declare(strict_types=1);

namespace App\Form\Generated;

use App\Entity\Company;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\Form\Extension\Core\Type\NumberType;
use Symfony\Component\Form\Extension\Core\Type\DateType;
use Symfony\Component\Form\Extension\Core\Type\CheckboxType;
use Symfony\Component\Form\Extension\Core\Type\IntegerType;
use Symfony\Contracts\Translation\TranslatorInterface;

/**
 * Generated Base Form for Company
 *
 * ⚠️ WARNING: This file is ALWAYS regenerated by Genmax
 * DO NOT EDIT THIS FILE - Edit CompanyType instead
 *
 * @generated by Genmax
 * @codeCoverageIgnore
 */
abstract class CompanyTypeGenerated extends AbstractType
{
    public function __construct(
        protected readonly TranslatorInterface $translator
    ) {}

    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $builder->add('name', TextType::class, [
            'label' => 'Name',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter name',
            ],
        ]);

        $builder->add('description', TextareaType::class, [
            'label' => 'Description',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter description',
            ],
        ]);

        $builder->add('industry', TextType::class, [
            'label' => 'Industry',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter industry',
            ],
        ]);

        $builder->add('accountManager', EntityType::class, [
            'label' => 'AccountManager',
            'required' => false,
            'class' => User::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('website', TextType::class, [
            'label' => 'Website',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter website',
            ],
        ]);

        $builder->add('billingAddress', TextType::class, [
            'label' => 'Address',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter address',
            ],
        ]);

        $builder->add('legalName', TextType::class, [
            'label' => 'Legal Name',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter legal name',
            ],
        ]);

        $builder->add('shippingAddress', TextType::class, [
            'label' => 'Shipping Address',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter shipping address',
            ],
        ]);

        $builder->add('shippingCity', EntityType::class, [
            'label' => 'Shipping City',
            'required' => false,
            'class' => City::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('campaigns', EntityType::class, [
            'label' => 'Campaigns',
            'required' => false,
            'class' => Campaign::class,
            'choice_label' => '__toString',
            'multiple' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('shippingPostalCode', TextType::class, [
            'label' => 'Shipping Postal Code',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter shipping postal code',
            ],
        ]);

        $builder->add('annualRevenue', NumberType::class, [
            'label' => 'Annual Revenue',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('currency', TextType::class, [
            'label' => 'Currency',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter currency',
            ],
        ]);

        $builder->add('companyType', TextType::class, [
            'label' => 'Company Type',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter company type',
            ],
        ]);

        $builder->add('parentCompany', EntityType::class, [
            'label' => 'Parent Company',
            'required' => false,
            'class' => Company::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('accountSource', TextType::class, [
            'label' => 'Account Source',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter account source',
            ],
        ]);

        $builder->add('rating', TextType::class, [
            'label' => 'Rating',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter rating',
            ],
        ]);

        $builder->add('customerSince', DateType::class, [
            'label' => 'Customer Since',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('paymentTerms', TextType::class, [
            'label' => 'Payment Terms',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter payment terms',
            ],
        ]);

        $builder->add('creditLimit', NumberType::class, [
            'label' => 'Credit Limit',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('fiscalYearEnd', TextType::class, [
            'label' => 'Fiscal Year End',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter fiscal year end',
            ],
        ]);

        $builder->add('city', EntityType::class, [
            'label' => 'City',
            'required' => false,
            'class' => City::class,
            'choice_label' => '__toString',
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('sicCode', TextType::class, [
            'label' => 'SIC Code',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter sic code',
            ],
        ]);

        $builder->add('naicsCode', TextType::class, [
            'label' => 'NAICS Code',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter naics code',
            ],
        ]);

        $builder->add('ownership', TextType::class, [
            'label' => 'Ownership',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter ownership',
            ],
        ]);

        $builder->add('tickerSymbol', TextType::class, [
            'label' => 'Ticker Symbol',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter ticker symbol',
            ],
        ]);

        $builder->add('linkedInUrl', TextType::class, [
            'label' => 'LinkedIn URL',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter linkedin url',
            ],
        ]);

        $builder->add('doNotContact', CheckboxType::class, [
            'label' => 'Do Not Contact',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('gdprConsent', CheckboxType::class, [
            'label' => 'GDPR Consent',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('country', TextType::class, [
            'label' => 'Country',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter country',
            ],
        ]);

        $builder->add('shippingCountry', TextType::class, [
            'label' => 'Shipping Country',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter shipping country',
            ],
        ]);

        $builder->add('companySize', IntegerType::class, [
            'label' => 'Number of Employees',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('fax', TextType::class, [
            'label' => 'Fax',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter fax',
            ],
        ]);

        $builder->add('contacts', EntityType::class, [
            'label' => 'Contacts',
            'required' => false,
            'entry_type' => App\Form\ContactType::class,
            'entry_options' => [
                'label' => false,
            ],
            'allow_add' => true,
            'allow_delete' => true,
            'by_reference' => false,
            'prototype' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
            'constraints' => [
                new \Symfony\Component\Validator\Constraints\Count(['min' => 1]),
            ],
        ]);

        $builder->add('coordinates', TextType::class, [
            'label' => 'Geo',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter geo',
            ],
        ]);

        $builder->add('deals', EntityType::class, [
            'label' => 'Deals',
            'required' => false,
            'entry_type' => App\Form\DealType::class,
            'entry_options' => [
                'label' => false,
            ],
            'allow_add' => true,
            'allow_delete' => true,
            'by_reference' => false,
            'prototype' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
            'constraints' => [
                new \Symfony\Component\Validator\Constraints\Count(['min' => 1]),
            ],
        ]);

        $builder->add('email', TextType::class, [
            'label' => 'Email',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter email',
            ],
        ]);

        $builder->add('manufacturedBrands', EntityType::class, [
            'label' => 'ManufacturedBrands',
            'required' => false,
            'class' => Brand::class,
            'choice_label' => '__toString',
            'multiple' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('manufacturedProducts', EntityType::class, [
            'label' => 'ManufacturedProducts',
            'required' => false,
            'class' => Product::class,
            'choice_label' => '__toString',
            'multiple' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('mobilePhone', TextType::class, [
            'label' => 'CelPhone',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter celphone',
            ],
        ]);

        $builder->add('notes', TextareaType::class, [
            'label' => 'Notes',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter notes',
            ],
        ]);

        $builder->add('phone', TextType::class, [
            'label' => 'BusinesPhone',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter businesphone',
            ],
        ]);

        $builder->add('postalCode', TextType::class, [
            'label' => 'PostalCode',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter postalcode',
            ],
        ]);

        $builder->add('primaryContactName', TextType::class, [
            'label' => 'ContactName',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter contactname',
            ],
        ]);

        $builder->add('socialMedias', EntityType::class, [
            'label' => 'SocialMedias',
            'required' => false,
            'entry_type' => App\Form\SocialMediaType::class,
            'entry_options' => [
                'label' => false,
            ],
            'allow_add' => true,
            'allow_delete' => true,
            'by_reference' => false,
            'prototype' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
            'constraints' => [
                new \Symfony\Component\Validator\Constraints\Count(['min' => 1]),
            ],
        ]);

        $builder->add('status', IntegerType::class, [
            'label' => 'Status',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('suppliedBrands', EntityType::class, [
            'label' => 'SuppliedBrands',
            'required' => false,
            'class' => Brand::class,
            'choice_label' => '__toString',
            'multiple' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('suppliedProducts', EntityType::class, [
            'label' => 'SuppliedProducts',
            'required' => false,
            'class' => Product::class,
            'choice_label' => '__toString',
            'multiple' => true,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('taxId', TextType::class, [
            'label' => 'Document',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter document',
            ],
        ]);

        $builder->add('nextActivityDate', DateType::class, [
            'label' => 'Next Activity Date',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('timeZone', TextType::class, [
            'label' => 'Time Zone',
            'required' => true,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter time zone',
            ],
        ]);

        $builder->add('stateProvince', TextType::class, [
            'label' => 'State/Province',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter state/province',
            ],
        ]);

        $builder->add('tags', TextareaType::class, [
            'label' => 'Tags',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter tags',
            ],
        ]);

        $builder->add('lifecycleStage', TextType::class, [
            'label' => 'Lifecycle Stage',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter lifecycle stage',
            ],
        ]);

        $builder->add('companyDomain', TextType::class, [
            'label' => 'Company Domain',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter company domain',
            ],
        ]);

        $builder->add('leadStatus', TextType::class, [
            'label' => 'Lead Status',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter lead status',
            ],
        ]);

        $builder->add('public', CheckboxType::class, [
            'label' => 'Public Company',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
            ],
        ]);

        $builder->add('shippingStateProvince', TextType::class, [
            'label' => 'Shipping State/Province',
            'required' => false,
            'attr' => [
                'class' => 'form-input-modern',
                'placeholder' => 'Enter shipping state/province',
            ],
        ]);

    }

    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setDefaults([
            'data_class' => Company::class,
        ]);
    }
}
