<?php

declare(strict_types=1);

namespace App\Controller\Generated;

use App\Entity\AgentType;
use App\Form\AgentTypeType;
use App\Repository\AgentTypeRepository;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Attribute\Route;
use Symfony\Component\Security\Http\Attribute\IsGranted;

/**
 * AgentType Controller (Generated Base Class)
 *
 * This class is ALWAYS regenerated from CSV. DO NOT edit this file.
 * Add custom actions to AgentTypeController.php instead.
 *
 * @generated by Luminai Code Generator
 */
#[Route('/agent-type')]
abstract class AgentTypeControllerGenerated extends AbstractController
{
    public function __construct(
        protected readonly AgentTypeRepository $repository
    ) {}

    /**
     * List all AgentTypes
     */
    #[Route('', name: 'agent_type_index', methods: ['GET'])]
        #[IsGranted('ROLE_SUPER_ADMIN')]
    public function index(Request $request): Response
    {
        $page = max(1, $request->query->getInt('page', 1));
        $search = $request->query->get('search', '');

        $agenttypes = $this->repository->findPaginated($page, 30);
        $total = $this->repository->count();

        return $this->render('agenttype/index.html.twig', [
            'agenttypes' => $agenttypes,
            'total' => $total,
            'page' => $page,
            'pages' => ceil($total / 30),
            'search' => $search,
        ]);
    }

    /**
     * Show AgentType details
     */
    #[Route('/{id}', name: 'agent_type_show', methods: ['GET'])]
        #[IsGranted('ROLE_SUPER_ADMIN')]
    public function show(AgentType $agenttype): Response
    {

        return $this->render('agenttype/show.html.twig', [
            'agenttype' => $agenttype,
        ]);
    }

    /**
     * Create new AgentType
     */
    #[Route('/new', name: 'agent_type_new', methods: ['GET', 'POST'])]
        #[IsGranted('ROLE_SUPER_ADMIN')]
    public function new(Request $request): Response
    {
        $agenttype = new AgentType();

        $form = $this->createForm(AgentTypeType::class, $agenttype);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $this->repository->save($agenttype, true);

            $this->addFlash('success', 'AgentType created successfully.');

            return $this->redirectToRoute('agent_type_index');
        }

        return $this->render('agenttype/form.html.twig', [
            'agenttype' => $agenttype,
            'form' => $form,
            'is_edit' => false,
        ]);
    }

    /**
     * Edit AgentType
     */
    #[Route('/{id}/edit', name: 'agent_type_edit', methods: ['GET', 'POST'])]
        #[IsGranted('ROLE_SUPER_ADMIN')]
    public function edit(Request $request, AgentType $agenttype): Response
    {

        $form = $this->createForm(AgentTypeType::class, $agenttype);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $this->repository->save($agenttype, true);

            $this->addFlash('success', 'AgentType updated successfully.');

            return $this->redirectToRoute('agent_type_index');
        }

        return $this->render('agenttype/form.html.twig', [
            'agenttype' => $agenttype,
            'form' => $form,
            'is_edit' => true,
        ]);
    }

    /**
     * Delete AgentType
     */
    #[Route('/{id}', name: 'agent_type_delete', methods: ['POST'])]
        #[IsGranted('ROLE_SUPER_ADMIN')]
    public function delete(Request $request, AgentType $agenttype): Response
    {

        if ($this->isCsrfTokenValid('delete_agent_type_' . $agenttype->getId(), $request->request->get('_token'))) {
            $this->repository->remove($agenttype, true);

            $this->addFlash('success', 'AgentType deleted successfully.');
        }

        return $this->redirectToRoute('agent_type_index');
    }
}
