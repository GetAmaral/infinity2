<?php

declare(strict_types=1);

namespace App\Controller\Generated;

use App\Controller\Base\BaseApiController;
use App\Entity\Company;
use App\Repository\CompanyRepository;
use App\Security\Voter\CompanyVoter;
use App\Form\CompanyFormType;
use App\Service\ListPreferencesService;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\Security\Csrf\CsrfToken;
use Symfony\Component\Security\Csrf\CsrfTokenManagerInterface;
use Symfony\Component\Security\Core\Exception\InvalidCsrfTokenException;
use Symfony\Contracts\Translation\TranslatorInterface;

/**
 * Generated Base Controller for Company
 *
 * ⚠️ WARNING: This file is ALWAYS regenerated by Genmax
 * DO NOT EDIT THIS FILE - Edit CompanyController instead
 *
 * @generated
 * @codeCoverageIgnore
 */
abstract class CompanyControllerGenerated extends BaseApiController
{
    public function __construct(
        protected readonly EntityManagerInterface $entityManager,
        protected readonly CompanyRepository $repository,
        protected readonly ListPreferencesService $listPreferencesService,
        protected readonly TranslatorInterface $translator,
        protected readonly CsrfTokenManagerInterface $csrfTokenManager,
    ) {}

    // ====================================
    // ABSTRACT METHOD IMPLEMENTATIONS
    // ====================================

    /**
     * Get the repository for this entity
     */
    protected function getRepository(): CompanyRepository
    {
        return $this->repository;
    }

    /**
     * Get the plural name for this entity
     */
    protected function getEntityPluralName(): string
    {
        return 'nies';
    }

    /**
     * Convert entity to array for API responses
     *
     * ⚠️ IMPORTANT: Enum Properties Stored as Strings
     * -------------------------------------------------
     * Properties with enum-backed types (like InputType) are stored as STRINGS
     * in the database and getters return strings directly, NOT enum objects.
     *
     * ❌ WRONG:   $entity->getType()->value   (Error: "Attempt to read property 'value' on string")
     * ✅ CORRECT: $entity->getType()          (Already a string - 'fully_completed')
     *
     * If you need the enum object for business logic, use:
     *    InputType::from($entity->getType())
     */
    protected function entityToArray(object $entity): array
    {
        if (!$entity instanceof Company) {
            throw new \InvalidArgumentException('Expected Company instance');
        }

        return [
            'id' => $entity->getId()->toString(),
            'organization' => ($organizationRel = $entity->getOrganization()) ? [
                'id' => $organizationRel->getId()->toString(),
                'display' => (string) $organizationRel,
            ] : null,
            'name' => $entity->getName(),
            'description' => $entity->getDescription(),
            'industry' => $entity->getIndustry(),
            'accountManager' => ($accountManagerRel = $entity->getAccountManager()) ? [
                'id' => $accountManagerRel->getId()->toString(),
                'display' => (string) $accountManagerRel,
            ] : null,
            'website' => $entity->getWebsite(),
            'billingAddress' => $entity->getBillingAddress(),
            'legalName' => $entity->getLegalName(),
            'shippingAddress' => $entity->getShippingAddress(),
            'shippingCity' => ($shippingCityRel = $entity->getShippingCity()) ? [
                'id' => $shippingCityRel->getId()->toString(),
                'display' => (string) $shippingCityRel,
            ] : null,
            'campaigns' => ($campaignsRel = $entity->getCampaigns()) ? [
                'id' => $campaignsRel->getId()->toString(),
                'display' => (string) $campaignsRel,
            ] : null,
            'shippingPostalCode' => $entity->getShippingPostalCode(),
            'annualRevenue' => $entity->getAnnualRevenue(),
            'currency' => $entity->getCurrency(),
            'companyType' => $entity->getCompanyType(),
            'parentCompany' => ($parentCompanyRel = $entity->getParentCompany()) ? [
                'id' => $parentCompanyRel->getId()->toString(),
                'display' => (string) $parentCompanyRel,
            ] : null,
            'accountSource' => $entity->getAccountSource(),
            'rating' => $entity->getRating(),
            'customerSince' => $entity->getCustomerSince()?->format('M d, Y'),
            'paymentTerms' => $entity->getPaymentTerms(),
            'creditLimit' => $entity->getCreditLimit(),
            'fiscalYearEnd' => $entity->getFiscalYearEnd(),
            'city' => ($cityRel = $entity->getCity()) ? [
                'id' => $cityRel->getId()->toString(),
                'display' => (string) $cityRel,
            ] : null,
            'sicCode' => $entity->getSicCode(),
            'naicsCode' => $entity->getNaicsCode(),
            'ownership' => $entity->getOwnership(),
            'tickerSymbol' => $entity->getTickerSymbol(),
            'linkedInUrl' => $entity->getLinkedInUrl(),
            'doNotContact' => $entity->getDoNotContact(),
            'gdprConsent' => $entity->getGdprConsent(),
            'country' => $entity->getCountry(),
            'shippingCountry' => $entity->getShippingCountry(),
            'companySize' => $entity->getCompanySize(),
            'fax' => $entity->getFax(),
            'contacts' => ($contactsRel = $entity->getContacts()) ? [
                'id' => $contactsRel->getId()->toString(),
                'display' => (string) $contactsRel,
            ] : null,
            'coordinates' => $entity->getCoordinates(),
            'deals' => ($dealsRel = $entity->getDeals()) ? [
                'id' => $dealsRel->getId()->toString(),
                'display' => (string) $dealsRel,
            ] : null,
            'email' => $entity->getEmail(),
            'talks' => ($talksRel = $entity->getTalks()) ? [
                'id' => $talksRel->getId()->toString(),
                'display' => (string) $talksRel,
            ] : null,
            'manufacturedBrands' => ($manufacturedBrandsRel = $entity->getManufacturedBrands()) ? [
                'id' => $manufacturedBrandsRel->getId()->toString(),
                'display' => (string) $manufacturedBrandsRel,
            ] : null,
            'manufacturedProducts' => ($manufacturedProductsRel = $entity->getManufacturedProducts()) ? [
                'id' => $manufacturedProductsRel->getId()->toString(),
                'display' => (string) $manufacturedProductsRel,
            ] : null,
            'mobilePhone' => $entity->getMobilePhone(),
            'notes' => $entity->getNotes(),
            'phone' => $entity->getPhone(),
            'postalCode' => $entity->getPostalCode(),
            'primaryContactName' => $entity->getPrimaryContactName(),
            'socialMedias' => ($socialMediasRel = $entity->getSocialMedias()) ? [
                'id' => $socialMediasRel->getId()->toString(),
                'display' => (string) $socialMediasRel,
            ] : null,
            'status' => $entity->getStatus(),
            'suppliedBrands' => ($suppliedBrandsRel = $entity->getSuppliedBrands()) ? [
                'id' => $suppliedBrandsRel->getId()->toString(),
                'display' => (string) $suppliedBrandsRel,
            ] : null,
            'suppliedProducts' => ($suppliedProductsRel = $entity->getSuppliedProducts()) ? [
                'id' => $suppliedProductsRel->getId()->toString(),
                'display' => (string) $suppliedProductsRel,
            ] : null,
            'taxId' => $entity->getTaxId(),
            'nextActivityDate' => $entity->getNextActivityDate()?->format('M d, Y'),
            'lastActivityDate' => $entity->getLastActivityDate()?->format('M d, Y'),
            'timeZone' => $entity->getTimeZone(),
            'stateProvince' => $entity->getStateProvince(),
            'tags' => $entity->getTags(),
            'lifecycleStage' => $entity->getLifecycleStage(),
            'companyDomain' => $entity->getCompanyDomain(),
            'leadStatus' => $entity->getLeadStatus(),
            'numberOfAssociatedDeals' => $entity->getNumberOfAssociatedDeals(),
            'numberOfAssociatedContacts' => $entity->getNumberOfAssociatedContacts(),
            'public' => $entity->getPublic(),
            'shippingStateProvince' => $entity->getShippingStateProvince(),
        ];
    }

    // ====================================
    // INDEX ACTION - List all nies
    // ====================================

    /**
     * List nies
     */
    protected function indexAction(): Response
    {
        $this->denyAccessUnlessGranted(CompanyVoter::LIST);

        $preferences = $this->listPreferencesService->getEntityPreferences('nies');
        $savedView = $preferences['view'] ?? 'grid';

        return $this->render('company/index.html.twig', [
            'entities' => [],  // Loaded via API
            'entity_name' => 'company',
            'entity_name_plural' => 'nies',
            'page_icon' => 'bi-building',
            'default_view' => $savedView,

            // List configuration from GeneratorProperty
            'enable_search' => true,
            'enable_filters' => true,
            'enable_sorting' => true,
            'enable_create_button' => true,

            // Property metadata for client-side rendering (as JSON strings)
            'list_fields' => '[{"name":"name","label":"Name","type":"string","sortable":true,"searchable":true,"filterable":false,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getName"},{"name":"description","label":"Description","type":"text","sortable":false,"searchable":true,"filterable":false,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getDescription"},{"name":"industry","label":"Industry","type":"string","sortable":true,"searchable":true,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getIndustry"},{"name":"accountManager","label":"AccountManager","type":"","sortable":true,"searchable":false,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getAccountManager"},{"name":"website","label":"Website","type":"string","sortable":true,"searchable":true,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getWebsite"},{"name":"billingAddress","label":"Address","type":"string","sortable":true,"searchable":true,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getBillingAddress"},{"name":"legalName","label":"Legal Name","type":"string","sortable":true,"searchable":true,"filterable":false,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getLegalName"},{"name":"shippingAddress","label":"Shipping Address","type":"string","sortable":true,"searchable":true,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getShippingAddress"},{"name":"shippingCity","label":"Shipping City","type":"","sortable":true,"searchable":false,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getShippingCity"},{"name":"campaigns","label":"Campaigns","type":"","sortable":true,"searchable":false,"filterable":false,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getCampaigns"},{"name":"shippingPostalCode","label":"Shipping Postal Code","type":"string","sortable":true,"searchable":true,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getShippingPostalCode"},{"name":"annualRevenue","label":"Annual Revenue","type":"decimal","sortable":true,"searchable":false,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getAnnualRevenue"},{"name":"currency","label":"Currency","type":"string","sortable":true,"searchable":false,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getCurrency"},{"name":"companyType","label":"Company Type","type":"string","sortable":true,"searchable":true,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getCompanyType"},{"name":"parentCompany","label":"Parent Company","type":"","sortable":true,"searchable":false,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getParentCompany"},{"name":"accountSource","label":"Account Source","type":"string","sortable":true,"searchable":true,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getAccountSource"},{"name":"rating","label":"Rating","type":"string","sortable":true,"searchable":true,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getRating"},{"name":"customerSince","label":"Customer Since","type":"date","sortable":true,"searchable":false,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getCustomerSince"},{"name":"paymentTerms","label":"Payment Terms","type":"string","sortable":true,"searchable":true,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getPaymentTerms"},{"name":"creditLimit","label":"Credit Limit","type":"decimal","sortable":true,"searchable":false,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getCreditLimit"},{"name":"fiscalYearEnd","label":"Fiscal Year End","type":"string","sortable":true,"searchable":true,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getFiscalYearEnd"},{"name":"city","label":"City","type":"","sortable":true,"searchable":false,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getCity"},{"name":"sicCode","label":"SIC Code","type":"string","sortable":true,"searchable":true,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getSicCode"},{"name":"naicsCode","label":"NAICS Code","type":"string","sortable":true,"searchable":true,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getNaicsCode"},{"name":"ownership","label":"Ownership","type":"string","sortable":true,"searchable":true,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getOwnership"},{"name":"tickerSymbol","label":"Ticker Symbol","type":"string","sortable":true,"searchable":true,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getTickerSymbol"},{"name":"linkedInUrl","label":"LinkedIn URL","type":"string","sortable":false,"searchable":true,"filterable":false,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getLinkedInUrl"},{"name":"doNotContact","label":"Do Not Contact","type":"boolean","sortable":true,"searchable":false,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getDoNotContact"},{"name":"gdprConsent","label":"GDPR Consent","type":"boolean","sortable":true,"searchable":false,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getGdprConsent"},{"name":"country","label":"Country","type":"string","sortable":true,"searchable":true,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getCountry"},{"name":"shippingCountry","label":"Shipping Country","type":"string","sortable":true,"searchable":true,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getShippingCountry"},{"name":"companySize","label":"Number of Employees","type":"integer","sortable":true,"searchable":false,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getCompanySize"},{"name":"fax","label":"Fax","type":"string","sortable":false,"searchable":true,"filterable":false,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getFax"},{"name":"contacts","label":"Contacts","type":"","sortable":true,"searchable":false,"filterable":false,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getContacts"},{"name":"coordinates","label":"Geo","type":"string","sortable":true,"searchable":true,"filterable":false,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getCoordinates"},{"name":"deals","label":"Deals","type":"","sortable":true,"searchable":false,"filterable":false,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getDeals"},{"name":"email","label":"Email","type":"string","sortable":true,"searchable":true,"filterable":false,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getEmail"},{"name":"manufacturedBrands","label":"ManufacturedBrands","type":"","sortable":true,"searchable":false,"filterable":false,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getManufacturedBrands"},{"name":"manufacturedProducts","label":"ManufacturedProducts","type":"","sortable":true,"searchable":false,"filterable":false,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getManufacturedProducts"},{"name":"mobilePhone","label":"CelPhone","type":"string","sortable":true,"searchable":true,"filterable":false,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getMobilePhone"},{"name":"notes","label":"Notes","type":"text","sortable":false,"searchable":true,"filterable":false,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getNotes"},{"name":"phone","label":"BusinesPhone","type":"string","sortable":true,"searchable":true,"filterable":false,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getPhone"},{"name":"postalCode","label":"PostalCode","type":"string","sortable":true,"searchable":true,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getPostalCode"},{"name":"primaryContactName","label":"ContactName","type":"string","sortable":true,"searchable":true,"filterable":false,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getPrimaryContactName"},{"name":"socialMedias","label":"SocialMedias","type":"","sortable":true,"searchable":false,"filterable":false,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getSocialMedias"},{"name":"status","label":"Status","type":"integer","sortable":true,"searchable":false,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getStatus"},{"name":"suppliedBrands","label":"SuppliedBrands","type":"","sortable":true,"searchable":false,"filterable":false,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getSuppliedBrands"},{"name":"suppliedProducts","label":"SuppliedProducts","type":"","sortable":true,"searchable":false,"filterable":false,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getSuppliedProducts"},{"name":"taxId","label":"Document","type":"string","sortable":true,"searchable":true,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getTaxId"},{"name":"nextActivityDate","label":"Next Activity Date","type":"date","sortable":true,"searchable":false,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getNextActivityDate"},{"name":"lastActivityDate","label":"Last Activity Date","type":"date","sortable":true,"searchable":false,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getLastActivityDate"},{"name":"stateProvince","label":"State\/Province","type":"string","sortable":true,"searchable":true,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getStateProvince"},{"name":"lifecycleStage","label":"Lifecycle Stage","type":"string","sortable":true,"searchable":false,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getLifecycleStage"},{"name":"companyDomain","label":"Company Domain","type":"string","sortable":true,"searchable":true,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getCompanyDomain"},{"name":"leadStatus","label":"Lead Status","type":"string","sortable":true,"searchable":false,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getLeadStatus"},{"name":"numberOfAssociatedDeals","label":"Number of Deals","type":"integer","sortable":true,"searchable":false,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getNumberOfAssociatedDeals"},{"name":"numberOfAssociatedContacts","label":"Number of Contacts","type":"integer","sortable":true,"searchable":false,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getNumberOfAssociatedContacts"},{"name":"public","label":"Public Company","type":"boolean","sortable":true,"searchable":false,"filterable":true,"filterStrategy":null,"filterBoolean":false,"filterDate":false,"filterNumericRange":false,"filterExists":false,"getter":"getPublic"}]',
            'searchable_fields' => '[{"name":"name","label":"Name","type":"string"},{"name":"description","label":"Description","type":"text"},{"name":"industry","label":"Industry","type":"string"},{"name":"website","label":"Website","type":"string"},{"name":"billingAddress","label":"Address","type":"string"},{"name":"legalName","label":"Legal Name","type":"string"},{"name":"shippingAddress","label":"Shipping Address","type":"string"},{"name":"shippingPostalCode","label":"Shipping Postal Code","type":"string"},{"name":"companyType","label":"Company Type","type":"string"},{"name":"accountSource","label":"Account Source","type":"string"},{"name":"rating","label":"Rating","type":"string"},{"name":"paymentTerms","label":"Payment Terms","type":"string"},{"name":"fiscalYearEnd","label":"Fiscal Year End","type":"string"},{"name":"sicCode","label":"SIC Code","type":"string"},{"name":"naicsCode","label":"NAICS Code","type":"string"},{"name":"ownership","label":"Ownership","type":"string"},{"name":"tickerSymbol","label":"Ticker Symbol","type":"string"},{"name":"linkedInUrl","label":"LinkedIn URL","type":"string"},{"name":"country","label":"Country","type":"string"},{"name":"shippingCountry","label":"Shipping Country","type":"string"},{"name":"fax","label":"Fax","type":"string"},{"name":"coordinates","label":"Geo","type":"string"},{"name":"email","label":"Email","type":"string"},{"name":"mobilePhone","label":"CelPhone","type":"string"},{"name":"notes","label":"Notes","type":"text"},{"name":"phone","label":"BusinesPhone","type":"string"},{"name":"postalCode","label":"PostalCode","type":"string"},{"name":"primaryContactName","label":"ContactName","type":"string"},{"name":"taxId","label":"Document","type":"string"},{"name":"stateProvince","label":"State\/Province","type":"string"},{"name":"tags","label":"Tags","type":"string"},{"name":"companyDomain","label":"Company Domain","type":"string"}]',
            'filterable_fields' => '[{"name":"industry","label":"Industry","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"accountManager","label":"AccountManager","type":"","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"website","label":"Website","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"billingAddress","label":"Address","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"shippingAddress","label":"Shipping Address","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"shippingCity","label":"Shipping City","type":"","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"shippingPostalCode","label":"Shipping Postal Code","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"annualRevenue","label":"Annual Revenue","type":"decimal","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"currency","label":"Currency","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"companyType","label":"Company Type","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"parentCompany","label":"Parent Company","type":"","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"accountSource","label":"Account Source","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"rating","label":"Rating","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"customerSince","label":"Customer Since","type":"date","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"paymentTerms","label":"Payment Terms","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"creditLimit","label":"Credit Limit","type":"decimal","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"fiscalYearEnd","label":"Fiscal Year End","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"city","label":"City","type":"","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"sicCode","label":"SIC Code","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"naicsCode","label":"NAICS Code","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"ownership","label":"Ownership","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"tickerSymbol","label":"Ticker Symbol","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"doNotContact","label":"Do Not Contact","type":"boolean","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"gdprConsent","label":"GDPR Consent","type":"boolean","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"country","label":"Country","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"shippingCountry","label":"Shipping Country","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"companySize","label":"Number of Employees","type":"integer","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"postalCode","label":"PostalCode","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"status","label":"Status","type":"integer","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"taxId","label":"Document","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"nextActivityDate","label":"Next Activity Date","type":"date","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"lastActivityDate","label":"Last Activity Date","type":"date","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"timeZone","label":"Time Zone","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"stateProvince","label":"State\/Province","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"lifecycleStage","label":"Lifecycle Stage","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"companyDomain","label":"Company Domain","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"leadStatus","label":"Lead Status","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"numberOfAssociatedDeals","label":"Number of Deals","type":"integer","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"numberOfAssociatedContacts","label":"Number of Contacts","type":"integer","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"public","label":"Public Company","type":"boolean","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false},{"name":"shippingStateProvince","label":"Shipping State\/Province","type":"string","strategy":null,"boolean":false,"date":false,"numericRange":false,"exists":false}]',
            'sortable_fields' => '[{"name":"name","label":"Name"},{"name":"industry","label":"Industry"},{"name":"accountManager","label":"AccountManager"},{"name":"website","label":"Website"},{"name":"billingAddress","label":"Address"},{"name":"legalName","label":"Legal Name"},{"name":"shippingAddress","label":"Shipping Address"},{"name":"shippingCity","label":"Shipping City"},{"name":"campaigns","label":"Campaigns"},{"name":"shippingPostalCode","label":"Shipping Postal Code"},{"name":"annualRevenue","label":"Annual Revenue"},{"name":"currency","label":"Currency"},{"name":"companyType","label":"Company Type"},{"name":"parentCompany","label":"Parent Company"},{"name":"accountSource","label":"Account Source"},{"name":"rating","label":"Rating"},{"name":"customerSince","label":"Customer Since"},{"name":"paymentTerms","label":"Payment Terms"},{"name":"creditLimit","label":"Credit Limit"},{"name":"fiscalYearEnd","label":"Fiscal Year End"},{"name":"city","label":"City"},{"name":"sicCode","label":"SIC Code"},{"name":"naicsCode","label":"NAICS Code"},{"name":"ownership","label":"Ownership"},{"name":"tickerSymbol","label":"Ticker Symbol"},{"name":"doNotContact","label":"Do Not Contact"},{"name":"gdprConsent","label":"GDPR Consent"},{"name":"country","label":"Country"},{"name":"shippingCountry","label":"Shipping Country"},{"name":"companySize","label":"Number of Employees"},{"name":"contacts","label":"Contacts"},{"name":"coordinates","label":"Geo"},{"name":"deals","label":"Deals"},{"name":"email","label":"Email"},{"name":"manufacturedBrands","label":"ManufacturedBrands"},{"name":"manufacturedProducts","label":"ManufacturedProducts"},{"name":"mobilePhone","label":"CelPhone"},{"name":"phone","label":"BusinesPhone"},{"name":"postalCode","label":"PostalCode"},{"name":"primaryContactName","label":"ContactName"},{"name":"socialMedias","label":"SocialMedias"},{"name":"status","label":"Status"},{"name":"suppliedBrands","label":"SuppliedBrands"},{"name":"suppliedProducts","label":"SuppliedProducts"},{"name":"taxId","label":"Document"},{"name":"nextActivityDate","label":"Next Activity Date"},{"name":"lastActivityDate","label":"Last Activity Date"},{"name":"stateProvince","label":"State\/Province"},{"name":"lifecycleStage","label":"Lifecycle Stage"},{"name":"companyDomain","label":"Company Domain"},{"name":"leadStatus","label":"Lead Status"},{"name":"numberOfAssociatedDeals","label":"Number of Deals"},{"name":"numberOfAssociatedContacts","label":"Number of Contacts"},{"name":"public","label":"Public Company"}]',
        ]);
    }

    // ====================================
    // API SEARCH - Fetch nies for list view
    // ====================================

    /**
     * API endpoint for searching nies
     */
    protected function apiSearchAction(Request $request): JsonResponse
    {
        $this->denyAccessUnlessGranted(CompanyVoter::LIST);

        // This method uses the BaseApiController's handleSearchRequest
        // which integrates with API Platform's GetCollection operation
        return $this->handleSearchRequest($request);
    }

    // ====================================
    // NEW FORM ACTION - Display create form
    // ====================================

    /**
     * Display new company form
     */
    protected function newFormAction(Request $request): Response
    {
        $this->denyAccessUnlessGranted(CompanyVoter::CREATE);

        $company = new Company();

        // Initialize with custom logic if needed
        $this->initializeNewEntity($company);

        $form = $this->createForm(CompanyFormType::class, $company);

        return $this->render('company/_form_modal.html.twig', [
            'form' => $form,
            'company' => $company,
            'is_edit' => false,
        ]);
    }

    // ====================================
    // CREATE ACTION - Process create form submission
    // ====================================

    /**
     * Process new company form submission
     */
    protected function createAction(Request $request): Response
    {
        $this->denyAccessUnlessGranted(CompanyVoter::CREATE);

        $company = new Company();

        // Initialize with custom logic if needed
        $this->initializeNewEntity($company);

        $form = $this->createForm(CompanyFormType::class, $company);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            try {
                // Before create hook
                $this->beforeCreate($company);

                $this->entityManager->persist($company);
                $this->entityManager->flush();

                // After create hook
                $this->afterCreate($company);

                $this->addFlash('success', $this->translator->trans(
                    'company.flash.created_successfully',
                    ['%name%' => (string) $company],
                    'company'
                ));

                return $this->redirectToRoute('company_index', [], Response::HTTP_SEE_OTHER);

            } catch (\Exception $e) {
                $this->addFlash('error', $this->translator->trans(
                    'company.flash.create_failed',
                    ['%error%' => $e->getMessage()],
                    'company'
                ));
            }
        }

        // Re-render with errors
        return $this->render('company/_form_modal.html.twig', [
            'form' => $form,
            'company' => $company,
            'is_edit' => false,
        ], new Response('', $form->isSubmitted() ? Response::HTTP_UNPROCESSABLE_ENTITY : Response::HTTP_OK));
    }

    // ====================================
    // EDIT FORM ACTION - Display edit form
    // ====================================

    /**
     * Display edit company form
     */
    protected function editFormAction(Company $company, Request $request): Response
    {
        $this->denyAccessUnlessGranted(CompanyVoter::EDIT, $company);

        $form = $this->createForm(CompanyFormType::class, $company);

        return $this->render('company/_form_modal.html.twig', [
            'form' => $form,
            'company' => $company,
            'is_edit' => true,
        ]);
    }

    // ====================================
    // UPDATE ACTION - Process edit form submission
    // ====================================

    /**
     * Process edit company form submission
     */
    protected function updateAction(Company $company, Request $request): Response
    {
        $this->denyAccessUnlessGranted(CompanyVoter::EDIT, $company);

        $form = $this->createForm(CompanyFormType::class, $company);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            try {
                // Before update hook
                $this->beforeUpdate($company);

                $this->entityManager->flush();

                // After update hook
                $this->afterUpdate($company);

                $this->addFlash('success', $this->translator->trans(
                    'company.flash.updated_successfully',
                    ['%name%' => (string) $company],
                    'company'
                ));

                return $this->redirectToRoute('company_index', [], Response::HTTP_SEE_OTHER);

            } catch (\Exception $e) {
                $this->addFlash('error', $this->translator->trans(
                    'company.flash.update_failed',
                    ['%error%' => $e->getMessage()],
                    'company'
                ));
            }
        }

        // Re-render with errors
        return $this->render('company/_form_modal.html.twig', [
            'form' => $form,
            'company' => $company,
            'is_edit' => true,
        ], new Response('', $form->isSubmitted() ? Response::HTTP_UNPROCESSABLE_ENTITY : Response::HTTP_OK));
    }

    // ====================================
    // DELETE ACTION - Delete company
    // ====================================

    /**
     * Delete company
     */
    protected function deleteAction(Company $company, Request $request): Response
    {
        $this->denyAccessUnlessGranted(CompanyVoter::DELETE, $company);

        // Verify CSRF token
        $token = $request->request->get('_token');
        if (!$this->csrfTokenManager->isTokenValid(new CsrfToken('delete_company_' . $company->getId()->toString(), $token))) {
            throw new InvalidCsrfTokenException('Invalid CSRF token for delete operation.');
        }

        try {
            // Before delete hook
            $this->beforeDelete($company);

            $name = (string) $company;

            $this->entityManager->remove($company);
            $this->entityManager->flush();

            // After delete hook
            $this->afterDelete();

            $this->addFlash('success', $this->translator->trans(
                'company.flash.deleted_successfully',
                ['%name%' => $name],
                'company'
            ));

        } catch (\Exception $e) {
            $this->addFlash('error', $this->translator->trans(
                'company.flash.delete_failed',
                ['%error%' => $e->getMessage()],
                'company'
            ));
        }

        return $this->redirectToRoute('company_index', [], Response::HTTP_SEE_OTHER);
    }

    // ====================================
    // SHOW ACTION - Display company details
    // ====================================

    /**
     * Display company details
     */
    protected function showAction(Company $company): Response
    {
        $this->denyAccessUnlessGranted(CompanyVoter::VIEW, $company);

        return $this->render('company/show.html.twig', [
            'company' => $company,
        ]);
    }

    // ====================================
    // LIFECYCLE HOOKS
    // ====================================
    // Override these in CompanyController to add custom logic

    /**
     * Initialize new entity before creating form
     *
     * Note: Organization and Owner are set automatically by TenantEntityProcessor
     * Only use this for custom initialization logic
     */
    protected function initializeNewEntity(Company $company): void
    {
        // Organization and Owner are set automatically by TenantEntityProcessor
        // Add your custom initialization here
    }

    /**
     * Execute logic before creating entity
     */
    protected function beforeCreate(Company $company): void
    {
        // Override to add logic before create
    }

    /**
     * Execute logic after creating entity
     */
    protected function afterCreate(Company $company): void
    {
        // Override to add logic after create (e.g., send notification, trigger event)
    }

    /**
     * Execute logic before updating entity
     */
    protected function beforeUpdate(Company $company): void
    {
        // Override to add logic before update
    }

    /**
     * Execute logic after updating entity
     */
    protected function afterUpdate(Company $company): void
    {
        // Override to add logic after update (e.g., send notification, trigger event)
    }

    /**
     * Execute logic before deleting entity
     */
    protected function beforeDelete(Company $company): void
    {
        // Override to add logic before delete (e.g., check dependencies, archive)
    }

    /**
     * Execute logic after deleting entity
     */
    protected function afterDelete(): void
    {
        // Override to add logic after delete (e.g., cleanup, send notification)
    }
}
