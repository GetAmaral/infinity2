<?php

declare(strict_types=1);

namespace App\Entity\Generated;

use App\Entity\EntityBase;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Serializer\Annotation\Groups;
use App\Entity\Organization;

/**
 * EventResourceType Entity (Generated Base Class)
 *
 * Types of event resources (Meeting Room, Equipment, Vehicle, etc.) *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom logic to EventResourceType.php instead.
 *
 * @generated by Genmax Code Generator
 */
#[ORM\MappedSuperclass]
#[ORM\HasLifecycleCallbacks]
abstract class EventResourceTypeGenerated extends EntityBase
{
    #[Groups(['eventresourcetype:read', 'eventresourcetype:write'])]
    #[ORM\Column(type: 'string', length: 255)]
    protected string $name;

    #[Groups(['eventresourcetype:read', 'eventresourcetype:write'])]
    #[ORM\Column(type: 'text', nullable: true)]
    protected ?string $description = null;

    #[Groups(['eventresourcetype:read', 'eventresourcetype:write'])]
    #[ORM\ManyToOne(targetEntity: Organization::class, inversedBy: 'eventResourceTypes')]
    protected ?Organization $organization = null;


    public function __construct()
    {
        parent::__construct();
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getOrganization(): ?Organization
    {
        return $this->organization;
    }

    public function setOrganization(?Organization $organization): self
    {
        $this->organization = $organization;
        return $this;
    }


    public function __toString(): string
    {
        return $this->name ?? ($this->getId()?->toRfc4122() ?? '');
    }
}
