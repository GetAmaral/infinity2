<?php

declare(strict_types=1);

namespace App\Entity\Generated;

use App\Entity\EntityBase;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Serializer\Annotation\Groups;

/**
 * SocialMediaType Entity (Generated Base Class)
 *
 * 
 *
 * This class is ALWAYS regenerated from CSV. DO NOT edit this file.
 * Add custom logic to SocialMediaType.php instead.
 *
 * @generated by Luminai Code Generator
 * @see /config/EntityNew.csv and /config/PropertyNew.csv
 */
#[ORM\MappedSuperclass]
#[ORM\HasLifecycleCallbacks]
abstract class SocialMediaTypeGenerated extends EntityBase
{
    #[ORM\Column(type: 'string')]
    #[Assert\NotBlank]
    #[Assert\Length(max: 255)]
    #[Groups(['socialmediatype:read', 'socialmediatype:write'])]
    protected string $name;

    #[ORM\Column(type: 'string', nullable: true)]
    #[Assert\Length(max: 255)]
    #[Groups(['socialmediatype:read', 'socialmediatype:write'])]
    protected ?string $url = null;

    #[ORM\Column(type: 'string', nullable: true)]
    #[Assert\Length(max: 255)]
    #[Groups(['socialmediatype:read', 'socialmediatype:write'])]
    protected ?string $iconUrl = null;


    public function __construct()
    {
        parent::__construct();
    }

    public function getName(): string
    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    
    public function getUrl(): ?string
    {
        return $this->url;
    }

    public function setUrl(?string $url): self
    {
        $this->url = $url;
        return $this;
    }

    
    public function getIconurl(): ?string
    {
        return $this->iconUrl;
    }

    public function setIconurl(?string $iconUrl): self
    {
        $this->iconUrl = $iconUrl;
        return $this;
    }

    

    public function __toString(): string
    {
        return $this->name ?? '';
    }
}
