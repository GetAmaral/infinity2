<?php

declare(strict_types=1);

namespace App\Entity\Generated;

use App\Entity\EntityBase;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * TalkTypeTemplate Entity (Generated Base Class)
 *
 * Templates for communication types (Call, Email, Meeting, etc.) *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom logic to TalkTypeTemplate.php instead.
 *
 * @generated by Genmax Code Generator
 */
#[ORM\MappedSuperclass]
#[ORM\HasLifecycleCallbacks]
abstract class TalkTypeTemplateGenerated extends EntityBase
{
    #[ORM\Column(type: 'string', length: 255)]
    protected string $name;

    #[ORM\Column(type: 'text')]
    protected string $description;

    #[ORM\Column(type: 'string', length: 255, nullable: true)]
    protected ?string $iconUrl = null;


    public function __construct()
    {
        parent::__construct();
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDescription(): string    {
        return $this->description;
    }

    public function setDescription(string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getIconurl(): ?string    {
        return $this->iconUrl;
    }

    public function setIconurl(?string $iconUrl): self
    {
        $this->iconUrl = $iconUrl;
        return $this;
    }


    public function __toString(): string
    {
        return $this->name ?? ($this->getId()?->toRfc4122() ?? '');
    }
}
