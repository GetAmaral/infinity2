<?php

declare(strict_types=1);

namespace App\Entity\Generated;

use App\Entity\EntityBase;
use App\Entity\Trait\OrganizationTrait;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Serializer\Annotation\Groups;
                use App\Entity\Event;

/**
 * MeetingData Entity (Generated Base Class)
 *
 * 
 *
 * This class is ALWAYS regenerated from CSV. DO NOT edit this file.
 * Add custom logic to MeetingData.php instead.
 *
 * @generated by Luminai Code Generator
 * @see /config/EntityNew.csv and /config/PropertyNew.csv
 */
#[ORM\MappedSuperclass]
#[ORM\HasLifecycleCallbacks]
abstract class MeetingDataGenerated extends EntityBase
{
    use OrganizationTrait;

    #[ORM\Column(type: 'string', nullable: true)]
    #[Assert\Length(max: 255)]
    #[Groups(['meetingdata:read', 'meetingdata:write'])]
    protected ?string $platform = null;

    #[ORM\ManyToOne(targetEntity: Event::class, inversedBy: 'meetingDatas')]
    #[Groups(['meetingdata:read', 'meetingdata:write'])]
    protected ?Event $event = null;

    #[ORM\Column(type: 'string', nullable: true)]
    #[Assert\Length(max: 255)]
    #[Groups(['meetingdata:read', 'meetingdata:write'])]
    protected ?string $url = null;

    #[ORM\Column(type: 'string', nullable: true)]
    #[Assert\Length(max: 255)]
    #[Groups(['meetingdata:read', 'meetingdata:write'])]
    protected ?string $meetingId = null;

    #[ORM\Column(type: 'string', nullable: true)]
    #[Assert\Length(max: 255)]
    #[Groups(['meetingdata:read', 'meetingdata:write'])]
    protected ?string $secret = null;

    #[ORM\Column(type: 'string', nullable: true)]
    #[Assert\Length(max: 255)]
    #[Groups(['meetingdata:read', 'meetingdata:write'])]
    protected ?string $recordUrl = null;


    public function __construct()
    {
        parent::__construct();
    }

    public function getPlatform(): ?string
    {
        return $this->platform;
    }

    public function setPlatform(?string $platform): self
    {
        $this->platform = $platform;
        return $this;
    }

    
    public function getEvent(): ?Event
    {
        return $this->event;
    }

    public function setEvent(?Event $event): self
    {
        $this->event = $event;
        return $this;
    }

    public function getUrl(): ?string
    {
        return $this->url;
    }

    public function setUrl(?string $url): self
    {
        $this->url = $url;
        return $this;
    }

    
    public function getMeetingid(): ?string
    {
        return $this->meetingId;
    }

    public function setMeetingid(?string $meetingId): self
    {
        $this->meetingId = $meetingId;
        return $this;
    }

    
    public function getSecret(): ?string
    {
        return $this->secret;
    }

    public function setSecret(?string $secret): self
    {
        $this->secret = $secret;
        return $this;
    }

    
    public function getRecordurl(): ?string
    {
        return $this->recordUrl;
    }

    public function setRecordurl(?string $recordUrl): self
    {
        $this->recordUrl = $recordUrl;
        return $this;
    }

    

    public function __toString(): string
    {
        return (string) $this->getId()->toRfc4122();
    }
}
