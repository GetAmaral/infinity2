<?php

declare(strict_types=1);

namespace App\Entity\Generated;

use App\Entity\EntityBase;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Serializer\Annotation\Groups;
use App\Entity\Step;
use App\Entity\StepConnection;

/**
 * StepOutput Entity (Generated Base Class)
 *
 * Output values from workflow steps *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom logic to StepOutput.php instead.
 *
 * @generated by Genmax Code Generator
 */
#[ORM\MappedSuperclass]
#[ORM\HasLifecycleCallbacks]
abstract class StepOutputGenerated extends EntityBase
{
    #[Groups(['stepoutput:read', 'stepoutput:write'])]
    #[ORM\ManyToOne(targetEntity: Step::class, inversedBy: 'outputs')]
    #[ORM\JoinColumn(nullable: false)]
    protected Step $step;

    #[Groups(['stepoutput:read', 'stepoutput:write'])]
    #[ORM\Column(type: 'string', length: 255)]
    #[Assert\Length(max: 255)]
    protected string $name;

    #[Groups(['stepoutput:read', 'stepoutput:write'])]
    #[ORM\Column(type: 'text', nullable: true)]
    protected ?string $description = null;

    #[Groups(['stepoutput:read', 'stepoutput:write'])]
    #[ORM\Column(type: 'string', length: 255, nullable: true)]
    #[Assert\Length(max: 255)]
    protected ?string $slug = null;

    #[Groups(['stepoutput:read', 'stepoutput:write'])]
    #[ORM\Column(type: 'text', nullable: true)]
    protected ?string $conditional = null;

    #[Groups(['stepoutput:read', 'stepoutput:write'])]
    #[ORM\OneToOne(targetEntity: StepConnection::class, mappedBy: 'sourceOutput')]
    protected ?StepConnection $connection = null;


    public function __construct()
    {
        parent::__construct();
    }

    public function getStep(): Step
    {
        return $this->step;
    }

    public function setStep(Step $step): self
    {
        $this->step = $step;
        return $this;
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getSlug(): ?string    {
        return $this->slug;
    }

    public function setSlug(?string $slug): self
    {
        $this->slug = $slug;
        return $this;
    }

    public function getConditional(): ?string    {
        return $this->conditional;
    }

    public function setConditional(?string $conditional): self
    {
        $this->conditional = $conditional;
        return $this;
    }

    public function getConnection(): ?StepConnection
    {
        return $this->connection;
    }

    public function setConnection(?StepConnection $connection): self
    {
        $this->connection = $connection;
        return $this;
    }


    public function __toString(): string
    {
        return $this->name ?? ($this->getId()?->toRfc4122() ?? '');
    }
}
