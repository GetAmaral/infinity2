<?php

declare(strict_types=1);

namespace App\Entity\Generated;

use App\Entity\EntityBase;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use App\Entity\City;
use App\Entity\Country;

/**
 * HolidayTemplate Entity (Generated Base Class)
 *
 * Templates for holidays (National, Regional, Company, etc.) *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom logic to HolidayTemplate.php instead.
 *
 * @generated by Genmax Code Generator
 */
#[ORM\MappedSuperclass]
#[ORM\HasLifecycleCallbacks]
abstract class HolidayTemplateGenerated extends EntityBase
{
    #[ORM\Column(type: 'string')]
    protected string $name;

    #[ORM\Column(type: 'boolean', nullable: true)]
    protected ?bool $blocksScheduling = null;

    #[ORM\ManyToOne(targetEntity: City::class, inversedBy: 'holidayTemplates')]
    protected ?City $city = null;

    #[ORM\ManyToOne(targetEntity: Country::class, inversedBy: 'holidayTemplates')]
    protected ?Country $country = null;

    #[ORM\Column(type: 'integer', nullable: true)]
    protected ?int $recurrenceFrequency = null;

    #[ORM\Column(type: 'integer', nullable: true)]
    protected ?int $recurrenceInterval = null;

    #[ORM\Column(type: 'date', nullable: true)]
    protected ?\DateTimeImmutable $sentAt = null;


    public function __construct()
    {
        parent::__construct();
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getBlocksscheduling(): ?bool    {
        return $this->blocksScheduling;
    }

    public function setBlocksscheduling(?bool $blocksScheduling): self
    {
        $this->blocksScheduling = $blocksScheduling;
        return $this;
    }

    public function isBlocksscheduling(): bool
    {
        return $this->blocksScheduling === true;
    }

    public function getCity(): ?App\Entity\City
    {
        return $this->city;
    }

    public function setCity(?App\Entity\City $city): self
    {
        $this->city = $city;
        return $this;
    }

    public function getCountry(): ?App\Entity\Country
    {
        return $this->country;
    }

    public function setCountry(?App\Entity\Country $country): self
    {
        $this->country = $country;
        return $this;
    }

    public function getRecurrencefrequency(): ?int    {
        return $this->recurrenceFrequency;
    }

    public function setRecurrencefrequency(?int $recurrenceFrequency): self
    {
        $this->recurrenceFrequency = $recurrenceFrequency;
        return $this;
    }

    public function getRecurrenceinterval(): ?int    {
        return $this->recurrenceInterval;
    }

    public function setRecurrenceinterval(?int $recurrenceInterval): self
    {
        $this->recurrenceInterval = $recurrenceInterval;
        return $this;
    }

    public function getSentat(): ?\DateTimeImmutable    {
        return $this->sentAt;
    }

    public function setSentat(?\DateTimeImmutable $sentAt): self
    {
        $this->sentAt = $sentAt;
        return $this;
    }


    public function __toString(): string
    {
        return $this->name ?? ($this->getId()?->toRfc4122() ?? '');
    }
}
