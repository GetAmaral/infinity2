<?php

declare(strict_types=1);

namespace App\Entity\Generated;

use App\Entity\EntityBase;
use App\Entity\Trait\OrganizationTrait;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Serializer\Annotation\Groups;
                                use App\Entity\Calendar;
use App\Entity\Event;

/**
 * Holiday Entity (Generated Base Class)
 *
 * 
 *
 * This class is ALWAYS regenerated from CSV. DO NOT edit this file.
 * Add custom logic to Holiday.php instead.
 *
 * @generated by Luminai Code Generator
 * @see /config/EntityNew.csv and /config/PropertyNew.csv
 */
#[ORM\MappedSuperclass]
#[ORM\HasLifecycleCallbacks]
abstract class HolidayGenerated extends EntityBase
{
    use OrganizationTrait;

    #[ORM\Column(type: 'string', nullable: true)]
    #[Assert\Length(max: 255)]
    #[Groups(['holiday:read', 'holiday:write'])]
    protected ?string $name = null;

    #[ORM\ManyToOne(targetEntity: Calendar::class, inversedBy: 'holidays')]
    #[Groups(['holiday:read', 'holiday:write'])]
    protected ?Calendar $calendar = null;

    #[ORM\ManyToOne(targetEntity: Event::class, inversedBy: 'holidays')]
    #[Groups(['holiday:read', 'holiday:write'])]
    protected ?Event $event = null;

    #[ORM\Column(type: 'date', nullable: true)]
    #[Groups(['holiday:read', 'holiday:write'])]
    protected ?\DateTimeInterface $date = null;

    #[ORM\Column(type: 'text', nullable: true)]
    #[Groups(['holiday:read', 'holiday:write'])]
    protected ?string $description = null;

    #[ORM\Column(type: 'boolean', nullable: true)]
    #[Groups(['holiday:read', 'holiday:write'])]
    protected ?bool $blockSchedule = null;


    public function __construct()
    {
        parent::__construct();
    }

    public function getName(): ?string
    {
        return $this->name;
    }

    public function setName(?string $name): self
    {
        $this->name = $name;
        return $this;
    }

    
    public function getCalendar(): ?Calendar
    {
        return $this->calendar;
    }

    public function setCalendar(?Calendar $calendar): self
    {
        $this->calendar = $calendar;
        return $this;
    }

    public function getEvent(): ?Event
    {
        return $this->event;
    }

    public function setEvent(?Event $event): self
    {
        $this->event = $event;
        return $this;
    }

    public function getDate(): ?\DateTimeInterface
    {
        return $this->date;
    }

    public function setDate(?\DateTimeInterface $date): self
    {
        $this->date = $date;
        return $this;
    }

    
    public function getDescription(): ?string
    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    
    public function getBlockschedule(): ?bool
    {
        return $this->blockSchedule;
    }

    public function setBlockschedule(?bool $blockSchedule): self
    {
        $this->blockSchedule = $blockSchedule;
        return $this;
    }

    

    public function __toString(): string
    {
        return $this->name ?? '';
    }
}
