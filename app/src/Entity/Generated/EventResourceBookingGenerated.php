<?php

declare(strict_types=1);

namespace App\Entity\Generated;

use App\Entity\EntityBase;
use App\Entity\Trait\OrganizationTrait;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Serializer\Annotation\Groups;
                                                use App\Entity\Event;
use App\Entity\EventResource;
use App\Entity\User;

/**
 * EventResourceBooking Entity (Generated Base Class)
 *
 * 
 *
 * This class is ALWAYS regenerated from CSV. DO NOT edit this file.
 * Add custom logic to EventResourceBooking.php instead.
 *
 * @generated by Luminai Code Generator
 * @see /config/EntityNew.csv and /config/PropertyNew.csv
 */
#[ORM\MappedSuperclass]
#[ORM\HasLifecycleCallbacks]
abstract class EventResourceBookingGenerated extends EntityBase
{
    use OrganizationTrait;

    #[ORM\ManyToOne(targetEntity: Event::class, inversedBy: 'resourceBookings')]
    #[Groups(['eventresourcebooking:read', 'eventresourcebooking:write'])]
    protected ?Event $event = null;

    #[ORM\ManyToOne(targetEntity: EventResource::class, inversedBy: 'eventBookings')]
    #[Groups(['eventresourcebooking:read', 'eventresourcebooking:write'])]
    protected ?EventResource $resource = null;

    #[ORM\ManyToOne(targetEntity: User::class, inversedBy: 'eventResourceBookings')]
    #[Groups(['eventresourcebooking:read', 'eventresourcebooking:write'])]
    protected ?User $responsibleUser = null;

    #[ORM\Column(type: 'integer', nullable: true)]
    #[Groups(['eventresourcebooking:read', 'eventresourcebooking:write'])]
    protected ?int $quantity = null;

    #[ORM\Column(type: 'integer', nullable: true)]
    #[Groups(['eventresourcebooking:read', 'eventresourcebooking:write'])]
    protected ?int $bookingStatus = null;

    #[ORM\Column(type: 'text', nullable: true)]
    #[Groups(['eventresourcebooking:read', 'eventresourcebooking:write'])]
    protected ?string $notes = null;


    public function __construct()
    {
        parent::__construct();
    }

    public function getEvent(): ?Event
    {
        return $this->event;
    }

    public function setEvent(?Event $event): self
    {
        $this->event = $event;
        return $this;
    }

    public function getResource(): ?EventResource
    {
        return $this->resource;
    }

    public function setResource(?EventResource $resource): self
    {
        $this->resource = $resource;
        return $this;
    }

    public function getResponsibleuser(): ?User
    {
        return $this->responsibleUser;
    }

    public function setResponsibleuser(?User $responsibleUser): self
    {
        $this->responsibleUser = $responsibleUser;
        return $this;
    }

    public function getQuantity(): ?int
    {
        return $this->quantity;
    }

    public function setQuantity(?int $quantity): self
    {
        $this->quantity = $quantity;
        return $this;
    }

    
    public function getBookingstatus(): ?int
    {
        return $this->bookingStatus;
    }

    public function setBookingstatus(?int $bookingStatus): self
    {
        $this->bookingStatus = $bookingStatus;
        return $this;
    }

    
    public function getNotes(): ?string
    {
        return $this->notes;
    }

    public function setNotes(?string $notes): self
    {
        $this->notes = $notes;
        return $this;
    }

    

    public function __toString(): string
    {
        return (string) $this->getId()->toRfc4122();
    }
}
