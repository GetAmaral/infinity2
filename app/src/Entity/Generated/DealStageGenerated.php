<?php

declare(strict_types=1);

namespace App\Entity\Generated;

use App\Entity\EntityBase;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Serializer\Annotation\Groups;
use App\Entity\Organization;
use App\Entity\User;
use App\Entity\Deal;
use App\Entity\PipelineStage;

/**
 * DealStage Entity (Generated Base Class)
 *
 * Stages within sales pipelines *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom logic to DealStage.php instead.
 *
 * @generated by Genmax Code Generator
 */
#[ORM\MappedSuperclass]
#[ORM\HasLifecycleCallbacks]
abstract class DealStageGenerated extends EntityBase
{
    #[Groups(['dealstage:read', 'dealstage:write'])]
    #[ORM\ManyToOne(targetEntity: Organization::class, inversedBy: 'dealStages')]
    #[ORM\JoinColumn(nullable: false)]
    protected Organization $organization;

    #[Groups(['dealstage:read', 'dealstage:write'])]
    #[ORM\Column(type: 'string', length: 100, nullable: true)]
    protected ?string $stageName = null;

    #[Groups(['dealstage:read', 'dealstage:write'])]
    #[ORM\Column(type: 'decimal', precision: 5, scale: 2, nullable: true)]
    protected ?string $probability = '0';

    #[Groups(['dealstage:read', 'dealstage:write'])]
    #[ORM\Column(type: 'integer', nullable: true)]
    protected ?int $rottenDays = null;

    #[Groups(['dealstage:read', 'dealstage:write'])]
    #[ORM\Column(type: 'boolean')]
    protected bool $rotten = false;

    #[Groups(['dealstage:read', 'dealstage:write'])]
    #[ORM\ManyToOne(targetEntity: User::class)]
    protected ?User $enteredBy = null;

    #[Groups(['dealstage:read', 'dealstage:write'])]
    #[ORM\ManyToOne(targetEntity: User::class)]
    protected ?User $exitedBy = null;

    #[Groups(['dealstage:read', 'dealstage:write'])]
    #[ORM\Column(type: 'date', nullable: true)]
    protected ?\DateTimeImmutable $expectedCloseDate = null;

    #[Groups(['dealstage:read', 'dealstage:write'])]
    #[ORM\Column(type: 'decimal', precision: 15, scale: 2, nullable: true)]
    protected ?string $stageValue = null;

    #[Groups(['dealstage:read', 'dealstage:write'])]
    #[ORM\Column(type: 'float', precision: 10, scale: 2, nullable: true)]
    protected ?float $daysInStage = null;

    #[Groups(['dealstage:read', 'dealstage:write'])]
    #[ORM\Column(type: 'decimal', precision: 15, scale: 2, nullable: true)]
    protected ?string $weightedValue = null;

    #[Groups(['dealstage:read', 'dealstage:write'])]
    #[ORM\Column(type: 'boolean')]
    protected bool $active = true;

    #[Groups(['dealstage:read', 'dealstage:write'])]
    #[ORM\ManyToOne(targetEntity: Deal::class, inversedBy: 'dealStages')]
    protected ?Deal $deal = null;

    #[Groups(['dealstage:read', 'dealstage:write'])]
    #[ORM\Column(type: 'datetime', nullable: true)]
    protected ?\DateTimeImmutable $endedAt = null;

    #[Groups(['dealstage:read', 'dealstage:write'])]
    #[ORM\Column(type: 'datetime', nullable: true)]
    protected ?\DateTimeImmutable $lastUpdatedAt = null;

    #[Groups(['dealstage:read', 'dealstage:write'])]
    #[ORM\Column(type: 'text', nullable: true)]
    protected ?string $notes = null;

    #[Groups(['dealstage:read', 'dealstage:write'])]
    #[ORM\ManyToOne(targetEntity: PipelineStage::class, inversedBy: 'dealStages')]
    protected ?PipelineStage $pipelineStage = null;

    #[Groups(['dealstage:read', 'dealstage:write'])]
    #[ORM\Column(type: 'datetime', nullable: true)]
    protected ?\DateTimeImmutable $startedAt = null;


    public function __construct()
    {
        parent::__construct();
    }

    public function getOrganization(): App\Entity\Organization
    {
        return $this->organization;
    }

    public function setOrganization(App\Entity\Organization $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getStageName(): ?string    {
        return $this->stageName;
    }

    public function setStageName(?string $stageName): self
    {
        $this->stageName = $stageName;
        return $this;
    }

    public function getProbability(): ?string    {
        return $this->probability;
    }

    public function setProbability(?string $probability): self
    {
        $this->probability = $probability;
        return $this;
    }

    public function getRottenDays(): ?int    {
        return $this->rottenDays;
    }

    public function setRottenDays(?int $rottenDays): self
    {
        $this->rottenDays = $rottenDays;
        return $this;
    }

    public function getRotten(): bool    {
        return $this->rotten;
    }

    public function setRotten(bool $rotten): self
    {
        $this->rotten = $rotten;
        return $this;
    }

    public function isRotten(): bool
    {
        return $this->rotten === true;
    }

    public function getEnteredBy(): ?App\Entity\User
    {
        return $this->enteredBy;
    }

    public function setEnteredBy(?App\Entity\User $enteredBy): self
    {
        $this->enteredBy = $enteredBy;
        return $this;
    }

    public function getExitedBy(): ?App\Entity\User
    {
        return $this->exitedBy;
    }

    public function setExitedBy(?App\Entity\User $exitedBy): self
    {
        $this->exitedBy = $exitedBy;
        return $this;
    }

    public function getExpectedCloseDate(): ?\DateTimeImmutable    {
        return $this->expectedCloseDate;
    }

    public function setExpectedCloseDate(?\DateTimeImmutable $expectedCloseDate): self
    {
        $this->expectedCloseDate = $expectedCloseDate;
        return $this;
    }

    public function getStageValue(): ?string    {
        return $this->stageValue;
    }

    public function setStageValue(?string $stageValue): self
    {
        $this->stageValue = $stageValue;
        return $this;
    }

    public function getDaysInStage(): ?float    {
        return $this->daysInStage;
    }

    public function setDaysInStage(?float $daysInStage): self
    {
        $this->daysInStage = $daysInStage;
        return $this;
    }

    public function getWeightedValue(): ?string    {
        return $this->weightedValue;
    }

    public function setWeightedValue(?string $weightedValue): self
    {
        $this->weightedValue = $weightedValue;
        return $this;
    }

    public function getActive(): bool    {
        return $this->active;
    }

    public function setActive(bool $active): self
    {
        $this->active = $active;
        return $this;
    }

    public function isActive(): bool
    {
        return $this->active === true;
    }

    public function getDeal(): ?App\Entity\Deal
    {
        return $this->deal;
    }

    public function setDeal(?App\Entity\Deal $deal): self
    {
        $this->deal = $deal;
        return $this;
    }

    public function getEndedAt(): ?\DateTimeImmutable    {
        return $this->endedAt;
    }

    public function setEndedAt(?\DateTimeImmutable $endedAt): self
    {
        $this->endedAt = $endedAt;
        return $this;
    }

    public function getLastUpdatedAt(): ?\DateTimeImmutable    {
        return $this->lastUpdatedAt;
    }

    public function setLastUpdatedAt(?\DateTimeImmutable $lastUpdatedAt): self
    {
        $this->lastUpdatedAt = $lastUpdatedAt;
        return $this;
    }

    public function getNotes(): ?string    {
        return $this->notes;
    }

    public function setNotes(?string $notes): self
    {
        $this->notes = $notes;
        return $this;
    }

    public function getPipelineStage(): ?App\Entity\PipelineStage
    {
        return $this->pipelineStage;
    }

    public function setPipelineStage(?App\Entity\PipelineStage $pipelineStage): self
    {
        $this->pipelineStage = $pipelineStage;
        return $this;
    }

    public function getStartedAt(): ?\DateTimeImmutable    {
        return $this->startedAt;
    }

    public function setStartedAt(?\DateTimeImmutable $startedAt): self
    {
        $this->startedAt = $startedAt;
        return $this;
    }


    public function __toString(): string
    {
        return $this->getId()?->toRfc4122() ?? '';
    }
}
