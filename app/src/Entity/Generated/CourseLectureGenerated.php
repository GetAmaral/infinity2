<?php

declare(strict_types=1);

namespace App\Entity\Generated;

use App\Entity\EntityBase;
use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Serializer\Annotation\Groups;
use App\Entity\CourseModule;
use App\Entity\StudentLecture;
use App\Entity\StudentCourse;
use App\Entity\Organization;

/**
 * CourseLecture Entity (Generated Base Class)
 *
 * Individual lectures and learning content *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom logic to CourseLecture.php instead.
 *
 * @generated by Genmax Code Generator
 */
#[ORM\MappedSuperclass]
#[ORM\HasLifecycleCallbacks]
abstract class CourseLectureGenerated extends EntityBase
{
    #[Groups(['course_lecture:read', 'course_lecture:write', 'course:read'])]
    #[ORM\Column(type: 'string', length: 255)]
    #[Assert\Length(max: 255)]
    protected string $name;

    #[Groups(['course_lecture:read', 'course_lecture:write'])]
    #[ORM\Column(type: 'text', nullable: true)]
    protected ?string $description = null;

    #[Groups(['course_lecture:read'])]
    #[ORM\Column(type: 'string', length: 255, nullable: true)]
    #[Assert\Length(max: 255)]
    protected ?string $videoFileName = null;

    #[Groups(['course_lecture:read'])]
    #[ORM\Column(type: 'string', length: 500, nullable: true)]
    #[Assert\Length(max: 500)]
    protected ?string $videoPath = null;

    #[Groups(['course_lecture:read'])]
    #[ORM\Column(type: 'string', length: 20, nullable: true)]
    #[Assert\Length(max: 20)]
    protected ?string $processingStatus = 'pending';

    #[Groups(['course_lecture:read'])]
    #[ORM\Column(type: 'string', length: 255, nullable: true)]
    #[Assert\Length(max: 255)]
    protected ?string $processingStep = null;

    #[Groups(['course_lecture:read'])]
    #[ORM\Column(type: 'integer', nullable: true)]
    #[Assert\Range(max: 150, min: 0)]
    protected ?int $processingPercentage = 0;

    #[Groups(['course_lecture:read'])]
    #[ORM\Column(type: 'text', nullable: true)]
    protected ?string $processingError = null;

    #[Groups(['course_lecture:read'])]
    #[ORM\Column(type: 'datetime_immutable', nullable: true)]
    protected ?\DateTimeImmutable $processedAt = null;

    #[Groups(['course_lecture:read', 'course_lecture:write'])]
    #[ORM\Column(type: 'integer')]
    protected int $viewOrder = 0;

    #[Groups(['course_lecture:read', 'course_lecture:write'])]
    #[ORM\Column(type: 'integer')]
    protected int $lengthSeconds = 0;

    #[Groups(['course_lecture:read', 'course_lecture:write'])]
    #[ORM\ManyToOne(targetEntity: CourseModule::class, inversedBy: 'lectures')]
    #[ORM\JoinColumn(nullable: false)]
    protected CourseModule $courseModule;

    #[Groups(['course_lecture:read'])]
    #[ORM\OneToMany(targetEntity: StudentLecture::class, mappedBy: 'lecture', fetch: 'LAZY')]
    protected Collection $studentLectures;

    #[Groups(['course_lecture:read'])]
    #[ORM\OneToMany(targetEntity: StudentCourse::class, mappedBy: 'currentLecture', fetch: 'LAZY')]
    protected Collection $studentCoursesOnThisLecture;

    #[Groups(['course_lecture:read'])]
    #[ORM\ManyToOne(targetEntity: Organization::class)]
    #[ORM\JoinColumn(nullable: false)]
    protected Organization $organization;

    #[Groups(['course_lecture:read', 'course_lecture:write'])]
    #[ORM\Column(type: 'boolean')]
    protected bool $active;

    #[Groups(['course_lecture:read', 'course_lecture:write'])]
    #[ORM\Column(type: 'boolean')]
    protected bool $published;

    #[Groups(['course_lecture:read', 'course_lecture:write', 'student:read'])]
    #[ORM\Column(name: 'free_prop', type: 'boolean')]
    protected bool $free;

    #[Groups(['course_lecture:read'])]
    #[ORM\Column(type: 'datetime_immutable', nullable: true)]
    protected ?\DateTimeImmutable $publishedAt = null;

    #[Groups(['course_lecture:read', 'course_lecture:write', 'student:read'])]
    #[ORM\Column(type: 'string', length: 500, nullable: true)]
    protected ?string $videoUrl = null;

    #[Groups(['course_lecture:read', 'course_lecture:write'])]
    #[ORM\Column(type: 'string', length: 20, nullable: true)]
    protected ?string $videoType = null;

    #[Groups(['course_lecture:read'])]
    #[ORM\Column(type: 'string', length: 20, nullable: true)]
    protected ?string $videoResolution = null;

    #[Groups(['course_lecture:read'])]
    #[ORM\Column(type: 'bigint', nullable: true)]
    protected ?string $videoSizeBytes = null;

    #[Groups(['course_lecture:read', 'course_lecture:write', 'student:read'])]
    #[ORM\Column(type: 'text', nullable: true)]
    protected ?string $transcript = null;

    #[Groups(['course_lecture:read', 'course_lecture:write', 'student:read'])]
    #[ORM\Column(type: 'string', length: 500, nullable: true)]
    protected ?string $subtitleUrl = null;

    #[Groups(['course_lecture:read', 'course_lecture:write'])]
    #[ORM\Column(type: 'string', length: 10, nullable: true)]
    protected ?string $subtitleLanguage = null;

    #[Groups(['course_lecture:read', 'course_lecture:write', 'student:read'])]
    #[ORM\Column(type: 'json', nullable: true)]
    protected ?array $attachments = null;

    #[Groups(['course_lecture:read', 'course_lecture:write', 'student:read'])]
    #[ORM\Column(type: 'json', nullable: true)]
    protected ?array $externalLinks = null;

    #[Groups(['course_lecture:read', 'course_lecture:write'])]
    #[ORM\Column(type: 'json', nullable: true)]
    protected ?array $learningObjectives = null;

    #[Groups(['course_lecture:read', 'course_lecture:write'])]
    #[ORM\Column(type: 'text', nullable: true)]
    protected ?string $prerequisites = null;

    #[Groups(['course_lecture:read'])]
    #[ORM\Column(type: 'integer', nullable: true)]
    protected ?int $viewCount = null;

    #[Groups(['course_lecture:read'])]
    #[ORM\Column(type: 'integer', nullable: true)]
    protected ?int $completionCount = null;

    #[Groups(['course_lecture:read'])]
    #[ORM\Column(type: 'float', nullable: true)]
    protected ?float $averageWatchPercentage = null;

    #[Groups(['course_lecture:read'])]
    #[ORM\Column(type: 'float', nullable: true)]
    protected ?float $rating = null;

    #[Groups(['course_lecture:read'])]
    #[ORM\Column(type: 'integer', nullable: true)]
    protected ?int $ratingCount = null;

    #[Groups(['course_lecture:read', 'course_lecture:write', 'student:read'])]
    #[ORM\Column(type: 'integer')]
    protected int $durationSeconds;

    #[Groups(['course_lecture:read', 'course_lecture:write'])]
    #[ORM\Column(type: 'string', length: 20, nullable: true)]
    protected ?string $difficultyLevel = null;

    #[Groups(['course_lecture:read', 'course_lecture:write'])]
    #[ORM\Column(type: 'json', nullable: true)]
    protected ?array $tags = null;

    #[Groups(['course_lecture:read', 'course_lecture:write'])]
    #[ORM\Column(type: 'json', nullable: true)]
    protected ?array $skillsCovered = null;

    #[Groups(['course_lecture:read', 'course_lecture:write'])]
    #[ORM\Column(type: 'integer', nullable: true)]
    protected ?int $pointsValue = null;

    #[Groups(['course_lecture:read'])]
    #[ORM\Column(type: 'json', nullable: true)]
    protected ?array $badges = null;


    public function __construct()
    {
        parent::__construct();
        $this->studentLectures = new ArrayCollection();
        $this->studentCoursesOnThisLecture = new ArrayCollection();
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getVideoFileName(): ?string    {
        return $this->videoFileName;
    }

    public function setVideoFileName(?string $videoFileName): self
    {
        $this->videoFileName = $videoFileName;
        return $this;
    }

    public function getVideoPath(): ?string    {
        return $this->videoPath;
    }

    public function setVideoPath(?string $videoPath): self
    {
        $this->videoPath = $videoPath;
        return $this;
    }

    public function getProcessingStatus(): ?string    {
        return $this->processingStatus;
    }

    public function setProcessingStatus(?string $processingStatus): self
    {
        $this->processingStatus = $processingStatus;
        return $this;
    }

    public function getProcessingStep(): ?string    {
        return $this->processingStep;
    }

    public function setProcessingStep(?string $processingStep): self
    {
        $this->processingStep = $processingStep;
        return $this;
    }

    public function getProcessingPercentage(): ?int    {
        return $this->processingPercentage;
    }

    public function setProcessingPercentage(?int $processingPercentage): self
    {
        $this->processingPercentage = $processingPercentage;
        return $this;
    }

    public function getProcessingError(): ?string    {
        return $this->processingError;
    }

    public function setProcessingError(?string $processingError): self
    {
        $this->processingError = $processingError;
        return $this;
    }

    public function getProcessedAt(): ?\DateTimeImmutable    {
        return $this->processedAt;
    }

    public function setProcessedAt(?\DateTimeImmutable $processedAt): self
    {
        $this->processedAt = $processedAt;
        return $this;
    }

    public function getViewOrder(): int    {
        return $this->viewOrder;
    }

    public function setViewOrder(int $viewOrder): self
    {
        $this->viewOrder = $viewOrder;
        return $this;
    }

    public function getLengthSeconds(): int    {
        return $this->lengthSeconds;
    }

    public function setLengthSeconds(int $lengthSeconds): self
    {
        $this->lengthSeconds = $lengthSeconds;
        return $this;
    }

    public function getCourseModule(): CourseModule
    {
        return $this->courseModule;
    }

    public function setCourseModule(CourseModule $courseModule): self
    {
        $this->courseModule = $courseModule;
        return $this;
    }

    /**
     * @return Collection<int, StudentLecture>
     */
    public function getStudentLectures(): Collection
    {
        return $this->studentLectures;
    }

    public function addStudentLecture(StudentLecture $studentLecture): self
    {
        if (!$this->studentLectures->contains($studentLecture)) {
            $this->studentLectures->add($studentLecture);
            $studentLecture->setLecture($this);
        }
        return $this;
    }

    public function removeStudentLecture(StudentLecture $studentLecture): self
    {
        if ($this->studentLectures->removeElement($studentLecture)) {
            if ($studentLecture->getLecture() === $this) {
                $studentLecture->setLecture(null);
            }
        }
        return $this;
    }

    /**
     * @return Collection<int, StudentCourse>
     */
    public function getStudentCoursesOnThisLecture(): Collection
    {
        return $this->studentCoursesOnThisLecture;
    }

    public function addStudentCoursesOnThisLecture(StudentCourse $studentCoursesOnThisLecture): self
    {
        if (!$this->studentCoursesOnThisLecture->contains($studentCoursesOnThisLecture)) {
            $this->studentCoursesOnThisLecture->add($studentCoursesOnThisLecture);
            $studentCoursesOnThisLecture->setCurrentLecture($this);
        }
        return $this;
    }

    public function removeStudentCoursesOnThisLecture(StudentCourse $studentCoursesOnThisLecture): self
    {
        if ($this->studentCoursesOnThisLecture->removeElement($studentCoursesOnThisLecture)) {
            if ($studentCoursesOnThisLecture->getCurrentLecture() === $this) {
                $studentCoursesOnThisLecture->setCurrentLecture(null);
            }
        }
        return $this;
    }

    public function getOrganization(): Organization
    {
        return $this->organization;
    }

    public function setOrganization(Organization $organization): self
    {
        $this->organization = $organization;
        return $this;
    }

    public function getActive(): bool    {
        return $this->active;
    }

    public function setActive(bool $active): self
    {
        $this->active = $active;
        return $this;
    }

    public function isActive(): bool
    {
        return $this->active === true;
    }

    public function getPublished(): bool    {
        return $this->published;
    }

    public function setPublished(bool $published): self
    {
        $this->published = $published;
        return $this;
    }

    public function isPublished(): bool
    {
        return $this->published === true;
    }

    public function getFree(): bool    {
        return $this->free;
    }

    public function setFree(bool $free): self
    {
        $this->free = $free;
        return $this;
    }

    public function isFree(): bool
    {
        return $this->free === true;
    }

    public function getPublishedAt(): ?\DateTimeImmutable    {
        return $this->publishedAt;
    }

    public function setPublishedAt(?\DateTimeImmutable $publishedAt): self
    {
        $this->publishedAt = $publishedAt;
        return $this;
    }

    public function getVideoUrl(): ?string    {
        return $this->videoUrl;
    }

    public function setVideoUrl(?string $videoUrl): self
    {
        $this->videoUrl = $videoUrl;
        return $this;
    }

    public function getVideoType(): ?string    {
        return $this->videoType;
    }

    public function setVideoType(?string $videoType): self
    {
        $this->videoType = $videoType;
        return $this;
    }

    public function getVideoResolution(): ?string    {
        return $this->videoResolution;
    }

    public function setVideoResolution(?string $videoResolution): self
    {
        $this->videoResolution = $videoResolution;
        return $this;
    }

    public function getVideoSizeBytes(): ?string    {
        return $this->videoSizeBytes;
    }

    public function setVideoSizeBytes(?string $videoSizeBytes): self
    {
        $this->videoSizeBytes = $videoSizeBytes;
        return $this;
    }

    public function getTranscript(): ?string    {
        return $this->transcript;
    }

    public function setTranscript(?string $transcript): self
    {
        $this->transcript = $transcript;
        return $this;
    }

    public function getSubtitleUrl(): ?string    {
        return $this->subtitleUrl;
    }

    public function setSubtitleUrl(?string $subtitleUrl): self
    {
        $this->subtitleUrl = $subtitleUrl;
        return $this;
    }

    public function getSubtitleLanguage(): ?string    {
        return $this->subtitleLanguage;
    }

    public function setSubtitleLanguage(?string $subtitleLanguage): self
    {
        $this->subtitleLanguage = $subtitleLanguage;
        return $this;
    }

    public function getAttachments(): ?array    {
        return $this->attachments;
    }

    public function setAttachments(?array $attachments): self
    {
        $this->attachments = $attachments;
        return $this;
    }

    public function getExternalLinks(): ?array    {
        return $this->externalLinks;
    }

    public function setExternalLinks(?array $externalLinks): self
    {
        $this->externalLinks = $externalLinks;
        return $this;
    }

    public function getLearningObjectives(): ?array    {
        return $this->learningObjectives;
    }

    public function setLearningObjectives(?array $learningObjectives): self
    {
        $this->learningObjectives = $learningObjectives;
        return $this;
    }

    public function getPrerequisites(): ?string    {
        return $this->prerequisites;
    }

    public function setPrerequisites(?string $prerequisites): self
    {
        $this->prerequisites = $prerequisites;
        return $this;
    }

    public function getViewCount(): ?int    {
        return $this->viewCount;
    }

    public function setViewCount(?int $viewCount): self
    {
        $this->viewCount = $viewCount;
        return $this;
    }

    public function getCompletionCount(): ?int    {
        return $this->completionCount;
    }

    public function setCompletionCount(?int $completionCount): self
    {
        $this->completionCount = $completionCount;
        return $this;
    }

    public function getAverageWatchPercentage(): ?float    {
        return $this->averageWatchPercentage;
    }

    public function setAverageWatchPercentage(?float $averageWatchPercentage): self
    {
        $this->averageWatchPercentage = $averageWatchPercentage;
        return $this;
    }

    public function getRating(): ?float    {
        return $this->rating;
    }

    public function setRating(?float $rating): self
    {
        $this->rating = $rating;
        return $this;
    }

    public function getRatingCount(): ?int    {
        return $this->ratingCount;
    }

    public function setRatingCount(?int $ratingCount): self
    {
        $this->ratingCount = $ratingCount;
        return $this;
    }

    public function getDurationSeconds(): int    {
        return $this->durationSeconds;
    }

    public function setDurationSeconds(int $durationSeconds): self
    {
        $this->durationSeconds = $durationSeconds;
        return $this;
    }

    public function getDifficultyLevel(): ?string    {
        return $this->difficultyLevel;
    }

    public function setDifficultyLevel(?string $difficultyLevel): self
    {
        $this->difficultyLevel = $difficultyLevel;
        return $this;
    }

    public function getTags(): ?array    {
        return $this->tags;
    }

    public function setTags(?array $tags): self
    {
        $this->tags = $tags;
        return $this;
    }

    public function getSkillsCovered(): ?array    {
        return $this->skillsCovered;
    }

    public function setSkillsCovered(?array $skillsCovered): self
    {
        $this->skillsCovered = $skillsCovered;
        return $this;
    }

    public function getPointsValue(): ?int    {
        return $this->pointsValue;
    }

    public function setPointsValue(?int $pointsValue): self
    {
        $this->pointsValue = $pointsValue;
        return $this;
    }

    public function getBadges(): ?array    {
        return $this->badges;
    }

    public function setBadges(?array $badges): self
    {
        $this->badges = $badges;
        return $this;
    }


    public function __toString(): string
    {
        return $this->name ?? ($this->getId()?->toRfc4122() ?? '');
    }
}
