<?php

declare(strict_types=1);

namespace App\Entity\Generated;

use App\Entity\EntityBase;
use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;
use Symfony\Component\Validator\Constraints as Assert;
use App\Entity\Course;
use App\Entity\CourseLecture;

/**
 * Course Module Entity (Generated Base Class)
 *
 * Course modules for structured learning paths *
 * This class is ALWAYS regenerated. DO NOT edit this file.
 * Add custom logic to CourseModule.php instead.
 *
 * @generated by Genmax Code Generator
 */
#[ORM\MappedSuperclass]
#[ORM\HasLifecycleCallbacks]
abstract class CourseModuleGenerated extends EntityBase
{
    #[ORM\Column(type: 'string', length: 255)]
    protected string $name;

    #[ORM\Column(type: 'text', nullable: true)]
    protected ?string $description = null;

    #[ORM\Column(type: 'datetime_immutable', nullable: true)]
    protected ?\DateTimeImmutable $releaseDate = null;

    #[ORM\Column(type: 'integer')]
    protected int $viewOrder = 0;

    #[ORM\Column(type: 'integer')]
    protected int $totalLengthSeconds = 0;

    #[ORM\ManyToOne(targetEntity: Course::class, inversedBy: 'modules')]
    #[ORM\JoinColumn(nullable: false)]
    protected Course $course;

    #[ORM\OneToMany(targetEntity: CourseLecture::class, mappedBy: 'courseModule', fetch: 'LAZY')]
    protected Collection $lectures;

    #[ORM\Column(type: 'boolean')]
    protected bool $active = true;


    public function __construct()
    {
        parent::__construct();
        $this->lectures = new ArrayCollection();
    }

    public function getName(): string    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;
        return $this;
    }

    public function getDescription(): ?string    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getReleasedate(): ?\DateTimeImmutable    {
        return $this->releaseDate;
    }

    public function setReleasedate(?\DateTimeImmutable $releaseDate): self
    {
        $this->releaseDate = $releaseDate;
        return $this;
    }

    public function getVieworder(): int    {
        return $this->viewOrder;
    }

    public function setVieworder(int $viewOrder): self
    {
        $this->viewOrder = $viewOrder;
        return $this;
    }

    public function getTotallengthseconds(): int    {
        return $this->totalLengthSeconds;
    }

    public function setTotallengthseconds(int $totalLengthSeconds): self
    {
        $this->totalLengthSeconds = $totalLengthSeconds;
        return $this;
    }

    public function getCourse(): App\Entity\Course
    {
        return $this->course;
    }

    public function setCourse(App\Entity\Course $course): self
    {
        $this->course = $course;
        return $this;
    }

    /**
     * @return Collection<int, App\Entity\CourseLecture>
     */
    public function getLectures(): Collection
    {
        return $this->lectures;
    }

    public function addLecture(App\Entity\CourseLecture $lecture): self
    {
        if (!$this->lectures->contains($lecture)) {
            $this->lectures->add($lecture);
            $lecture->setCoursemodule($this);
        }
        return $this;
    }

    public function removeLecture(App\Entity\CourseLecture $lecture): self
    {
        if ($this->lectures->removeElement($lecture)) {
            if ($lecture->getCoursemodule() === $this) {
                $lecture->setCoursemodule(null);
            }
        }
        return $this;
    }

    public function getActive(): bool    {
        return $this->active;
    }

    public function setActive(bool $active): self
    {
        $this->active = $active;
        return $this;
    }

    public function isActive(): bool
    {
        return $this->active === true;
    }


    public function __toString(): string
    {
        return $this->name ?? ($this->getId()?->toRfc4122() ?? '');
    }
}
